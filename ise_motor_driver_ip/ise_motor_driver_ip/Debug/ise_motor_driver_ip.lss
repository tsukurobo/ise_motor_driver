
ise_motor_driver_ip.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000012d8  0000136c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000428  00800104  00800104  00001370  2**0
                  ALLOC
  3 .stab         00002bec  00000000  00000000  00001370  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000009ba  00000000  00000000  00003f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  00004918  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000130a  00000000  00000000  00004a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000819  00000000  00000000  00005da2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c43  00000000  00000000  000065bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000340  00000000  00000000  00007200  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000665  00000000  00000000  00007540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000aee  00000000  00000000  00007ba5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00008693  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 12 03 	jmp	0x624	; 0x624 <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__vector_24>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 ed       	ldi	r30, 0xD8	; 216
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a4 30       	cpi	r26, 0x04	; 4
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	15 e0       	ldi	r17, 0x05	; 5
      8c:	a4 e0       	ldi	r26, 0x04	; 4
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ac 32       	cpi	r26, 0x2C	; 44
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 86 03 	call	0x70c	; 0x70c <main>
      9e:	0c 94 6a 09 	jmp	0x12d4	; 0x12d4 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z16I2C_setCallbacksPFvhEPFvvE>:
static void (*I2C_recv)(uint8_t);
static void (*I2C_req)();

void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)())
{
	I2C_recv = recv;
      a6:	90 93 05 01 	sts	0x0105, r25
      aa:	80 93 04 01 	sts	0x0104, r24
	I2C_req = req;
      ae:	70 93 07 01 	sts	0x0107, r23
      b2:	60 93 06 01 	sts	0x0106, r22
}
      b6:	08 95       	ret

000000b8 <_Z8I2C_inith>:

void I2C_init(uint8_t address)
{
	cli();
      b8:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
      ba:	88 0f       	add	r24, r24
      bc:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
      c0:	85 ec       	ldi	r24, 0xC5	; 197
      c2:	80 93 bc 00 	sts	0x00BC, r24
	sei();
      c6:	78 94       	sei
}
      c8:	08 95       	ret

000000ca <_Z13I2C_init_synch>:

void I2C_init_sync(uint8_t address)
{
	cli();
      ca:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
      cc:	88 0f       	add	r24, r24
      ce:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
      d2:	84 ec       	ldi	r24, 0xC4	; 196
      d4:	80 93 bc 00 	sts	0x00BC, r24
	sei();
      d8:	78 94       	sei
}
      da:	08 95       	ret

000000dc <_Z8I2C_stopv>:

void I2C_stop(void)
{
	// clear acknowledge and enable bits
	cli();
      dc:	f8 94       	cli
	TWCR = 0;
      de:	10 92 bc 00 	sts	0x00BC, r1
	TWAR = 0;
      e2:	10 92 ba 00 	sts	0x00BA, r1
	sei();
      e6:	78 94       	sei
}
      e8:	08 95       	ret

000000ea <_Z8I2C_mainv>:

void I2C_main()
{
	//é©à∂SLA+RéÛêMÇ‹Ç≈ë“ã@
	while( !(TWCR & (1 << TWINT))){
      ea:	ec eb       	ldi	r30, 0xBC	; 188
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	88 23       	and	r24, r24
      f2:	ec f7       	brge	.-6      	; 0xee <_Z8I2C_mainv+0x4>
	//_delay_us(10);
	}
		
	switch(TW_STATUS)
      f4:	80 91 b9 00 	lds	r24, 0x00B9
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	88 7f       	andi	r24, 0xF8	; 248
      fc:	90 70       	andi	r25, 0x00	; 0
      fe:	80 38       	cpi	r24, 0x80	; 128
     100:	91 05       	cpc	r25, r1
     102:	69 f0       	breq	.+26     	; 0x11e <_Z8I2C_mainv+0x34>
     104:	81 38       	cpi	r24, 0x81	; 129
     106:	91 05       	cpc	r25, r1
     108:	1c f4       	brge	.+6      	; 0x110 <_Z8I2C_mainv+0x26>
     10a:	00 97       	sbiw	r24, 0x00	; 0
     10c:	29 f1       	breq	.+74     	; 0x158 <_Z8I2C_mainv+0x6e>
     10e:	2a c0       	rjmp	.+84     	; 0x164 <_Z8I2C_mainv+0x7a>
     110:	88 3a       	cpi	r24, 0xA8	; 168
     112:	91 05       	cpc	r25, r1
     114:	79 f0       	breq	.+30     	; 0x134 <_Z8I2C_mainv+0x4a>
     116:	88 3b       	cpi	r24, 0xB8	; 184
     118:	91 05       	cpc	r25, r1
     11a:	21 f5       	brne	.+72     	; 0x164 <_Z8I2C_mainv+0x7a>
     11c:	14 c0       	rjmp	.+40     	; 0x146 <_Z8I2C_mainv+0x5c>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     11e:	80 91 bb 00 	lds	r24, 0x00BB
     122:	e0 91 04 01 	lds	r30, 0x0104
     126:	f0 91 05 01 	lds	r31, 0x0105
     12a:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     12c:	84 ec       	ldi	r24, 0xC4	; 196
     12e:	80 93 bc 00 	sts	0x00BC, r24
		break;
     132:	08 95       	ret
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     134:	e0 91 06 01 	lds	r30, 0x0106
     138:	f0 91 07 01 	lds	r31, 0x0107
     13c:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     13e:	84 ec       	ldi	r24, 0xC4	; 196
     140:	80 93 bc 00 	sts	0x00BC, r24
		break;
     144:	08 95       	ret
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     146:	e0 91 06 01 	lds	r30, 0x0106
     14a:	f0 91 07 01 	lds	r31, 0x0107
     14e:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     150:	84 ec       	ldi	r24, 0xC4	; 196
     152:	80 93 bc 00 	sts	0x00BC, r24
		break;
     156:	08 95       	ret
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     158:	ec eb       	ldi	r30, 0xBC	; 188
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	10 82       	st	Z, r1
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     15e:	84 ec       	ldi	r24, 0xC4	; 196
     160:	80 83       	st	Z, r24
		break;
     162:	08 95       	ret
		default:
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     164:	84 ec       	ldi	r24, 0xC4	; 196
     166:	80 93 bc 00 	sts	0x00BC, r24
     16a:	08 95       	ret

0000016c <_Z8I2C_bodyv>:
		break;
	}
}

void I2C_body() {
	switch(TW_STATUS)
     16c:	80 91 b9 00 	lds	r24, 0x00B9
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	88 7f       	andi	r24, 0xF8	; 248
     174:	90 70       	andi	r25, 0x00	; 0
     176:	80 38       	cpi	r24, 0x80	; 128
     178:	91 05       	cpc	r25, r1
     17a:	69 f0       	breq	.+26     	; 0x196 <_Z8I2C_bodyv+0x2a>
     17c:	81 38       	cpi	r24, 0x81	; 129
     17e:	91 05       	cpc	r25, r1
     180:	1c f4       	brge	.+6      	; 0x188 <_Z8I2C_bodyv+0x1c>
     182:	00 97       	sbiw	r24, 0x00	; 0
     184:	29 f1       	breq	.+74     	; 0x1d0 <_Z8I2C_bodyv+0x64>
     186:	2a c0       	rjmp	.+84     	; 0x1dc <_Z8I2C_bodyv+0x70>
     188:	88 3a       	cpi	r24, 0xA8	; 168
     18a:	91 05       	cpc	r25, r1
     18c:	79 f0       	breq	.+30     	; 0x1ac <_Z8I2C_bodyv+0x40>
     18e:	88 3b       	cpi	r24, 0xB8	; 184
     190:	91 05       	cpc	r25, r1
     192:	21 f5       	brne	.+72     	; 0x1dc <_Z8I2C_bodyv+0x70>
     194:	14 c0       	rjmp	.+40     	; 0x1be <_Z8I2C_bodyv+0x52>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     196:	80 91 bb 00 	lds	r24, 0x00BB
     19a:	e0 91 04 01 	lds	r30, 0x0104
     19e:	f0 91 05 01 	lds	r31, 0x0105
     1a2:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1a4:	84 ec       	ldi	r24, 0xC4	; 196
     1a6:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1aa:	08 95       	ret
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     1ac:	e0 91 06 01 	lds	r30, 0x0106
     1b0:	f0 91 07 01 	lds	r31, 0x0107
     1b4:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1b6:	84 ec       	ldi	r24, 0xC4	; 196
     1b8:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1bc:	08 95       	ret
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     1be:	e0 91 06 01 	lds	r30, 0x0106
     1c2:	f0 91 07 01 	lds	r31, 0x0107
     1c6:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1c8:	84 ec       	ldi	r24, 0xC4	; 196
     1ca:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1ce:	08 95       	ret
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     1d0:	ec eb       	ldi	r30, 0xBC	; 188
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	10 82       	st	Z, r1
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1d6:	84 ec       	ldi	r24, 0xC4	; 196
     1d8:	80 83       	st	Z, r24
		break;
     1da:	08 95       	ret
		default:
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1dc:	84 ec       	ldi	r24, 0xC4	; 196
     1de:	80 93 bc 00 	sts	0x00BC, r24
     1e2:	08 95       	ret

000001e4 <__vector_24>:
	
}


ISR(TWI_vect)
{
     1e4:	1f 92       	push	r1
     1e6:	0f 92       	push	r0
     1e8:	0f b6       	in	r0, 0x3f	; 63
     1ea:	0f 92       	push	r0
     1ec:	11 24       	eor	r1, r1
     1ee:	2f 93       	push	r18
     1f0:	3f 93       	push	r19
     1f2:	4f 93       	push	r20
     1f4:	5f 93       	push	r21
     1f6:	6f 93       	push	r22
     1f8:	7f 93       	push	r23
     1fa:	8f 93       	push	r24
     1fc:	9f 93       	push	r25
     1fe:	af 93       	push	r26
     200:	bf 93       	push	r27
     202:	ef 93       	push	r30
     204:	ff 93       	push	r31
	switch(TW_STATUS)
     206:	80 91 b9 00 	lds	r24, 0x00B9
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	88 7f       	andi	r24, 0xF8	; 248
     20e:	90 70       	andi	r25, 0x00	; 0
     210:	80 38       	cpi	r24, 0x80	; 128
     212:	91 05       	cpc	r25, r1
     214:	69 f0       	breq	.+26     	; 0x230 <__vector_24+0x4c>
     216:	81 38       	cpi	r24, 0x81	; 129
     218:	91 05       	cpc	r25, r1
     21a:	1c f4       	brge	.+6      	; 0x222 <__vector_24+0x3e>
     21c:	00 97       	sbiw	r24, 0x00	; 0
     21e:	29 f1       	breq	.+74     	; 0x26a <__vector_24+0x86>
     220:	2a c0       	rjmp	.+84     	; 0x276 <__vector_24+0x92>
     222:	88 3a       	cpi	r24, 0xA8	; 168
     224:	91 05       	cpc	r25, r1
     226:	79 f0       	breq	.+30     	; 0x246 <__vector_24+0x62>
     228:	88 3b       	cpi	r24, 0xB8	; 184
     22a:	91 05       	cpc	r25, r1
     22c:	21 f5       	brne	.+72     	; 0x276 <__vector_24+0x92>
     22e:	14 c0       	rjmp	.+40     	; 0x258 <__vector_24+0x74>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     230:	80 91 bb 00 	lds	r24, 0x00BB
     234:	e0 91 04 01 	lds	r30, 0x0104
     238:	f0 91 05 01 	lds	r31, 0x0105
     23c:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     23e:	85 ec       	ldi	r24, 0xC5	; 197
     240:	80 93 bc 00 	sts	0x00BC, r24
		break;
     244:	1b c0       	rjmp	.+54     	; 0x27c <__vector_24+0x98>
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     246:	e0 91 06 01 	lds	r30, 0x0106
     24a:	f0 91 07 01 	lds	r31, 0x0107
     24e:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     250:	85 ec       	ldi	r24, 0xC5	; 197
     252:	80 93 bc 00 	sts	0x00BC, r24
		break;
     256:	12 c0       	rjmp	.+36     	; 0x27c <__vector_24+0x98>
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     258:	e0 91 06 01 	lds	r30, 0x0106
     25c:	f0 91 07 01 	lds	r31, 0x0107
     260:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     262:	85 ec       	ldi	r24, 0xC5	; 197
     264:	80 93 bc 00 	sts	0x00BC, r24
		break;
     268:	09 c0       	rjmp	.+18     	; 0x27c <__vector_24+0x98>
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     26a:	ec eb       	ldi	r30, 0xBC	; 188
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     270:	85 ec       	ldi	r24, 0xC5	; 197
     272:	80 83       	st	Z, r24
		break;
     274:	03 c0       	rjmp	.+6      	; 0x27c <__vector_24+0x98>
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     276:	85 ec       	ldi	r24, 0xC5	; 197
     278:	80 93 bc 00 	sts	0x00BC, r24
		break;
	}
     27c:	ff 91       	pop	r31
     27e:	ef 91       	pop	r30
     280:	bf 91       	pop	r27
     282:	af 91       	pop	r26
     284:	9f 91       	pop	r25
     286:	8f 91       	pop	r24
     288:	7f 91       	pop	r23
     28a:	6f 91       	pop	r22
     28c:	5f 91       	pop	r21
     28e:	4f 91       	pop	r20
     290:	3f 91       	pop	r19
     292:	2f 91       	pop	r18
     294:	0f 90       	pop	r0
     296:	0f be       	out	0x3f, r0	; 63
     298:	0f 90       	pop	r0
     29a:	1f 90       	pop	r1
     29c:	18 95       	reti

0000029e <_Z14i2c_request_cbPc>:
}

void i2c_request_cb(char* buf) {
	// set TI2C_buf_send.str_buf
	//strcpy(buf, "Hello World\n");
	sprintf(buf,"%ld",count);
     29e:	40 91 10 01 	lds	r20, 0x0110
     2a2:	50 91 11 01 	lds	r21, 0x0111
     2a6:	60 91 12 01 	lds	r22, 0x0112
     2aa:	70 91 13 01 	lds	r23, 0x0113
     2ae:	2d b7       	in	r18, 0x3d	; 61
     2b0:	3e b7       	in	r19, 0x3e	; 62
     2b2:	28 50       	subi	r18, 0x08	; 8
     2b4:	30 40       	sbci	r19, 0x00	; 0
     2b6:	0f b6       	in	r0, 0x3f	; 63
     2b8:	f8 94       	cli
     2ba:	3e bf       	out	0x3e, r19	; 62
     2bc:	0f be       	out	0x3f, r0	; 63
     2be:	2d bf       	out	0x3d, r18	; 61
     2c0:	ed b7       	in	r30, 0x3d	; 61
     2c2:	fe b7       	in	r31, 0x3e	; 62
     2c4:	31 96       	adiw	r30, 0x01	; 1
     2c6:	ad b7       	in	r26, 0x3d	; 61
     2c8:	be b7       	in	r27, 0x3e	; 62
     2ca:	12 96       	adiw	r26, 0x02	; 2
     2cc:	9c 93       	st	X, r25
     2ce:	8e 93       	st	-X, r24
     2d0:	11 97       	sbiw	r26, 0x01	; 1
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	93 83       	std	Z+3, r25	; 0x03
     2d8:	82 83       	std	Z+2, r24	; 0x02
     2da:	44 83       	std	Z+4, r20	; 0x04
     2dc:	55 83       	std	Z+5, r21	; 0x05
     2de:	66 83       	std	Z+6, r22	; 0x06
     2e0:	77 83       	std	Z+7, r23	; 0x07
     2e2:	0e 94 93 06 	call	0xd26	; 0xd26 <sprintf>
     2e6:	2d b7       	in	r18, 0x3d	; 61
     2e8:	3e b7       	in	r19, 0x3e	; 62
     2ea:	28 5f       	subi	r18, 0xF8	; 248
     2ec:	3f 4f       	sbci	r19, 0xFF	; 255
     2ee:	0f b6       	in	r0, 0x3f	; 63
     2f0:	f8 94       	cli
     2f2:	3e bf       	out	0x3e, r19	; 62
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	2d bf       	out	0x3d, r18	; 61
}
     2f8:	08 95       	ret

000002fa <_Z15i2c_received_cbPc>:
volatile int target_enc = 0;
volatile long timer_count = 0;

void i2c_received_cb(char* str) {
	//motor_set_speed(atoi(str));
	target_enc = atoi(str);
     2fa:	0e 94 6d 06 	call	0xcda	; 0xcda <atoi>
     2fe:	90 93 0d 01 	sts	0x010D, r25
     302:	80 93 0c 01 	sts	0x010C, r24
}
     306:	08 95       	ret

00000308 <_Z3pidv>:
	// set TI2C_buf_send.str_buf
	//strcpy(buf, "Hello World\n");
	sprintf(buf,"%ld",count);
}

void pid() {
     308:	4f 92       	push	r4
     30a:	5f 92       	push	r5
     30c:	6f 92       	push	r6
     30e:	7f 92       	push	r7
     310:	8f 92       	push	r8
     312:	9f 92       	push	r9
     314:	af 92       	push	r10
     316:	bf 92       	push	r11
     318:	df 92       	push	r13
     31a:	ef 92       	push	r14
     31c:	ff 92       	push	r15
     31e:	0f 93       	push	r16
     320:	1f 93       	push	r17
     322:	cf 93       	push	r28
     324:	df 93       	push	r29
     326:	00 d0       	rcall	.+0      	; 0x328 <_Z3pidv+0x20>
     328:	00 d0       	rcall	.+0      	; 0x32a <_Z3pidv+0x22>
     32a:	cd b7       	in	r28, 0x3d	; 61
     32c:	de b7       	in	r29, 0x3e	; 62
  
  static double integral ;
  static double now_diff;   
  static double pre_enc;	
  static double pre_diff;
  double now_enc = count;
     32e:	80 91 10 01 	lds	r24, 0x0110
     332:	90 91 11 01 	lds	r25, 0x0111
     336:	a0 91 12 01 	lds	r26, 0x0112
     33a:	b0 91 13 01 	lds	r27, 0x0113

  
  now_enc = count;
     33e:	60 91 10 01 	lds	r22, 0x0110
     342:	70 91 11 01 	lds	r23, 0x0111
     346:	80 91 12 01 	lds	r24, 0x0112
     34a:	90 91 13 01 	lds	r25, 0x0113
     34e:	0e 94 56 05 	call	0xaac	; 0xaac <__floatsisf>
     352:	d6 2e       	mov	r13, r22
     354:	47 2e       	mov	r4, r23
     356:	f8 2e       	mov	r15, r24
     358:	e9 2e       	mov	r14, r25
     35a:	86 2f       	mov	r24, r22
     35c:	94 2d       	mov	r25, r4
     35e:	af 2d       	mov	r26, r15
     360:	be 2d       	mov	r27, r14
     362:	89 83       	std	Y+1, r24	; 0x01
     364:	9a 83       	std	Y+2, r25	; 0x02
     366:	ab 83       	std	Y+3, r26	; 0x03
     368:	bc 83       	std	Y+4, r27	; 0x04
  pre_diff = now_diff;
     36a:	80 90 14 01 	lds	r8, 0x0114
     36e:	90 90 15 01 	lds	r9, 0x0115
     372:	a0 90 16 01 	lds	r10, 0x0116
     376:	b0 90 17 01 	lds	r11, 0x0117
     37a:	80 92 18 01 	sts	0x0118, r8
     37e:	90 92 19 01 	sts	0x0119, r9
     382:	a0 92 1a 01 	sts	0x011A, r10
     386:	b0 92 1b 01 	sts	0x011B, r11
  now_diff = target_enc - now_enc;
     38a:	60 91 0c 01 	lds	r22, 0x010C
     38e:	70 91 0d 01 	lds	r23, 0x010D
     392:	88 27       	eor	r24, r24
     394:	77 fd       	sbrc	r23, 7
     396:	80 95       	com	r24
     398:	98 2f       	mov	r25, r24
     39a:	0e 94 56 05 	call	0xaac	; 0xaac <__floatsisf>
     39e:	0d 2d       	mov	r16, r13
     3a0:	14 2d       	mov	r17, r4
     3a2:	2f 2d       	mov	r18, r15
     3a4:	3e 2d       	mov	r19, r14
     3a6:	a9 01       	movw	r20, r18
     3a8:	98 01       	movw	r18, r16
     3aa:	0e 94 52 04 	call	0x8a4	; 0x8a4 <__subsf3>
     3ae:	f6 2e       	mov	r15, r22
     3b0:	07 2f       	mov	r16, r23
     3b2:	18 2f       	mov	r17, r24
     3b4:	e9 2e       	mov	r14, r25
     3b6:	86 2f       	mov	r24, r22
     3b8:	90 2f       	mov	r25, r16
     3ba:	a1 2f       	mov	r26, r17
     3bc:	be 2d       	mov	r27, r14
     3be:	80 93 14 01 	sts	0x0114, r24
     3c2:	90 93 15 01 	sts	0x0115, r25
     3c6:	a0 93 16 01 	sts	0x0116, r26
     3ca:	b0 93 17 01 	sts	0x0117, r27
  if(now_diff>320)power=max_pow;
     3ce:	bc 01       	movw	r22, r24
     3d0:	cd 01       	movw	r24, r26
     3d2:	20 e0       	ldi	r18, 0x00	; 0
     3d4:	30 e0       	ldi	r19, 0x00	; 0
     3d6:	40 ea       	ldi	r20, 0xA0	; 160
     3d8:	53 e4       	ldi	r21, 0x43	; 67
     3da:	0e 94 06 06 	call	0xc0c	; 0xc0c <__gesf2>
     3de:	18 16       	cp	r1, r24
     3e0:	6c f4       	brge	.+26     	; 0x3fc <_Z3pidv+0xf4>
     3e2:	80 e0       	ldi	r24, 0x00	; 0
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	a0 ef       	ldi	r26, 0xF0	; 240
     3e8:	b1 e4       	ldi	r27, 0x41	; 65
     3ea:	80 93 1c 01 	sts	0x011C, r24
     3ee:	90 93 1d 01 	sts	0x011D, r25
     3f2:	a0 93 1e 01 	sts	0x011E, r26
     3f6:	b0 93 1f 01 	sts	0x011F, r27
     3fa:	e2 c0       	rjmp	.+452    	; 0x5c0 <_Z3pidv+0x2b8>
  else if(now_diff<-320)power=-max_pow;
     3fc:	8f 2d       	mov	r24, r15
     3fe:	90 2f       	mov	r25, r16
     400:	a1 2f       	mov	r26, r17
     402:	be 2d       	mov	r27, r14
     404:	bc 01       	movw	r22, r24
     406:	cd 01       	movw	r24, r26
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	40 ea       	ldi	r20, 0xA0	; 160
     40e:	53 ec       	ldi	r21, 0xC3	; 195
     410:	0e 94 b7 04 	call	0x96e	; 0x96e <__cmpsf2>
     414:	88 23       	and	r24, r24
     416:	6c f4       	brge	.+26     	; 0x432 <_Z3pidv+0x12a>
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	a0 ef       	ldi	r26, 0xF0	; 240
     41e:	b1 ec       	ldi	r27, 0xC1	; 193
     420:	80 93 1c 01 	sts	0x011C, r24
     424:	90 93 1d 01 	sts	0x011D, r25
     428:	a0 93 1e 01 	sts	0x011E, r26
     42c:	b0 93 1f 01 	sts	0x011F, r27
     430:	c7 c0       	rjmp	.+398    	; 0x5c0 <_Z3pidv+0x2b8>
  else{
  integral += now_diff * dt;
     432:	8f 2d       	mov	r24, r15
     434:	90 2f       	mov	r25, r16
     436:	a1 2f       	mov	r26, r17
     438:	be 2d       	mov	r27, r14
     43a:	bc 01       	movw	r22, r24
     43c:	cd 01       	movw	r24, r26
     43e:	27 e1       	ldi	r18, 0x17	; 23
     440:	37 eb       	ldi	r19, 0xB7	; 183
     442:	41 ed       	ldi	r20, 0xD1	; 209
     444:	58 e3       	ldi	r21, 0x38	; 56
     446:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     44a:	20 91 20 01 	lds	r18, 0x0120
     44e:	30 91 21 01 	lds	r19, 0x0121
     452:	40 91 22 01 	lds	r20, 0x0122
     456:	50 91 23 01 	lds	r21, 0x0123
     45a:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__addsf3>
     45e:	26 2f       	mov	r18, r22
     460:	37 2f       	mov	r19, r23
     462:	f8 2f       	mov	r31, r24
     464:	e9 2f       	mov	r30, r25
     466:	46 2f       	mov	r20, r22
     468:	57 2f       	mov	r21, r23
     46a:	68 2f       	mov	r22, r24
     46c:	79 2f       	mov	r23, r25
     46e:	40 93 20 01 	sts	0x0120, r20
     472:	50 93 21 01 	sts	0x0121, r21
     476:	60 93 22 01 	sts	0x0122, r22
     47a:	70 93 23 01 	sts	0x0123, r23

  p = KP * now_diff;
  i = KI * integral ;
     47e:	82 2f       	mov	r24, r18
     480:	93 2f       	mov	r25, r19
     482:	af 2f       	mov	r26, r31
     484:	be 2f       	mov	r27, r30
     486:	bc 01       	movw	r22, r24
     488:	cd 01       	movw	r24, r26
     48a:	2a e0       	ldi	r18, 0x0A	; 10
     48c:	37 ed       	ldi	r19, 0xD7	; 215
     48e:	43 e2       	ldi	r20, 0x23	; 35
     490:	5c e3       	ldi	r21, 0x3C	; 60
     492:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     496:	9b 01       	movw	r18, r22
     498:	ac 01       	movw	r20, r24
  d = KD * (now_diff - pre_diff) /dt;
  
  //power = power+ p + i + d;
  power = p + i + d;
     49a:	8f 2d       	mov	r24, r15
     49c:	90 2f       	mov	r25, r16
     49e:	a1 2f       	mov	r26, r17
     4a0:	be 2d       	mov	r27, r14
     4a2:	bc 01       	movw	r22, r24
     4a4:	cd 01       	movw	r24, r26
     4a6:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__addsf3>
     4aa:	2b 01       	movw	r4, r22
     4ac:	3c 01       	movw	r6, r24
  else{
  integral += now_diff * dt;

  p = KP * now_diff;
  i = KI * integral ;
  d = KD * (now_diff - pre_diff) /dt;
     4ae:	8f 2d       	mov	r24, r15
     4b0:	90 2f       	mov	r25, r16
     4b2:	a1 2f       	mov	r26, r17
     4b4:	be 2d       	mov	r27, r14
     4b6:	bc 01       	movw	r22, r24
     4b8:	cd 01       	movw	r24, r26
     4ba:	a5 01       	movw	r20, r10
     4bc:	94 01       	movw	r18, r8
     4be:	0e 94 52 04 	call	0x8a4	; 0x8a4 <__subsf3>
     4c2:	2a e0       	ldi	r18, 0x0A	; 10
     4c4:	37 ed       	ldi	r19, 0xD7	; 215
     4c6:	43 e2       	ldi	r20, 0x23	; 35
     4c8:	5c e3       	ldi	r21, 0x3C	; 60
     4ca:	0e 94 0a 06 	call	0xc14	; 0xc14 <__mulsf3>
     4ce:	27 e1       	ldi	r18, 0x17	; 23
     4d0:	37 eb       	ldi	r19, 0xB7	; 183
     4d2:	41 ed       	ldi	r20, 0xD1	; 209
     4d4:	58 e3       	ldi	r21, 0x38	; 56
     4d6:	0e 94 bb 04 	call	0x976	; 0x976 <__divsf3>
     4da:	9b 01       	movw	r18, r22
     4dc:	ac 01       	movw	r20, r24
  
  //power = power+ p + i + d;
  power = p + i + d;
     4de:	c3 01       	movw	r24, r6
     4e0:	b2 01       	movw	r22, r4
     4e2:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__addsf3>
     4e6:	f6 2e       	mov	r15, r22
     4e8:	07 2f       	mov	r16, r23
     4ea:	18 2f       	mov	r17, r24
     4ec:	e9 2e       	mov	r14, r25
     4ee:	86 2f       	mov	r24, r22
     4f0:	90 2f       	mov	r25, r16
     4f2:	a1 2f       	mov	r26, r17
     4f4:	be 2d       	mov	r27, r14
     4f6:	80 93 1c 01 	sts	0x011C, r24
     4fa:	90 93 1d 01 	sts	0x011D, r25
     4fe:	a0 93 1e 01 	sts	0x011E, r26
     502:	b0 93 1f 01 	sts	0x011F, r27
  if(fabs(target_enc)<0.05 && fabs(now_enc)<0.01 /*&&fabs(power) < 10*/)
     506:	60 91 0c 01 	lds	r22, 0x010C
     50a:	70 91 0d 01 	lds	r23, 0x010D
     50e:	88 27       	eor	r24, r24
     510:	77 fd       	sbrc	r23, 7
     512:	80 95       	com	r24
     514:	98 2f       	mov	r25, r24
     516:	0e 94 56 05 	call	0xaac	; 0xaac <__floatsisf>
     51a:	9f 77       	andi	r25, 0x7F	; 127
     51c:	2d ec       	ldi	r18, 0xCD	; 205
     51e:	3c ec       	ldi	r19, 0xCC	; 204
     520:	4c e4       	ldi	r20, 0x4C	; 76
     522:	5d e3       	ldi	r21, 0x3D	; 61
     524:	0e 94 b7 04 	call	0x96e	; 0x96e <__cmpsf2>
     528:	88 23       	and	r24, r24
     52a:	0c f0       	brlt	.+2      	; 0x52e <_Z3pidv+0x226>
     52c:	6b c0       	rjmp	.+214    	; 0x604 <_Z3pidv+0x2fc>
     52e:	69 81       	ldd	r22, Y+1	; 0x01
     530:	7a 81       	ldd	r23, Y+2	; 0x02
     532:	8b 81       	ldd	r24, Y+3	; 0x03
     534:	9c 81       	ldd	r25, Y+4	; 0x04
     536:	9f 77       	andi	r25, 0x7F	; 127
     538:	2a e0       	ldi	r18, 0x0A	; 10
     53a:	37 ed       	ldi	r19, 0xD7	; 215
     53c:	43 e2       	ldi	r20, 0x23	; 35
     53e:	5c e3       	ldi	r21, 0x3C	; 60
     540:	0e 94 b7 04 	call	0x96e	; 0x96e <__cmpsf2>
     544:	88 23       	and	r24, r24
     546:	0c f0       	brlt	.+2      	; 0x54a <_Z3pidv+0x242>
     548:	5d c0       	rjmp	.+186    	; 0x604 <_Z3pidv+0x2fc>
  {
    integral = 0;
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	dc 01       	movw	r26, r24
     550:	80 93 20 01 	sts	0x0120, r24
     554:	90 93 21 01 	sts	0x0121, r25
     558:	a0 93 22 01 	sts	0x0122, r26
     55c:	b0 93 23 01 	sts	0x0123, r27
    power = 0;
     560:	80 93 1c 01 	sts	0x011C, r24
     564:	90 93 1d 01 	sts	0x011D, r25
     568:	a0 93 1e 01 	sts	0x011E, r26
     56c:	b0 93 1f 01 	sts	0x011F, r27
     570:	27 c0       	rjmp	.+78     	; 0x5c0 <_Z3pidv+0x2b8>

  }
  else if(max_pow < power )
    power = max_pow;
     572:	80 e0       	ldi	r24, 0x00	; 0
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	a0 ef       	ldi	r26, 0xF0	; 240
     578:	b1 e4       	ldi	r27, 0x41	; 65
     57a:	80 93 1c 01 	sts	0x011C, r24
     57e:	90 93 1d 01 	sts	0x011D, r25
     582:	a0 93 1e 01 	sts	0x011E, r26
     586:	b0 93 1f 01 	sts	0x011F, r27
     58a:	1a c0       	rjmp	.+52     	; 0x5c0 <_Z3pidv+0x2b8>
  else if(power < -max_pow)
     58c:	8f 2d       	mov	r24, r15
     58e:	90 2f       	mov	r25, r16
     590:	a1 2f       	mov	r26, r17
     592:	be 2d       	mov	r27, r14
     594:	bc 01       	movw	r22, r24
     596:	cd 01       	movw	r24, r26
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	40 ef       	ldi	r20, 0xF0	; 240
     59e:	51 ec       	ldi	r21, 0xC1	; 193
     5a0:	0e 94 b7 04 	call	0x96e	; 0x96e <__cmpsf2>
     5a4:	88 23       	and	r24, r24
     5a6:	64 f4       	brge	.+24     	; 0x5c0 <_Z3pidv+0x2b8>
    power = -max_pow;
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	a0 ef       	ldi	r26, 0xF0	; 240
     5ae:	b1 ec       	ldi	r27, 0xC1	; 193
     5b0:	80 93 1c 01 	sts	0x011C, r24
     5b4:	90 93 1d 01 	sts	0x011D, r25
     5b8:	a0 93 1e 01 	sts	0x011E, r26
     5bc:	b0 93 1f 01 	sts	0x011F, r27
  }
 //return power;  
	motor_set_speed(power);
     5c0:	60 91 1c 01 	lds	r22, 0x011C
     5c4:	70 91 1d 01 	lds	r23, 0x011D
     5c8:	80 91 1e 01 	lds	r24, 0x011E
     5cc:	90 91 1f 01 	lds	r25, 0x011F
     5d0:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixsfsi>
     5d4:	dc 01       	movw	r26, r24
     5d6:	cb 01       	movw	r24, r22
     5d8:	0e 94 cd 03 	call	0x79a	; 0x79a <_Z15motor_set_speedi>
}
     5dc:	0f 90       	pop	r0
     5de:	0f 90       	pop	r0
     5e0:	0f 90       	pop	r0
     5e2:	0f 90       	pop	r0
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	1f 91       	pop	r17
     5ea:	0f 91       	pop	r16
     5ec:	ff 90       	pop	r15
     5ee:	ef 90       	pop	r14
     5f0:	df 90       	pop	r13
     5f2:	bf 90       	pop	r11
     5f4:	af 90       	pop	r10
     5f6:	9f 90       	pop	r9
     5f8:	8f 90       	pop	r8
     5fa:	7f 90       	pop	r7
     5fc:	6f 90       	pop	r6
     5fe:	5f 90       	pop	r5
     600:	4f 90       	pop	r4
     602:	08 95       	ret
  {
    integral = 0;
    power = 0;

  }
  else if(max_pow < power )
     604:	8f 2d       	mov	r24, r15
     606:	90 2f       	mov	r25, r16
     608:	a1 2f       	mov	r26, r17
     60a:	be 2d       	mov	r27, r14
     60c:	bc 01       	movw	r22, r24
     60e:	cd 01       	movw	r24, r26
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	40 ef       	ldi	r20, 0xF0	; 240
     616:	51 e4       	ldi	r21, 0x41	; 65
     618:	0e 94 06 06 	call	0xc0c	; 0xc0c <__gesf2>
     61c:	18 16       	cp	r1, r24
     61e:	0c f0       	brlt	.+2      	; 0x622 <_Z3pidv+0x31a>
     620:	b5 cf       	rjmp	.-150    	; 0x58c <_Z3pidv+0x284>
     622:	a7 cf       	rjmp	.-178    	; 0x572 <_Z3pidv+0x26a>

00000624 <__vector_4>:
  }
 //return power;  
	motor_set_speed(power);
}

ISR(PCINT1_vect, ISR_NOBLOCK){//encorder
     624:	78 94       	sei
     626:	1f 92       	push	r1
     628:	0f 92       	push	r0
     62a:	0f b6       	in	r0, 0x3f	; 63
     62c:	0f 92       	push	r0
     62e:	11 24       	eor	r1, r1
     630:	2f 93       	push	r18
     632:	3f 93       	push	r19
     634:	8f 93       	push	r24
     636:	9f 93       	push	r25
     638:	af 93       	push	r26
     63a:	bf 93       	push	r27
	if((PINC & (1 << PINC0)) ^ ((PINC & (1 << PINC1))>> 1))--count;
     63c:	26 b1       	in	r18, 0x06	; 6
     63e:	86 b1       	in	r24, 0x06	; 6
     640:	30 e0       	ldi	r19, 0x00	; 0
     642:	21 70       	andi	r18, 0x01	; 1
     644:	30 70       	andi	r19, 0x00	; 0
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	82 70       	andi	r24, 0x02	; 2
     64a:	90 70       	andi	r25, 0x00	; 0
     64c:	95 95       	asr	r25
     64e:	87 95       	ror	r24
     650:	28 17       	cp	r18, r24
     652:	39 07       	cpc	r19, r25
     654:	a1 f0       	breq	.+40     	; 0x67e <__vector_4+0x5a>
     656:	80 91 10 01 	lds	r24, 0x0110
     65a:	90 91 11 01 	lds	r25, 0x0111
     65e:	a0 91 12 01 	lds	r26, 0x0112
     662:	b0 91 13 01 	lds	r27, 0x0113
     666:	01 97       	sbiw	r24, 0x01	; 1
     668:	a1 09       	sbc	r26, r1
     66a:	b1 09       	sbc	r27, r1
     66c:	80 93 10 01 	sts	0x0110, r24
     670:	90 93 11 01 	sts	0x0111, r25
     674:	a0 93 12 01 	sts	0x0112, r26
     678:	b0 93 13 01 	sts	0x0113, r27
     67c:	13 c0       	rjmp	.+38     	; 0x6a4 <__vector_4+0x80>
	else ++count;	
     67e:	80 91 10 01 	lds	r24, 0x0110
     682:	90 91 11 01 	lds	r25, 0x0111
     686:	a0 91 12 01 	lds	r26, 0x0112
     68a:	b0 91 13 01 	lds	r27, 0x0113
     68e:	01 96       	adiw	r24, 0x01	; 1
     690:	a1 1d       	adc	r26, r1
     692:	b1 1d       	adc	r27, r1
     694:	80 93 10 01 	sts	0x0110, r24
     698:	90 93 11 01 	sts	0x0111, r25
     69c:	a0 93 12 01 	sts	0x0112, r26
     6a0:	b0 93 13 01 	sts	0x0113, r27
}
     6a4:	bf 91       	pop	r27
     6a6:	af 91       	pop	r26
     6a8:	9f 91       	pop	r25
     6aa:	8f 91       	pop	r24
     6ac:	3f 91       	pop	r19
     6ae:	2f 91       	pop	r18
     6b0:	0f 90       	pop	r0
     6b2:	0f be       	out	0x3f, r0	; 63
     6b4:	0f 90       	pop	r0
     6b6:	1f 90       	pop	r1
     6b8:	18 95       	reti

000006ba <__vector_11>:


ISR(TIMER1_COMPA_vect){//PID
     6ba:	1f 92       	push	r1
     6bc:	0f 92       	push	r0
     6be:	0f b6       	in	r0, 0x3f	; 63
     6c0:	0f 92       	push	r0
     6c2:	11 24       	eor	r1, r1
	if (timer_count > (0.1 / 0.00325)) {
		pid();	
		timer_count = 0;
	} 
	timer_count ++;		
}
     6c4:	0f 90       	pop	r0
     6c6:	0f be       	out	0x3f, r0	; 63
     6c8:	0f 90       	pop	r0
     6ca:	1f 90       	pop	r1
     6cc:	18 95       	reti

000006ce <_Z5setupv>:


void setup (){
	
	//ÉsÉìïœâªäÑÇËçûÇ›ãñâ¬ÅiPCINT8~15Åj
	PCICR |= (1<<PCIE1);
     6ce:	e8 e6       	ldi	r30, 0x68	; 104
     6d0:	f0 e0       	ldi	r31, 0x00	; 0
     6d2:	80 81       	ld	r24, Z
     6d4:	82 60       	ori	r24, 0x02	; 2
     6d6:	80 83       	st	Z, r24
	//ÉsÉìïœâªäÑÇËçûÇ›ãñâ¬ÅiPCINT8Åj
	PCMSK1 |= (1<<PCINT8);
     6d8:	ec e6       	ldi	r30, 0x6C	; 108
     6da:	f0 e0       	ldi	r31, 0x00	; 0
     6dc:	80 81       	ld	r24, Z
     6de:	81 60       	ori	r24, 0x01	; 1
     6e0:	80 83       	st	Z, r24
	motor_init();
     6e2:	0e 94 c2 03 	call	0x784	; 0x784 <_Z10motor_initv>
	motor_set_speed(pw);
     6e6:	80 91 0e 01 	lds	r24, 0x010E
     6ea:	90 91 0f 01 	lds	r25, 0x010F
     6ee:	0e 94 cd 03 	call	0x79a	; 0x79a <_Z15motor_set_speedi>
	
	DDRC = 0x00;
     6f2:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x00;
     6f4:	18 b8       	out	0x08, r1	; 8
	
	// LED of addresses 0x10~ 0x1F 0~F -> 0~15
	PORTD |= (0b00001111 & I2C_ADDR);
     6f6:	8b b1       	in	r24, 0x0b	; 11
     6f8:	85 60       	ori	r24, 0x05	; 5
     6fa:	8b b9       	out	0x0b, r24	; 11
	//ICR1 = 64999; // 3.25ms // 20MHz

	//sei();
	//motor_set_speed(30);
	//motor_set_speed(-30);
	TI2C_init_sync(I2C_ADDR,i2c_received_cb, i2c_request_cb);
     6fc:	85 e3       	ldi	r24, 0x35	; 53
     6fe:	6d e7       	ldi	r22, 0x7D	; 125
     700:	71 e0       	ldi	r23, 0x01	; 1
     702:	4f e4       	ldi	r20, 0x4F	; 79
     704:	51 e0       	ldi	r21, 0x01	; 1
     706:	0e 94 20 04 	call	0x840	; 0x840 <_Z14TI2C_init_synchPFvPcES1_>
}
     70a:	08 95       	ret

0000070c <main>:


int main(void)
{
	setup();
     70c:	0e 94 67 03 	call	0x6ce	; 0x6ce <_Z5setupv>
	double i = 0;
     710:	00 e0       	ldi	r16, 0x00	; 0
     712:	10 e0       	ldi	r17, 0x00	; 0
     714:	d0 e0       	ldi	r29, 0x00	; 0
     716:	c0 e0       	ldi	r28, 0x00	; 0
	
    /* Replace with your application code */
    while (1) 
    {
		while( !(TWCR & (1 << TWINT))){
     718:	0f 2e       	mov	r0, r31
     71a:	fc eb       	ldi	r31, 0xBC	; 188
     71c:	cf 2e       	mov	r12, r31
     71e:	dd 24       	eor	r13, r13
     720:	f0 2d       	mov	r31, r0
			if (i > 10){
				pid();
				i = 0;
     722:	ff 24       	eor	r15, r15
     724:	28 c0       	rjmp	.+80     	; 0x776 <main+0x6a>
	
    /* Replace with your application code */
    while (1) 
    {
		while( !(TWCR & (1 << TWINT))){
			if (i > 10){
     726:	80 2f       	mov	r24, r16
     728:	91 2f       	mov	r25, r17
     72a:	ad 2f       	mov	r26, r29
     72c:	bc 2f       	mov	r27, r28
     72e:	bc 01       	movw	r22, r24
     730:	cd 01       	movw	r24, r26
     732:	20 e0       	ldi	r18, 0x00	; 0
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	40 e2       	ldi	r20, 0x20	; 32
     738:	51 e4       	ldi	r21, 0x41	; 65
     73a:	0e 94 06 06 	call	0xc0c	; 0xc0c <__gesf2>
     73e:	18 16       	cp	r1, r24
     740:	34 f4       	brge	.+12     	; 0x74e <main+0x42>
				pid();
     742:	0e 94 84 01 	call	0x308	; 0x308 <_Z3pidv>
				i = 0;
     746:	0f 2d       	mov	r16, r15
     748:	1f 2d       	mov	r17, r15
     74a:	df 2d       	mov	r29, r15
     74c:	cf 2d       	mov	r28, r15
			}
			i++;
     74e:	80 2f       	mov	r24, r16
     750:	91 2f       	mov	r25, r17
     752:	ad 2f       	mov	r26, r29
     754:	bc 2f       	mov	r27, r28
     756:	bc 01       	movw	r22, r24
     758:	cd 01       	movw	r24, r26
     75a:	20 e0       	ldi	r18, 0x00	; 0
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e8       	ldi	r20, 0x80	; 128
     760:	5f e3       	ldi	r21, 0x3F	; 63
     762:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__addsf3>
     766:	06 2f       	mov	r16, r22
     768:	17 2f       	mov	r17, r23
     76a:	d8 2f       	mov	r29, r24
     76c:	c9 2f       	mov	r28, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     76e:	82 e4       	ldi	r24, 0x42	; 66
     770:	8a 95       	dec	r24
     772:	f1 f7       	brne	.-4      	; 0x770 <main+0x64>
     774:	00 c0       	rjmp	.+0      	; 0x776 <main+0x6a>
	double i = 0;
	
    /* Replace with your application code */
    while (1) 
    {
		while( !(TWCR & (1 << TWINT))){
     776:	f6 01       	movw	r30, r12
     778:	80 81       	ld	r24, Z
     77a:	88 23       	and	r24, r24
     77c:	a4 f6       	brge	.-88     	; 0x726 <main+0x1a>
				i = 0;
			}
			i++;
			_delay_us(10);
		}
		I2C_body();
     77e:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z8I2C_bodyv>
{
	setup();
	double i = 0;
	
    /* Replace with your application code */
    while (1) 
     782:	f9 cf       	rjmp	.-14     	; 0x776 <main+0x6a>

00000784 <_Z10motor_initv>:
};

int motor_init(void)
{
	//setup
	DDRD |= 0b11100000;
     784:	8a b1       	in	r24, 0x0a	; 10
     786:	80 6e       	ori	r24, 0xE0	; 224
     788:	8a b9       	out	0x0a, r24	; 10
	
	TCCR0A = 0b10100011;  //highspeedPWM
     78a:	83 ea       	ldi	r24, 0xA3	; 163
     78c:	84 bd       	out	0x24, r24	; 36
	
	//TCCR0B = 0b00000010;  //1/8,Top=OVF
     78e:	82 e0       	ldi	r24, 0x02	; 2
     790:	85 bd       	out	0x25, r24	; 37
	TCCR0B = 0b00000100;  // 1/256
     792:	08 95       	ret

00000794 <_Z7pwm_mapi>:
}

int pwm_map (int duty){
     794:	88 0f       	add	r24, r24
     796:	99 1f       	adc	r25, r25
	return TMR0INI + (int)(TOP/100*duty); //duty=0~100
     798:	08 95       	ret

0000079a <_Z15motor_set_speedi>:
}
	
	
	
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	ec 01       	movw	r28, r24
int motor_set_speed (int power) {
	
     7a0:	dd 23       	and	r29, r29
     7a2:	24 f4       	brge	.+8      	; 0x7ac <_Z15motor_set_speedi+0x12>
     7a4:	88 27       	eor	r24, r24
     7a6:	99 27       	eor	r25, r25
     7a8:	8c 1b       	sub	r24, r28
     7aa:	9d 0b       	sbc	r25, r29
     7ac:	0e 94 ca 03 	call	0x794	; 0x794 <_Z7pwm_mapi>
     7b0:	87 bd       	out	0x27, r24	; 39
     	OCR0A = pwm_map(abs(power));
     7b2:	88 bd       	out	0x28, r24	; 40
	    OCR0B = pwm_map(abs(power));

     7b4:	dd 23       	and	r29, r29
     7b6:	14 f4       	brge	.+4      	; 0x7bc <_Z15motor_set_speedi+0x22>
		if (power < 0){
			//PORTD = 0b01100000;	  //PHASE=high
     7b8:	5f 98       	cbi	0x0b, 7	; 11
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <_Z15motor_set_speedi+0x2a>
			PORTD &= 0b01111111;
		}
		
     7bc:	1c 16       	cp	r1, r28
     7be:	1d 06       	cpc	r1, r29
     7c0:	0c f4       	brge	.+2      	; 0x7c4 <_Z15motor_set_speedi+0x2a>
		else if(power > 0){
			//PORTD = 0b11100000;   //PHASE=low
     7c2:	5f 9a       	sbi	0x0b, 7	; 11
			PORTD |= 0b10000000;
		}
				
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	08 95       	ret

000007ca <_Z14TI2C_requestedv>:

void TI2C_requested() //Å®master
{
	static int i = 0;
	
	if (i == 0){
     7ca:	80 91 28 05 	lds	r24, 0x0528
     7ce:	90 91 29 05 	lds	r25, 0x0529
     7d2:	00 97       	sbiw	r24, 0x00	; 0
     7d4:	39 f4       	brne	.+14     	; 0x7e4 <_Z14TI2C_requestedv+0x1a>
		// initialize
		TI2C_req_cb(TI2C_buf_send.str_buf);
     7d6:	e0 91 24 01 	lds	r30, 0x0124
     7da:	f0 91 25 01 	lds	r31, 0x0125
     7de:	88 e2       	ldi	r24, 0x28	; 40
     7e0:	91 e0       	ldi	r25, 0x01	; 1
     7e2:	09 95       	icall
	}
	// send data
	if (TI2C_buf_send.uint_buf[i] == '\0') { 
     7e4:	e0 91 28 05 	lds	r30, 0x0528
     7e8:	f0 91 29 05 	lds	r31, 0x0529
     7ec:	e8 5d       	subi	r30, 0xD8	; 216
     7ee:	fe 4f       	sbci	r31, 0xFE	; 254
     7f0:	80 81       	ld	r24, Z
     7f2:	88 23       	and	r24, r24
     7f4:	41 f4       	brne	.+16     	; 0x806 <_Z14TI2C_requestedv+0x3c>
void I2C_main();
void I2C_body();

inline void __attribute__((always_inline)) I2C_transmitByte(uint8_t data)
{
	TWDR = data;
     7f6:	84 e2       	ldi	r24, 0x24	; 36
     7f8:	80 93 bb 00 	sts	0x00BB, r24
		I2C_transmitByte(postfix);
		i = 0;
     7fc:	10 92 29 05 	sts	0x0529, r1
     800:	10 92 28 05 	sts	0x0528, r1
     804:	08 95       	ret
     806:	80 93 bb 00 	sts	0x00BB, r24
	} else {
		I2C_transmitByte(TI2C_buf_send.uint_buf[i]);
		i++;
     80a:	80 91 28 05 	lds	r24, 0x0528
     80e:	90 91 29 05 	lds	r25, 0x0529
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	90 93 29 05 	sts	0x0529, r25
     818:	80 93 28 05 	sts	0x0528, r24
     81c:	08 95       	ret

0000081e <_Z9TI2C_inithPFvPcES1_>:
void (*TI2C_recv_cb)(char*);
void (*TI2C_req_cb)(char*);


void TI2C_init(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
     81e:	70 93 27 01 	sts	0x0127, r23
     822:	60 93 26 01 	sts	0x0126, r22
	TI2C_req_cb = req;
     826:	50 93 25 01 	sts	0x0125, r21
     82a:	40 93 24 01 	sts	0x0124, r20
	I2C_init(address);
     82e:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z8I2C_inith>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
     832:	87 e3       	ldi	r24, 0x37	; 55
     834:	94 e0       	ldi	r25, 0x04	; 4
     836:	65 ee       	ldi	r22, 0xE5	; 229
     838:	73 e0       	ldi	r23, 0x03	; 3
     83a:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
     83e:	08 95       	ret

00000840 <_Z14TI2C_init_synchPFvPcES1_>:

void TI2C_init_sync(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
     840:	70 93 27 01 	sts	0x0127, r23
     844:	60 93 26 01 	sts	0x0126, r22
	TI2C_req_cb = req;
     848:	50 93 25 01 	sts	0x0125, r21
     84c:	40 93 24 01 	sts	0x0124, r20
	I2C_init_sync(address);
     850:	0e 94 65 00 	call	0xca	; 0xca <_Z13I2C_init_synch>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
     854:	87 e3       	ldi	r24, 0x37	; 55
     856:	94 e0       	ldi	r25, 0x04	; 4
     858:	65 ee       	ldi	r22, 0xE5	; 229
     85a:	73 e0       	ldi	r23, 0x03	; 3
     85c:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
     860:	08 95       	ret

00000862 <_Z13TI2C_receivedPc>:


void TI2C_received(char *str) //slave <-
{
	TI2C_recv_cb(str);
     862:	e0 91 26 01 	lds	r30, 0x0126
     866:	f0 91 27 01 	lds	r31, 0x0127
     86a:	09 95       	icall
}
     86c:	08 95       	ret

0000086e <_Z18TI2C_char_receivedh>:

void TI2C_char_received(uint8_t received_data) {
	//DDRC = 0b00000010;
	static int i = 0;
	// ÉfÅ[É^Ç…í«â¡
	TI2C_buf.uint_buf[i] = received_data;
     86e:	20 91 2a 05 	lds	r18, 0x052A
     872:	30 91 2b 05 	lds	r19, 0x052B
     876:	f9 01       	movw	r30, r18
     878:	e8 5d       	subi	r30, 0xD8	; 216
     87a:	fc 4f       	sbci	r31, 0xFC	; 252
     87c:	80 83       	st	Z, r24
	// postfixÇ™óàÇΩèÍçáÇ…ÉRÅ[ÉãÉoÉbÉNÇåƒÇÒÇ≈èâä˙âª
	if (TI2C_buf.str_buf[i] == postfix) {
     87e:	84 32       	cpi	r24, 0x24	; 36
     880:	51 f4       	brne	.+20     	; 0x896 <_Z18TI2C_char_receivedh+0x28>
		TI2C_buf.str_buf[i] = '\0';
     882:	88 e2       	ldi	r24, 0x28	; 40
     884:	93 e0       	ldi	r25, 0x03	; 3
     886:	10 82       	st	Z, r1
		TI2C_received(TI2C_buf.str_buf);
     888:	0e 94 31 04 	call	0x862	; 0x862 <_Z13TI2C_receivedPc>
		i = 0;
     88c:	10 92 2b 05 	sts	0x052B, r1
     890:	10 92 2a 05 	sts	0x052A, r1
     894:	08 95       	ret
	} else {
		i++;
     896:	2f 5f       	subi	r18, 0xFF	; 255
     898:	3f 4f       	sbci	r19, 0xFF	; 255
     89a:	30 93 2b 05 	sts	0x052B, r19
     89e:	20 93 2a 05 	sts	0x052A, r18
     8a2:	08 95       	ret

000008a4 <__subsf3>:
     8a4:	50 58       	subi	r21, 0x80	; 128

000008a6 <__addsf3>:
     8a6:	bb 27       	eor	r27, r27
     8a8:	aa 27       	eor	r26, r26
     8aa:	0e d0       	rcall	.+28     	; 0x8c8 <__addsf3x>
     8ac:	75 c1       	rjmp	.+746    	; 0xb98 <__fp_round>
     8ae:	66 d1       	rcall	.+716    	; 0xb7c <__fp_pscA>
     8b0:	30 f0       	brcs	.+12     	; 0x8be <__addsf3+0x18>
     8b2:	6b d1       	rcall	.+726    	; 0xb8a <__fp_pscB>
     8b4:	20 f0       	brcs	.+8      	; 0x8be <__addsf3+0x18>
     8b6:	31 f4       	brne	.+12     	; 0x8c4 <__addsf3+0x1e>
     8b8:	9f 3f       	cpi	r25, 0xFF	; 255
     8ba:	11 f4       	brne	.+4      	; 0x8c0 <__addsf3+0x1a>
     8bc:	1e f4       	brtc	.+6      	; 0x8c4 <__addsf3+0x1e>
     8be:	5b c1       	rjmp	.+694    	; 0xb76 <__fp_nan>
     8c0:	0e f4       	brtc	.+2      	; 0x8c4 <__addsf3+0x1e>
     8c2:	e0 95       	com	r30
     8c4:	e7 fb       	bst	r30, 7
     8c6:	51 c1       	rjmp	.+674    	; 0xb6a <__fp_inf>

000008c8 <__addsf3x>:
     8c8:	e9 2f       	mov	r30, r25
     8ca:	77 d1       	rcall	.+750    	; 0xbba <__fp_split3>
     8cc:	80 f3       	brcs	.-32     	; 0x8ae <__addsf3+0x8>
     8ce:	ba 17       	cp	r27, r26
     8d0:	62 07       	cpc	r22, r18
     8d2:	73 07       	cpc	r23, r19
     8d4:	84 07       	cpc	r24, r20
     8d6:	95 07       	cpc	r25, r21
     8d8:	18 f0       	brcs	.+6      	; 0x8e0 <__addsf3x+0x18>
     8da:	71 f4       	brne	.+28     	; 0x8f8 <__addsf3x+0x30>
     8dc:	9e f5       	brtc	.+102    	; 0x944 <__stack+0x45>
     8de:	8f c1       	rjmp	.+798    	; 0xbfe <__fp_zero>
     8e0:	0e f4       	brtc	.+2      	; 0x8e4 <__addsf3x+0x1c>
     8e2:	e0 95       	com	r30
     8e4:	0b 2e       	mov	r0, r27
     8e6:	ba 2f       	mov	r27, r26
     8e8:	a0 2d       	mov	r26, r0
     8ea:	0b 01       	movw	r0, r22
     8ec:	b9 01       	movw	r22, r18
     8ee:	90 01       	movw	r18, r0
     8f0:	0c 01       	movw	r0, r24
     8f2:	ca 01       	movw	r24, r20
     8f4:	a0 01       	movw	r20, r0
     8f6:	11 24       	eor	r1, r1
     8f8:	ff 27       	eor	r31, r31
     8fa:	59 1b       	sub	r21, r25
     8fc:	99 f0       	breq	.+38     	; 0x924 <__stack+0x25>
     8fe:	59 3f       	cpi	r21, 0xF9	; 249
     900:	50 f4       	brcc	.+20     	; 0x916 <__stack+0x17>
     902:	50 3e       	cpi	r21, 0xE0	; 224
     904:	68 f1       	brcs	.+90     	; 0x960 <__stack+0x61>
     906:	1a 16       	cp	r1, r26
     908:	f0 40       	sbci	r31, 0x00	; 0
     90a:	a2 2f       	mov	r26, r18
     90c:	23 2f       	mov	r18, r19
     90e:	34 2f       	mov	r19, r20
     910:	44 27       	eor	r20, r20
     912:	58 5f       	subi	r21, 0xF8	; 248
     914:	f3 cf       	rjmp	.-26     	; 0x8fc <__addsf3x+0x34>
     916:	46 95       	lsr	r20
     918:	37 95       	ror	r19
     91a:	27 95       	ror	r18
     91c:	a7 95       	ror	r26
     91e:	f0 40       	sbci	r31, 0x00	; 0
     920:	53 95       	inc	r21
     922:	c9 f7       	brne	.-14     	; 0x916 <__stack+0x17>
     924:	7e f4       	brtc	.+30     	; 0x944 <__stack+0x45>
     926:	1f 16       	cp	r1, r31
     928:	ba 0b       	sbc	r27, r26
     92a:	62 0b       	sbc	r22, r18
     92c:	73 0b       	sbc	r23, r19
     92e:	84 0b       	sbc	r24, r20
     930:	ba f0       	brmi	.+46     	; 0x960 <__stack+0x61>
     932:	91 50       	subi	r25, 0x01	; 1
     934:	a1 f0       	breq	.+40     	; 0x95e <__stack+0x5f>
     936:	ff 0f       	add	r31, r31
     938:	bb 1f       	adc	r27, r27
     93a:	66 1f       	adc	r22, r22
     93c:	77 1f       	adc	r23, r23
     93e:	88 1f       	adc	r24, r24
     940:	c2 f7       	brpl	.-16     	; 0x932 <__stack+0x33>
     942:	0e c0       	rjmp	.+28     	; 0x960 <__stack+0x61>
     944:	ba 0f       	add	r27, r26
     946:	62 1f       	adc	r22, r18
     948:	73 1f       	adc	r23, r19
     94a:	84 1f       	adc	r24, r20
     94c:	48 f4       	brcc	.+18     	; 0x960 <__stack+0x61>
     94e:	87 95       	ror	r24
     950:	77 95       	ror	r23
     952:	67 95       	ror	r22
     954:	b7 95       	ror	r27
     956:	f7 95       	ror	r31
     958:	9e 3f       	cpi	r25, 0xFE	; 254
     95a:	08 f0       	brcs	.+2      	; 0x95e <__stack+0x5f>
     95c:	b3 cf       	rjmp	.-154    	; 0x8c4 <__addsf3+0x1e>
     95e:	93 95       	inc	r25
     960:	88 0f       	add	r24, r24
     962:	08 f0       	brcs	.+2      	; 0x966 <__stack+0x67>
     964:	99 27       	eor	r25, r25
     966:	ee 0f       	add	r30, r30
     968:	97 95       	ror	r25
     96a:	87 95       	ror	r24
     96c:	08 95       	ret

0000096e <__cmpsf2>:
     96e:	d9 d0       	rcall	.+434    	; 0xb22 <__fp_cmp>
     970:	08 f4       	brcc	.+2      	; 0x974 <__cmpsf2+0x6>
     972:	81 e0       	ldi	r24, 0x01	; 1
     974:	08 95       	ret

00000976 <__divsf3>:
     976:	0c d0       	rcall	.+24     	; 0x990 <__divsf3x>
     978:	0f c1       	rjmp	.+542    	; 0xb98 <__fp_round>
     97a:	07 d1       	rcall	.+526    	; 0xb8a <__fp_pscB>
     97c:	40 f0       	brcs	.+16     	; 0x98e <__divsf3+0x18>
     97e:	fe d0       	rcall	.+508    	; 0xb7c <__fp_pscA>
     980:	30 f0       	brcs	.+12     	; 0x98e <__divsf3+0x18>
     982:	21 f4       	brne	.+8      	; 0x98c <__divsf3+0x16>
     984:	5f 3f       	cpi	r21, 0xFF	; 255
     986:	19 f0       	breq	.+6      	; 0x98e <__divsf3+0x18>
     988:	f0 c0       	rjmp	.+480    	; 0xb6a <__fp_inf>
     98a:	51 11       	cpse	r21, r1
     98c:	39 c1       	rjmp	.+626    	; 0xc00 <__fp_szero>
     98e:	f3 c0       	rjmp	.+486    	; 0xb76 <__fp_nan>

00000990 <__divsf3x>:
     990:	14 d1       	rcall	.+552    	; 0xbba <__fp_split3>
     992:	98 f3       	brcs	.-26     	; 0x97a <__divsf3+0x4>

00000994 <__divsf3_pse>:
     994:	99 23       	and	r25, r25
     996:	c9 f3       	breq	.-14     	; 0x98a <__divsf3+0x14>
     998:	55 23       	and	r21, r21
     99a:	b1 f3       	breq	.-20     	; 0x988 <__divsf3+0x12>
     99c:	95 1b       	sub	r25, r21
     99e:	55 0b       	sbc	r21, r21
     9a0:	bb 27       	eor	r27, r27
     9a2:	aa 27       	eor	r26, r26
     9a4:	62 17       	cp	r22, r18
     9a6:	73 07       	cpc	r23, r19
     9a8:	84 07       	cpc	r24, r20
     9aa:	38 f0       	brcs	.+14     	; 0x9ba <__divsf3_pse+0x26>
     9ac:	9f 5f       	subi	r25, 0xFF	; 255
     9ae:	5f 4f       	sbci	r21, 0xFF	; 255
     9b0:	22 0f       	add	r18, r18
     9b2:	33 1f       	adc	r19, r19
     9b4:	44 1f       	adc	r20, r20
     9b6:	aa 1f       	adc	r26, r26
     9b8:	a9 f3       	breq	.-22     	; 0x9a4 <__divsf3_pse+0x10>
     9ba:	33 d0       	rcall	.+102    	; 0xa22 <__divsf3_pse+0x8e>
     9bc:	0e 2e       	mov	r0, r30
     9be:	3a f0       	brmi	.+14     	; 0x9ce <__divsf3_pse+0x3a>
     9c0:	e0 e8       	ldi	r30, 0x80	; 128
     9c2:	30 d0       	rcall	.+96     	; 0xa24 <__divsf3_pse+0x90>
     9c4:	91 50       	subi	r25, 0x01	; 1
     9c6:	50 40       	sbci	r21, 0x00	; 0
     9c8:	e6 95       	lsr	r30
     9ca:	00 1c       	adc	r0, r0
     9cc:	ca f7       	brpl	.-14     	; 0x9c0 <__divsf3_pse+0x2c>
     9ce:	29 d0       	rcall	.+82     	; 0xa22 <__divsf3_pse+0x8e>
     9d0:	fe 2f       	mov	r31, r30
     9d2:	27 d0       	rcall	.+78     	; 0xa22 <__divsf3_pse+0x8e>
     9d4:	66 0f       	add	r22, r22
     9d6:	77 1f       	adc	r23, r23
     9d8:	88 1f       	adc	r24, r24
     9da:	bb 1f       	adc	r27, r27
     9dc:	26 17       	cp	r18, r22
     9de:	37 07       	cpc	r19, r23
     9e0:	48 07       	cpc	r20, r24
     9e2:	ab 07       	cpc	r26, r27
     9e4:	b0 e8       	ldi	r27, 0x80	; 128
     9e6:	09 f0       	breq	.+2      	; 0x9ea <__divsf3_pse+0x56>
     9e8:	bb 0b       	sbc	r27, r27
     9ea:	80 2d       	mov	r24, r0
     9ec:	bf 01       	movw	r22, r30
     9ee:	ff 27       	eor	r31, r31
     9f0:	93 58       	subi	r25, 0x83	; 131
     9f2:	5f 4f       	sbci	r21, 0xFF	; 255
     9f4:	2a f0       	brmi	.+10     	; 0xa00 <__divsf3_pse+0x6c>
     9f6:	9e 3f       	cpi	r25, 0xFE	; 254
     9f8:	51 05       	cpc	r21, r1
     9fa:	68 f0       	brcs	.+26     	; 0xa16 <__divsf3_pse+0x82>
     9fc:	b6 c0       	rjmp	.+364    	; 0xb6a <__fp_inf>
     9fe:	00 c1       	rjmp	.+512    	; 0xc00 <__fp_szero>
     a00:	5f 3f       	cpi	r21, 0xFF	; 255
     a02:	ec f3       	brlt	.-6      	; 0x9fe <__divsf3_pse+0x6a>
     a04:	98 3e       	cpi	r25, 0xE8	; 232
     a06:	dc f3       	brlt	.-10     	; 0x9fe <__divsf3_pse+0x6a>
     a08:	86 95       	lsr	r24
     a0a:	77 95       	ror	r23
     a0c:	67 95       	ror	r22
     a0e:	b7 95       	ror	r27
     a10:	f7 95       	ror	r31
     a12:	9f 5f       	subi	r25, 0xFF	; 255
     a14:	c9 f7       	brne	.-14     	; 0xa08 <__divsf3_pse+0x74>
     a16:	88 0f       	add	r24, r24
     a18:	91 1d       	adc	r25, r1
     a1a:	96 95       	lsr	r25
     a1c:	87 95       	ror	r24
     a1e:	97 f9       	bld	r25, 7
     a20:	08 95       	ret
     a22:	e1 e0       	ldi	r30, 0x01	; 1
     a24:	66 0f       	add	r22, r22
     a26:	77 1f       	adc	r23, r23
     a28:	88 1f       	adc	r24, r24
     a2a:	bb 1f       	adc	r27, r27
     a2c:	62 17       	cp	r22, r18
     a2e:	73 07       	cpc	r23, r19
     a30:	84 07       	cpc	r24, r20
     a32:	ba 07       	cpc	r27, r26
     a34:	20 f0       	brcs	.+8      	; 0xa3e <__divsf3_pse+0xaa>
     a36:	62 1b       	sub	r22, r18
     a38:	73 0b       	sbc	r23, r19
     a3a:	84 0b       	sbc	r24, r20
     a3c:	ba 0b       	sbc	r27, r26
     a3e:	ee 1f       	adc	r30, r30
     a40:	88 f7       	brcc	.-30     	; 0xa24 <__divsf3_pse+0x90>
     a42:	e0 95       	com	r30
     a44:	08 95       	ret

00000a46 <__fixsfsi>:
     a46:	04 d0       	rcall	.+8      	; 0xa50 <__fixunssfsi>
     a48:	68 94       	set
     a4a:	b1 11       	cpse	r27, r1
     a4c:	d9 c0       	rjmp	.+434    	; 0xc00 <__fp_szero>
     a4e:	08 95       	ret

00000a50 <__fixunssfsi>:
     a50:	bc d0       	rcall	.+376    	; 0xbca <__fp_splitA>
     a52:	88 f0       	brcs	.+34     	; 0xa76 <__fixunssfsi+0x26>
     a54:	9f 57       	subi	r25, 0x7F	; 127
     a56:	90 f0       	brcs	.+36     	; 0xa7c <__fixunssfsi+0x2c>
     a58:	b9 2f       	mov	r27, r25
     a5a:	99 27       	eor	r25, r25
     a5c:	b7 51       	subi	r27, 0x17	; 23
     a5e:	a0 f0       	brcs	.+40     	; 0xa88 <__fixunssfsi+0x38>
     a60:	d1 f0       	breq	.+52     	; 0xa96 <__fixunssfsi+0x46>
     a62:	66 0f       	add	r22, r22
     a64:	77 1f       	adc	r23, r23
     a66:	88 1f       	adc	r24, r24
     a68:	99 1f       	adc	r25, r25
     a6a:	1a f0       	brmi	.+6      	; 0xa72 <__fixunssfsi+0x22>
     a6c:	ba 95       	dec	r27
     a6e:	c9 f7       	brne	.-14     	; 0xa62 <__fixunssfsi+0x12>
     a70:	12 c0       	rjmp	.+36     	; 0xa96 <__fixunssfsi+0x46>
     a72:	b1 30       	cpi	r27, 0x01	; 1
     a74:	81 f0       	breq	.+32     	; 0xa96 <__fixunssfsi+0x46>
     a76:	c3 d0       	rcall	.+390    	; 0xbfe <__fp_zero>
     a78:	b1 e0       	ldi	r27, 0x01	; 1
     a7a:	08 95       	ret
     a7c:	c0 c0       	rjmp	.+384    	; 0xbfe <__fp_zero>
     a7e:	67 2f       	mov	r22, r23
     a80:	78 2f       	mov	r23, r24
     a82:	88 27       	eor	r24, r24
     a84:	b8 5f       	subi	r27, 0xF8	; 248
     a86:	39 f0       	breq	.+14     	; 0xa96 <__fixunssfsi+0x46>
     a88:	b9 3f       	cpi	r27, 0xF9	; 249
     a8a:	cc f3       	brlt	.-14     	; 0xa7e <__fixunssfsi+0x2e>
     a8c:	86 95       	lsr	r24
     a8e:	77 95       	ror	r23
     a90:	67 95       	ror	r22
     a92:	b3 95       	inc	r27
     a94:	d9 f7       	brne	.-10     	; 0xa8c <__fixunssfsi+0x3c>
     a96:	3e f4       	brtc	.+14     	; 0xaa6 <__fixunssfsi+0x56>
     a98:	90 95       	com	r25
     a9a:	80 95       	com	r24
     a9c:	70 95       	com	r23
     a9e:	61 95       	neg	r22
     aa0:	7f 4f       	sbci	r23, 0xFF	; 255
     aa2:	8f 4f       	sbci	r24, 0xFF	; 255
     aa4:	9f 4f       	sbci	r25, 0xFF	; 255
     aa6:	08 95       	ret

00000aa8 <__floatunsisf>:
     aa8:	e8 94       	clt
     aaa:	09 c0       	rjmp	.+18     	; 0xabe <__floatsisf+0x12>

00000aac <__floatsisf>:
     aac:	97 fb       	bst	r25, 7
     aae:	3e f4       	brtc	.+14     	; 0xabe <__floatsisf+0x12>
     ab0:	90 95       	com	r25
     ab2:	80 95       	com	r24
     ab4:	70 95       	com	r23
     ab6:	61 95       	neg	r22
     ab8:	7f 4f       	sbci	r23, 0xFF	; 255
     aba:	8f 4f       	sbci	r24, 0xFF	; 255
     abc:	9f 4f       	sbci	r25, 0xFF	; 255
     abe:	99 23       	and	r25, r25
     ac0:	a9 f0       	breq	.+42     	; 0xaec <__floatsisf+0x40>
     ac2:	f9 2f       	mov	r31, r25
     ac4:	96 e9       	ldi	r25, 0x96	; 150
     ac6:	bb 27       	eor	r27, r27
     ac8:	93 95       	inc	r25
     aca:	f6 95       	lsr	r31
     acc:	87 95       	ror	r24
     ace:	77 95       	ror	r23
     ad0:	67 95       	ror	r22
     ad2:	b7 95       	ror	r27
     ad4:	f1 11       	cpse	r31, r1
     ad6:	f8 cf       	rjmp	.-16     	; 0xac8 <__floatsisf+0x1c>
     ad8:	fa f4       	brpl	.+62     	; 0xb18 <__floatsisf+0x6c>
     ada:	bb 0f       	add	r27, r27
     adc:	11 f4       	brne	.+4      	; 0xae2 <__floatsisf+0x36>
     ade:	60 ff       	sbrs	r22, 0
     ae0:	1b c0       	rjmp	.+54     	; 0xb18 <__floatsisf+0x6c>
     ae2:	6f 5f       	subi	r22, 0xFF	; 255
     ae4:	7f 4f       	sbci	r23, 0xFF	; 255
     ae6:	8f 4f       	sbci	r24, 0xFF	; 255
     ae8:	9f 4f       	sbci	r25, 0xFF	; 255
     aea:	16 c0       	rjmp	.+44     	; 0xb18 <__floatsisf+0x6c>
     aec:	88 23       	and	r24, r24
     aee:	11 f0       	breq	.+4      	; 0xaf4 <__floatsisf+0x48>
     af0:	96 e9       	ldi	r25, 0x96	; 150
     af2:	11 c0       	rjmp	.+34     	; 0xb16 <__floatsisf+0x6a>
     af4:	77 23       	and	r23, r23
     af6:	21 f0       	breq	.+8      	; 0xb00 <__floatsisf+0x54>
     af8:	9e e8       	ldi	r25, 0x8E	; 142
     afa:	87 2f       	mov	r24, r23
     afc:	76 2f       	mov	r23, r22
     afe:	05 c0       	rjmp	.+10     	; 0xb0a <__floatsisf+0x5e>
     b00:	66 23       	and	r22, r22
     b02:	71 f0       	breq	.+28     	; 0xb20 <__floatsisf+0x74>
     b04:	96 e8       	ldi	r25, 0x86	; 134
     b06:	86 2f       	mov	r24, r22
     b08:	70 e0       	ldi	r23, 0x00	; 0
     b0a:	60 e0       	ldi	r22, 0x00	; 0
     b0c:	2a f0       	brmi	.+10     	; 0xb18 <__floatsisf+0x6c>
     b0e:	9a 95       	dec	r25
     b10:	66 0f       	add	r22, r22
     b12:	77 1f       	adc	r23, r23
     b14:	88 1f       	adc	r24, r24
     b16:	da f7       	brpl	.-10     	; 0xb0e <__floatsisf+0x62>
     b18:	88 0f       	add	r24, r24
     b1a:	96 95       	lsr	r25
     b1c:	87 95       	ror	r24
     b1e:	97 f9       	bld	r25, 7
     b20:	08 95       	ret

00000b22 <__fp_cmp>:
     b22:	99 0f       	add	r25, r25
     b24:	00 08       	sbc	r0, r0
     b26:	55 0f       	add	r21, r21
     b28:	aa 0b       	sbc	r26, r26
     b2a:	e0 e8       	ldi	r30, 0x80	; 128
     b2c:	fe ef       	ldi	r31, 0xFE	; 254
     b2e:	16 16       	cp	r1, r22
     b30:	17 06       	cpc	r1, r23
     b32:	e8 07       	cpc	r30, r24
     b34:	f9 07       	cpc	r31, r25
     b36:	c0 f0       	brcs	.+48     	; 0xb68 <__fp_cmp+0x46>
     b38:	12 16       	cp	r1, r18
     b3a:	13 06       	cpc	r1, r19
     b3c:	e4 07       	cpc	r30, r20
     b3e:	f5 07       	cpc	r31, r21
     b40:	98 f0       	brcs	.+38     	; 0xb68 <__fp_cmp+0x46>
     b42:	62 1b       	sub	r22, r18
     b44:	73 0b       	sbc	r23, r19
     b46:	84 0b       	sbc	r24, r20
     b48:	95 0b       	sbc	r25, r21
     b4a:	39 f4       	brne	.+14     	; 0xb5a <__fp_cmp+0x38>
     b4c:	0a 26       	eor	r0, r26
     b4e:	61 f0       	breq	.+24     	; 0xb68 <__fp_cmp+0x46>
     b50:	23 2b       	or	r18, r19
     b52:	24 2b       	or	r18, r20
     b54:	25 2b       	or	r18, r21
     b56:	21 f4       	brne	.+8      	; 0xb60 <__fp_cmp+0x3e>
     b58:	08 95       	ret
     b5a:	0a 26       	eor	r0, r26
     b5c:	09 f4       	brne	.+2      	; 0xb60 <__fp_cmp+0x3e>
     b5e:	a1 40       	sbci	r26, 0x01	; 1
     b60:	a6 95       	lsr	r26
     b62:	8f ef       	ldi	r24, 0xFF	; 255
     b64:	81 1d       	adc	r24, r1
     b66:	81 1d       	adc	r24, r1
     b68:	08 95       	ret

00000b6a <__fp_inf>:
     b6a:	97 f9       	bld	r25, 7
     b6c:	9f 67       	ori	r25, 0x7F	; 127
     b6e:	80 e8       	ldi	r24, 0x80	; 128
     b70:	70 e0       	ldi	r23, 0x00	; 0
     b72:	60 e0       	ldi	r22, 0x00	; 0
     b74:	08 95       	ret

00000b76 <__fp_nan>:
     b76:	9f ef       	ldi	r25, 0xFF	; 255
     b78:	80 ec       	ldi	r24, 0xC0	; 192
     b7a:	08 95       	ret

00000b7c <__fp_pscA>:
     b7c:	00 24       	eor	r0, r0
     b7e:	0a 94       	dec	r0
     b80:	16 16       	cp	r1, r22
     b82:	17 06       	cpc	r1, r23
     b84:	18 06       	cpc	r1, r24
     b86:	09 06       	cpc	r0, r25
     b88:	08 95       	ret

00000b8a <__fp_pscB>:
     b8a:	00 24       	eor	r0, r0
     b8c:	0a 94       	dec	r0
     b8e:	12 16       	cp	r1, r18
     b90:	13 06       	cpc	r1, r19
     b92:	14 06       	cpc	r1, r20
     b94:	05 06       	cpc	r0, r21
     b96:	08 95       	ret

00000b98 <__fp_round>:
     b98:	09 2e       	mov	r0, r25
     b9a:	03 94       	inc	r0
     b9c:	00 0c       	add	r0, r0
     b9e:	11 f4       	brne	.+4      	; 0xba4 <__fp_round+0xc>
     ba0:	88 23       	and	r24, r24
     ba2:	52 f0       	brmi	.+20     	; 0xbb8 <__fp_round+0x20>
     ba4:	bb 0f       	add	r27, r27
     ba6:	40 f4       	brcc	.+16     	; 0xbb8 <__fp_round+0x20>
     ba8:	bf 2b       	or	r27, r31
     baa:	11 f4       	brne	.+4      	; 0xbb0 <__fp_round+0x18>
     bac:	60 ff       	sbrs	r22, 0
     bae:	04 c0       	rjmp	.+8      	; 0xbb8 <__fp_round+0x20>
     bb0:	6f 5f       	subi	r22, 0xFF	; 255
     bb2:	7f 4f       	sbci	r23, 0xFF	; 255
     bb4:	8f 4f       	sbci	r24, 0xFF	; 255
     bb6:	9f 4f       	sbci	r25, 0xFF	; 255
     bb8:	08 95       	ret

00000bba <__fp_split3>:
     bba:	57 fd       	sbrc	r21, 7
     bbc:	90 58       	subi	r25, 0x80	; 128
     bbe:	44 0f       	add	r20, r20
     bc0:	55 1f       	adc	r21, r21
     bc2:	59 f0       	breq	.+22     	; 0xbda <__fp_splitA+0x10>
     bc4:	5f 3f       	cpi	r21, 0xFF	; 255
     bc6:	71 f0       	breq	.+28     	; 0xbe4 <__fp_splitA+0x1a>
     bc8:	47 95       	ror	r20

00000bca <__fp_splitA>:
     bca:	88 0f       	add	r24, r24
     bcc:	97 fb       	bst	r25, 7
     bce:	99 1f       	adc	r25, r25
     bd0:	61 f0       	breq	.+24     	; 0xbea <__fp_splitA+0x20>
     bd2:	9f 3f       	cpi	r25, 0xFF	; 255
     bd4:	79 f0       	breq	.+30     	; 0xbf4 <__fp_splitA+0x2a>
     bd6:	87 95       	ror	r24
     bd8:	08 95       	ret
     bda:	12 16       	cp	r1, r18
     bdc:	13 06       	cpc	r1, r19
     bde:	14 06       	cpc	r1, r20
     be0:	55 1f       	adc	r21, r21
     be2:	f2 cf       	rjmp	.-28     	; 0xbc8 <__fp_split3+0xe>
     be4:	46 95       	lsr	r20
     be6:	f1 df       	rcall	.-30     	; 0xbca <__fp_splitA>
     be8:	08 c0       	rjmp	.+16     	; 0xbfa <__fp_splitA+0x30>
     bea:	16 16       	cp	r1, r22
     bec:	17 06       	cpc	r1, r23
     bee:	18 06       	cpc	r1, r24
     bf0:	99 1f       	adc	r25, r25
     bf2:	f1 cf       	rjmp	.-30     	; 0xbd6 <__fp_splitA+0xc>
     bf4:	86 95       	lsr	r24
     bf6:	71 05       	cpc	r23, r1
     bf8:	61 05       	cpc	r22, r1
     bfa:	08 94       	sec
     bfc:	08 95       	ret

00000bfe <__fp_zero>:
     bfe:	e8 94       	clt

00000c00 <__fp_szero>:
     c00:	bb 27       	eor	r27, r27
     c02:	66 27       	eor	r22, r22
     c04:	77 27       	eor	r23, r23
     c06:	cb 01       	movw	r24, r22
     c08:	97 f9       	bld	r25, 7
     c0a:	08 95       	ret

00000c0c <__gesf2>:
     c0c:	8a df       	rcall	.-236    	; 0xb22 <__fp_cmp>
     c0e:	08 f4       	brcc	.+2      	; 0xc12 <__gesf2+0x6>
     c10:	8f ef       	ldi	r24, 0xFF	; 255
     c12:	08 95       	ret

00000c14 <__mulsf3>:
     c14:	0b d0       	rcall	.+22     	; 0xc2c <__mulsf3x>
     c16:	c0 cf       	rjmp	.-128    	; 0xb98 <__fp_round>
     c18:	b1 df       	rcall	.-158    	; 0xb7c <__fp_pscA>
     c1a:	28 f0       	brcs	.+10     	; 0xc26 <__mulsf3+0x12>
     c1c:	b6 df       	rcall	.-148    	; 0xb8a <__fp_pscB>
     c1e:	18 f0       	brcs	.+6      	; 0xc26 <__mulsf3+0x12>
     c20:	95 23       	and	r25, r21
     c22:	09 f0       	breq	.+2      	; 0xc26 <__mulsf3+0x12>
     c24:	a2 cf       	rjmp	.-188    	; 0xb6a <__fp_inf>
     c26:	a7 cf       	rjmp	.-178    	; 0xb76 <__fp_nan>
     c28:	11 24       	eor	r1, r1
     c2a:	ea cf       	rjmp	.-44     	; 0xc00 <__fp_szero>

00000c2c <__mulsf3x>:
     c2c:	c6 df       	rcall	.-116    	; 0xbba <__fp_split3>
     c2e:	a0 f3       	brcs	.-24     	; 0xc18 <__mulsf3+0x4>

00000c30 <__mulsf3_pse>:
     c30:	95 9f       	mul	r25, r21
     c32:	d1 f3       	breq	.-12     	; 0xc28 <__mulsf3+0x14>
     c34:	95 0f       	add	r25, r21
     c36:	50 e0       	ldi	r21, 0x00	; 0
     c38:	55 1f       	adc	r21, r21
     c3a:	62 9f       	mul	r22, r18
     c3c:	f0 01       	movw	r30, r0
     c3e:	72 9f       	mul	r23, r18
     c40:	bb 27       	eor	r27, r27
     c42:	f0 0d       	add	r31, r0
     c44:	b1 1d       	adc	r27, r1
     c46:	63 9f       	mul	r22, r19
     c48:	aa 27       	eor	r26, r26
     c4a:	f0 0d       	add	r31, r0
     c4c:	b1 1d       	adc	r27, r1
     c4e:	aa 1f       	adc	r26, r26
     c50:	64 9f       	mul	r22, r20
     c52:	66 27       	eor	r22, r22
     c54:	b0 0d       	add	r27, r0
     c56:	a1 1d       	adc	r26, r1
     c58:	66 1f       	adc	r22, r22
     c5a:	82 9f       	mul	r24, r18
     c5c:	22 27       	eor	r18, r18
     c5e:	b0 0d       	add	r27, r0
     c60:	a1 1d       	adc	r26, r1
     c62:	62 1f       	adc	r22, r18
     c64:	73 9f       	mul	r23, r19
     c66:	b0 0d       	add	r27, r0
     c68:	a1 1d       	adc	r26, r1
     c6a:	62 1f       	adc	r22, r18
     c6c:	83 9f       	mul	r24, r19
     c6e:	a0 0d       	add	r26, r0
     c70:	61 1d       	adc	r22, r1
     c72:	22 1f       	adc	r18, r18
     c74:	74 9f       	mul	r23, r20
     c76:	33 27       	eor	r19, r19
     c78:	a0 0d       	add	r26, r0
     c7a:	61 1d       	adc	r22, r1
     c7c:	23 1f       	adc	r18, r19
     c7e:	84 9f       	mul	r24, r20
     c80:	60 0d       	add	r22, r0
     c82:	21 1d       	adc	r18, r1
     c84:	82 2f       	mov	r24, r18
     c86:	76 2f       	mov	r23, r22
     c88:	6a 2f       	mov	r22, r26
     c8a:	11 24       	eor	r1, r1
     c8c:	9f 57       	subi	r25, 0x7F	; 127
     c8e:	50 40       	sbci	r21, 0x00	; 0
     c90:	8a f0       	brmi	.+34     	; 0xcb4 <__mulsf3_pse+0x84>
     c92:	e1 f0       	breq	.+56     	; 0xccc <__mulsf3_pse+0x9c>
     c94:	88 23       	and	r24, r24
     c96:	4a f0       	brmi	.+18     	; 0xcaa <__mulsf3_pse+0x7a>
     c98:	ee 0f       	add	r30, r30
     c9a:	ff 1f       	adc	r31, r31
     c9c:	bb 1f       	adc	r27, r27
     c9e:	66 1f       	adc	r22, r22
     ca0:	77 1f       	adc	r23, r23
     ca2:	88 1f       	adc	r24, r24
     ca4:	91 50       	subi	r25, 0x01	; 1
     ca6:	50 40       	sbci	r21, 0x00	; 0
     ca8:	a9 f7       	brne	.-22     	; 0xc94 <__mulsf3_pse+0x64>
     caa:	9e 3f       	cpi	r25, 0xFE	; 254
     cac:	51 05       	cpc	r21, r1
     cae:	70 f0       	brcs	.+28     	; 0xccc <__mulsf3_pse+0x9c>
     cb0:	5c cf       	rjmp	.-328    	; 0xb6a <__fp_inf>
     cb2:	a6 cf       	rjmp	.-180    	; 0xc00 <__fp_szero>
     cb4:	5f 3f       	cpi	r21, 0xFF	; 255
     cb6:	ec f3       	brlt	.-6      	; 0xcb2 <__mulsf3_pse+0x82>
     cb8:	98 3e       	cpi	r25, 0xE8	; 232
     cba:	dc f3       	brlt	.-10     	; 0xcb2 <__mulsf3_pse+0x82>
     cbc:	86 95       	lsr	r24
     cbe:	77 95       	ror	r23
     cc0:	67 95       	ror	r22
     cc2:	b7 95       	ror	r27
     cc4:	f7 95       	ror	r31
     cc6:	e7 95       	ror	r30
     cc8:	9f 5f       	subi	r25, 0xFF	; 255
     cca:	c1 f7       	brne	.-16     	; 0xcbc <__mulsf3_pse+0x8c>
     ccc:	fe 2b       	or	r31, r30
     cce:	88 0f       	add	r24, r24
     cd0:	91 1d       	adc	r25, r1
     cd2:	96 95       	lsr	r25
     cd4:	87 95       	ror	r24
     cd6:	97 f9       	bld	r25, 7
     cd8:	08 95       	ret

00000cda <atoi>:
     cda:	fc 01       	movw	r30, r24
     cdc:	88 27       	eor	r24, r24
     cde:	99 27       	eor	r25, r25
     ce0:	e8 94       	clt
     ce2:	21 91       	ld	r18, Z+
     ce4:	20 32       	cpi	r18, 0x20	; 32
     ce6:	e9 f3       	breq	.-6      	; 0xce2 <atoi+0x8>
     ce8:	29 30       	cpi	r18, 0x09	; 9
     cea:	10 f0       	brcs	.+4      	; 0xcf0 <atoi+0x16>
     cec:	2e 30       	cpi	r18, 0x0E	; 14
     cee:	c8 f3       	brcs	.-14     	; 0xce2 <atoi+0x8>
     cf0:	2b 32       	cpi	r18, 0x2B	; 43
     cf2:	41 f0       	breq	.+16     	; 0xd04 <atoi+0x2a>
     cf4:	2d 32       	cpi	r18, 0x2D	; 45
     cf6:	39 f4       	brne	.+14     	; 0xd06 <atoi+0x2c>
     cf8:	68 94       	set
     cfa:	04 c0       	rjmp	.+8      	; 0xd04 <atoi+0x2a>
     cfc:	0e 94 8b 06 	call	0xd16	; 0xd16 <__mulhi_const_10>
     d00:	82 0f       	add	r24, r18
     d02:	91 1d       	adc	r25, r1
     d04:	21 91       	ld	r18, Z+
     d06:	20 53       	subi	r18, 0x30	; 48
     d08:	2a 30       	cpi	r18, 0x0A	; 10
     d0a:	c0 f3       	brcs	.-16     	; 0xcfc <atoi+0x22>
     d0c:	1e f4       	brtc	.+6      	; 0xd14 <atoi+0x3a>
     d0e:	90 95       	com	r25
     d10:	81 95       	neg	r24
     d12:	9f 4f       	sbci	r25, 0xFF	; 255
     d14:	08 95       	ret

00000d16 <__mulhi_const_10>:
     d16:	7a e0       	ldi	r23, 0x0A	; 10
     d18:	97 9f       	mul	r25, r23
     d1a:	90 2d       	mov	r25, r0
     d1c:	87 9f       	mul	r24, r23
     d1e:	80 2d       	mov	r24, r0
     d20:	91 0d       	add	r25, r1
     d22:	11 24       	eor	r1, r1
     d24:	08 95       	ret

00000d26 <sprintf>:
     d26:	ae e0       	ldi	r26, 0x0E	; 14
     d28:	b0 e0       	ldi	r27, 0x00	; 0
     d2a:	e9 e9       	ldi	r30, 0x99	; 153
     d2c:	f6 e0       	ldi	r31, 0x06	; 6
     d2e:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__prologue_saves__+0x1c>
     d32:	0d 89       	ldd	r16, Y+21	; 0x15
     d34:	1e 89       	ldd	r17, Y+22	; 0x16
     d36:	86 e0       	ldi	r24, 0x06	; 6
     d38:	8c 83       	std	Y+4, r24	; 0x04
     d3a:	1a 83       	std	Y+2, r17	; 0x02
     d3c:	09 83       	std	Y+1, r16	; 0x01
     d3e:	8f ef       	ldi	r24, 0xFF	; 255
     d40:	9f e7       	ldi	r25, 0x7F	; 127
     d42:	9e 83       	std	Y+6, r25	; 0x06
     d44:	8d 83       	std	Y+5, r24	; 0x05
     d46:	ae 01       	movw	r20, r28
     d48:	47 5e       	subi	r20, 0xE7	; 231
     d4a:	5f 4f       	sbci	r21, 0xFF	; 255
     d4c:	ce 01       	movw	r24, r28
     d4e:	01 96       	adiw	r24, 0x01	; 1
     d50:	6f 89       	ldd	r22, Y+23	; 0x17
     d52:	78 8d       	ldd	r23, Y+24	; 0x18
     d54:	0e 94 b5 06 	call	0xd6a	; 0xd6a <vfprintf>
     d58:	ef 81       	ldd	r30, Y+7	; 0x07
     d5a:	f8 85       	ldd	r31, Y+8	; 0x08
     d5c:	e0 0f       	add	r30, r16
     d5e:	f1 1f       	adc	r31, r17
     d60:	10 82       	st	Z, r1
     d62:	2e 96       	adiw	r28, 0x0e	; 14
     d64:	e4 e0       	ldi	r30, 0x04	; 4
     d66:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__epilogue_restores__+0x1c>

00000d6a <vfprintf>:
     d6a:	ad e0       	ldi	r26, 0x0D	; 13
     d6c:	b0 e0       	ldi	r27, 0x00	; 0
     d6e:	eb eb       	ldi	r30, 0xBB	; 187
     d70:	f6 e0       	ldi	r31, 0x06	; 6
     d72:	0c 94 33 09 	jmp	0x1266	; 0x1266 <__prologue_saves__>
     d76:	3c 01       	movw	r6, r24
     d78:	7d 87       	std	Y+13, r23	; 0x0d
     d7a:	6c 87       	std	Y+12, r22	; 0x0c
     d7c:	5a 01       	movw	r10, r20
     d7e:	fc 01       	movw	r30, r24
     d80:	17 82       	std	Z+7, r1	; 0x07
     d82:	16 82       	std	Z+6, r1	; 0x06
     d84:	83 81       	ldd	r24, Z+3	; 0x03
     d86:	81 ff       	sbrs	r24, 1
     d88:	c8 c1       	rjmp	.+912    	; 0x111a <vfprintf+0x3b0>
     d8a:	2e 01       	movw	r4, r28
     d8c:	08 94       	sec
     d8e:	41 1c       	adc	r4, r1
     d90:	51 1c       	adc	r5, r1
     d92:	f3 01       	movw	r30, r6
     d94:	93 81       	ldd	r25, Z+3	; 0x03
     d96:	ec 85       	ldd	r30, Y+12	; 0x0c
     d98:	fd 85       	ldd	r31, Y+13	; 0x0d
     d9a:	93 fd       	sbrc	r25, 3
     d9c:	85 91       	lpm	r24, Z+
     d9e:	93 ff       	sbrs	r25, 3
     da0:	81 91       	ld	r24, Z+
     da2:	fd 87       	std	Y+13, r31	; 0x0d
     da4:	ec 87       	std	Y+12, r30	; 0x0c
     da6:	88 23       	and	r24, r24
     da8:	09 f4       	brne	.+2      	; 0xdac <vfprintf+0x42>
     daa:	b3 c1       	rjmp	.+870    	; 0x1112 <vfprintf+0x3a8>
     dac:	85 32       	cpi	r24, 0x25	; 37
     dae:	41 f4       	brne	.+16     	; 0xdc0 <vfprintf+0x56>
     db0:	93 fd       	sbrc	r25, 3
     db2:	85 91       	lpm	r24, Z+
     db4:	93 ff       	sbrs	r25, 3
     db6:	81 91       	ld	r24, Z+
     db8:	fd 87       	std	Y+13, r31	; 0x0d
     dba:	ec 87       	std	Y+12, r30	; 0x0c
     dbc:	85 32       	cpi	r24, 0x25	; 37
     dbe:	29 f4       	brne	.+10     	; 0xdca <vfprintf+0x60>
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	b3 01       	movw	r22, r6
     dc4:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
     dc8:	e4 cf       	rjmp	.-56     	; 0xd92 <vfprintf+0x28>
     dca:	ff 24       	eor	r15, r15
     dcc:	ee 24       	eor	r14, r14
     dce:	10 e0       	ldi	r17, 0x00	; 0
     dd0:	10 32       	cpi	r17, 0x20	; 32
     dd2:	b0 f4       	brcc	.+44     	; 0xe00 <vfprintf+0x96>
     dd4:	8b 32       	cpi	r24, 0x2B	; 43
     dd6:	69 f0       	breq	.+26     	; 0xdf2 <vfprintf+0x88>
     dd8:	8c 32       	cpi	r24, 0x2C	; 44
     dda:	28 f4       	brcc	.+10     	; 0xde6 <vfprintf+0x7c>
     ddc:	80 32       	cpi	r24, 0x20	; 32
     dde:	51 f0       	breq	.+20     	; 0xdf4 <vfprintf+0x8a>
     de0:	83 32       	cpi	r24, 0x23	; 35
     de2:	71 f4       	brne	.+28     	; 0xe00 <vfprintf+0x96>
     de4:	0b c0       	rjmp	.+22     	; 0xdfc <vfprintf+0x92>
     de6:	8d 32       	cpi	r24, 0x2D	; 45
     de8:	39 f0       	breq	.+14     	; 0xdf8 <vfprintf+0x8e>
     dea:	80 33       	cpi	r24, 0x30	; 48
     dec:	49 f4       	brne	.+18     	; 0xe00 <vfprintf+0x96>
     dee:	11 60       	ori	r17, 0x01	; 1
     df0:	2c c0       	rjmp	.+88     	; 0xe4a <vfprintf+0xe0>
     df2:	12 60       	ori	r17, 0x02	; 2
     df4:	14 60       	ori	r17, 0x04	; 4
     df6:	29 c0       	rjmp	.+82     	; 0xe4a <vfprintf+0xe0>
     df8:	18 60       	ori	r17, 0x08	; 8
     dfa:	27 c0       	rjmp	.+78     	; 0xe4a <vfprintf+0xe0>
     dfc:	10 61       	ori	r17, 0x10	; 16
     dfe:	25 c0       	rjmp	.+74     	; 0xe4a <vfprintf+0xe0>
     e00:	17 fd       	sbrc	r17, 7
     e02:	2e c0       	rjmp	.+92     	; 0xe60 <vfprintf+0xf6>
     e04:	28 2f       	mov	r18, r24
     e06:	20 53       	subi	r18, 0x30	; 48
     e08:	2a 30       	cpi	r18, 0x0A	; 10
     e0a:	98 f4       	brcc	.+38     	; 0xe32 <vfprintf+0xc8>
     e0c:	16 ff       	sbrs	r17, 6
     e0e:	08 c0       	rjmp	.+16     	; 0xe20 <vfprintf+0xb6>
     e10:	8f 2d       	mov	r24, r15
     e12:	88 0f       	add	r24, r24
     e14:	f8 2e       	mov	r15, r24
     e16:	ff 0c       	add	r15, r15
     e18:	ff 0c       	add	r15, r15
     e1a:	f8 0e       	add	r15, r24
     e1c:	f2 0e       	add	r15, r18
     e1e:	15 c0       	rjmp	.+42     	; 0xe4a <vfprintf+0xe0>
     e20:	8e 2d       	mov	r24, r14
     e22:	88 0f       	add	r24, r24
     e24:	e8 2e       	mov	r14, r24
     e26:	ee 0c       	add	r14, r14
     e28:	ee 0c       	add	r14, r14
     e2a:	e8 0e       	add	r14, r24
     e2c:	e2 0e       	add	r14, r18
     e2e:	10 62       	ori	r17, 0x20	; 32
     e30:	0c c0       	rjmp	.+24     	; 0xe4a <vfprintf+0xe0>
     e32:	8e 32       	cpi	r24, 0x2E	; 46
     e34:	21 f4       	brne	.+8      	; 0xe3e <vfprintf+0xd4>
     e36:	16 fd       	sbrc	r17, 6
     e38:	6c c1       	rjmp	.+728    	; 0x1112 <vfprintf+0x3a8>
     e3a:	10 64       	ori	r17, 0x40	; 64
     e3c:	06 c0       	rjmp	.+12     	; 0xe4a <vfprintf+0xe0>
     e3e:	8c 36       	cpi	r24, 0x6C	; 108
     e40:	11 f4       	brne	.+4      	; 0xe46 <vfprintf+0xdc>
     e42:	10 68       	ori	r17, 0x80	; 128
     e44:	02 c0       	rjmp	.+4      	; 0xe4a <vfprintf+0xe0>
     e46:	88 36       	cpi	r24, 0x68	; 104
     e48:	59 f4       	brne	.+22     	; 0xe60 <vfprintf+0xf6>
     e4a:	ec 85       	ldd	r30, Y+12	; 0x0c
     e4c:	fd 85       	ldd	r31, Y+13	; 0x0d
     e4e:	93 fd       	sbrc	r25, 3
     e50:	85 91       	lpm	r24, Z+
     e52:	93 ff       	sbrs	r25, 3
     e54:	81 91       	ld	r24, Z+
     e56:	fd 87       	std	Y+13, r31	; 0x0d
     e58:	ec 87       	std	Y+12, r30	; 0x0c
     e5a:	88 23       	and	r24, r24
     e5c:	09 f0       	breq	.+2      	; 0xe60 <vfprintf+0xf6>
     e5e:	b8 cf       	rjmp	.-144    	; 0xdd0 <vfprintf+0x66>
     e60:	98 2f       	mov	r25, r24
     e62:	95 54       	subi	r25, 0x45	; 69
     e64:	93 30       	cpi	r25, 0x03	; 3
     e66:	18 f0       	brcs	.+6      	; 0xe6e <vfprintf+0x104>
     e68:	90 52       	subi	r25, 0x20	; 32
     e6a:	93 30       	cpi	r25, 0x03	; 3
     e6c:	38 f4       	brcc	.+14     	; 0xe7c <vfprintf+0x112>
     e6e:	24 e0       	ldi	r18, 0x04	; 4
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	a2 0e       	add	r10, r18
     e74:	b3 1e       	adc	r11, r19
     e76:	3f e3       	ldi	r19, 0x3F	; 63
     e78:	39 83       	std	Y+1, r19	; 0x01
     e7a:	0f c0       	rjmp	.+30     	; 0xe9a <vfprintf+0x130>
     e7c:	83 36       	cpi	r24, 0x63	; 99
     e7e:	31 f0       	breq	.+12     	; 0xe8c <vfprintf+0x122>
     e80:	83 37       	cpi	r24, 0x73	; 115
     e82:	81 f0       	breq	.+32     	; 0xea4 <vfprintf+0x13a>
     e84:	83 35       	cpi	r24, 0x53	; 83
     e86:	09 f0       	breq	.+2      	; 0xe8a <vfprintf+0x120>
     e88:	5a c0       	rjmp	.+180    	; 0xf3e <vfprintf+0x1d4>
     e8a:	22 c0       	rjmp	.+68     	; 0xed0 <vfprintf+0x166>
     e8c:	f5 01       	movw	r30, r10
     e8e:	80 81       	ld	r24, Z
     e90:	89 83       	std	Y+1, r24	; 0x01
     e92:	22 e0       	ldi	r18, 0x02	; 2
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	a2 0e       	add	r10, r18
     e98:	b3 1e       	adc	r11, r19
     e9a:	21 e0       	ldi	r18, 0x01	; 1
     e9c:	c2 2e       	mov	r12, r18
     e9e:	d1 2c       	mov	r13, r1
     ea0:	42 01       	movw	r8, r4
     ea2:	14 c0       	rjmp	.+40     	; 0xecc <vfprintf+0x162>
     ea4:	92 e0       	ldi	r25, 0x02	; 2
     ea6:	29 2e       	mov	r2, r25
     ea8:	31 2c       	mov	r3, r1
     eaa:	2a 0c       	add	r2, r10
     eac:	3b 1c       	adc	r3, r11
     eae:	f5 01       	movw	r30, r10
     eb0:	80 80       	ld	r8, Z
     eb2:	91 80       	ldd	r9, Z+1	; 0x01
     eb4:	16 ff       	sbrs	r17, 6
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <vfprintf+0x154>
     eb8:	6f 2d       	mov	r22, r15
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfprintf+0x158>
     ebe:	6f ef       	ldi	r22, 0xFF	; 255
     ec0:	7f ef       	ldi	r23, 0xFF	; 255
     ec2:	c4 01       	movw	r24, r8
     ec4:	0e 94 9e 08 	call	0x113c	; 0x113c <strnlen>
     ec8:	6c 01       	movw	r12, r24
     eca:	51 01       	movw	r10, r2
     ecc:	1f 77       	andi	r17, 0x7F	; 127
     ece:	15 c0       	rjmp	.+42     	; 0xefa <vfprintf+0x190>
     ed0:	82 e0       	ldi	r24, 0x02	; 2
     ed2:	28 2e       	mov	r2, r24
     ed4:	31 2c       	mov	r3, r1
     ed6:	2a 0c       	add	r2, r10
     ed8:	3b 1c       	adc	r3, r11
     eda:	f5 01       	movw	r30, r10
     edc:	80 80       	ld	r8, Z
     ede:	91 80       	ldd	r9, Z+1	; 0x01
     ee0:	16 ff       	sbrs	r17, 6
     ee2:	03 c0       	rjmp	.+6      	; 0xeea <vfprintf+0x180>
     ee4:	6f 2d       	mov	r22, r15
     ee6:	70 e0       	ldi	r23, 0x00	; 0
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <vfprintf+0x184>
     eea:	6f ef       	ldi	r22, 0xFF	; 255
     eec:	7f ef       	ldi	r23, 0xFF	; 255
     eee:	c4 01       	movw	r24, r8
     ef0:	0e 94 93 08 	call	0x1126	; 0x1126 <strnlen_P>
     ef4:	6c 01       	movw	r12, r24
     ef6:	10 68       	ori	r17, 0x80	; 128
     ef8:	51 01       	movw	r10, r2
     efa:	13 fd       	sbrc	r17, 3
     efc:	1c c0       	rjmp	.+56     	; 0xf36 <vfprintf+0x1cc>
     efe:	06 c0       	rjmp	.+12     	; 0xf0c <vfprintf+0x1a2>
     f00:	80 e2       	ldi	r24, 0x20	; 32
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	b3 01       	movw	r22, r6
     f06:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
     f0a:	ea 94       	dec	r14
     f0c:	8e 2d       	mov	r24, r14
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	c8 16       	cp	r12, r24
     f12:	d9 06       	cpc	r13, r25
     f14:	a8 f3       	brcs	.-22     	; 0xf00 <vfprintf+0x196>
     f16:	0f c0       	rjmp	.+30     	; 0xf36 <vfprintf+0x1cc>
     f18:	f4 01       	movw	r30, r8
     f1a:	17 fd       	sbrc	r17, 7
     f1c:	85 91       	lpm	r24, Z+
     f1e:	17 ff       	sbrs	r17, 7
     f20:	81 91       	ld	r24, Z+
     f22:	4f 01       	movw	r8, r30
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	b3 01       	movw	r22, r6
     f28:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
     f2c:	e1 10       	cpse	r14, r1
     f2e:	ea 94       	dec	r14
     f30:	08 94       	sec
     f32:	c1 08       	sbc	r12, r1
     f34:	d1 08       	sbc	r13, r1
     f36:	c1 14       	cp	r12, r1
     f38:	d1 04       	cpc	r13, r1
     f3a:	71 f7       	brne	.-36     	; 0xf18 <vfprintf+0x1ae>
     f3c:	e7 c0       	rjmp	.+462    	; 0x110c <vfprintf+0x3a2>
     f3e:	84 36       	cpi	r24, 0x64	; 100
     f40:	11 f0       	breq	.+4      	; 0xf46 <vfprintf+0x1dc>
     f42:	89 36       	cpi	r24, 0x69	; 105
     f44:	51 f5       	brne	.+84     	; 0xf9a <vfprintf+0x230>
     f46:	f5 01       	movw	r30, r10
     f48:	17 ff       	sbrs	r17, 7
     f4a:	07 c0       	rjmp	.+14     	; 0xf5a <vfprintf+0x1f0>
     f4c:	80 81       	ld	r24, Z
     f4e:	91 81       	ldd	r25, Z+1	; 0x01
     f50:	a2 81       	ldd	r26, Z+2	; 0x02
     f52:	b3 81       	ldd	r27, Z+3	; 0x03
     f54:	24 e0       	ldi	r18, 0x04	; 4
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	08 c0       	rjmp	.+16     	; 0xf6a <vfprintf+0x200>
     f5a:	80 81       	ld	r24, Z
     f5c:	91 81       	ldd	r25, Z+1	; 0x01
     f5e:	aa 27       	eor	r26, r26
     f60:	97 fd       	sbrc	r25, 7
     f62:	a0 95       	com	r26
     f64:	ba 2f       	mov	r27, r26
     f66:	22 e0       	ldi	r18, 0x02	; 2
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	a2 0e       	add	r10, r18
     f6c:	b3 1e       	adc	r11, r19
     f6e:	01 2f       	mov	r16, r17
     f70:	0f 76       	andi	r16, 0x6F	; 111
     f72:	b7 ff       	sbrs	r27, 7
     f74:	08 c0       	rjmp	.+16     	; 0xf86 <vfprintf+0x21c>
     f76:	b0 95       	com	r27
     f78:	a0 95       	com	r26
     f7a:	90 95       	com	r25
     f7c:	81 95       	neg	r24
     f7e:	9f 4f       	sbci	r25, 0xFF	; 255
     f80:	af 4f       	sbci	r26, 0xFF	; 255
     f82:	bf 4f       	sbci	r27, 0xFF	; 255
     f84:	00 68       	ori	r16, 0x80	; 128
     f86:	bc 01       	movw	r22, r24
     f88:	cd 01       	movw	r24, r26
     f8a:	a2 01       	movw	r20, r4
     f8c:	2a e0       	ldi	r18, 0x0A	; 10
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__ultoa_invert>
     f94:	d8 2e       	mov	r13, r24
     f96:	d4 18       	sub	r13, r4
     f98:	3f c0       	rjmp	.+126    	; 0x1018 <vfprintf+0x2ae>
     f9a:	85 37       	cpi	r24, 0x75	; 117
     f9c:	21 f4       	brne	.+8      	; 0xfa6 <vfprintf+0x23c>
     f9e:	1f 7e       	andi	r17, 0xEF	; 239
     fa0:	2a e0       	ldi	r18, 0x0A	; 10
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	20 c0       	rjmp	.+64     	; 0xfe6 <vfprintf+0x27c>
     fa6:	19 7f       	andi	r17, 0xF9	; 249
     fa8:	8f 36       	cpi	r24, 0x6F	; 111
     faa:	a9 f0       	breq	.+42     	; 0xfd6 <vfprintf+0x26c>
     fac:	80 37       	cpi	r24, 0x70	; 112
     fae:	20 f4       	brcc	.+8      	; 0xfb8 <vfprintf+0x24e>
     fb0:	88 35       	cpi	r24, 0x58	; 88
     fb2:	09 f0       	breq	.+2      	; 0xfb6 <vfprintf+0x24c>
     fb4:	ae c0       	rjmp	.+348    	; 0x1112 <vfprintf+0x3a8>
     fb6:	0b c0       	rjmp	.+22     	; 0xfce <vfprintf+0x264>
     fb8:	80 37       	cpi	r24, 0x70	; 112
     fba:	21 f0       	breq	.+8      	; 0xfc4 <vfprintf+0x25a>
     fbc:	88 37       	cpi	r24, 0x78	; 120
     fbe:	09 f0       	breq	.+2      	; 0xfc2 <vfprintf+0x258>
     fc0:	a8 c0       	rjmp	.+336    	; 0x1112 <vfprintf+0x3a8>
     fc2:	01 c0       	rjmp	.+2      	; 0xfc6 <vfprintf+0x25c>
     fc4:	10 61       	ori	r17, 0x10	; 16
     fc6:	14 ff       	sbrs	r17, 4
     fc8:	09 c0       	rjmp	.+18     	; 0xfdc <vfprintf+0x272>
     fca:	14 60       	ori	r17, 0x04	; 4
     fcc:	07 c0       	rjmp	.+14     	; 0xfdc <vfprintf+0x272>
     fce:	14 ff       	sbrs	r17, 4
     fd0:	08 c0       	rjmp	.+16     	; 0xfe2 <vfprintf+0x278>
     fd2:	16 60       	ori	r17, 0x06	; 6
     fd4:	06 c0       	rjmp	.+12     	; 0xfe2 <vfprintf+0x278>
     fd6:	28 e0       	ldi	r18, 0x08	; 8
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	05 c0       	rjmp	.+10     	; 0xfe6 <vfprintf+0x27c>
     fdc:	20 e1       	ldi	r18, 0x10	; 16
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <vfprintf+0x27c>
     fe2:	20 e1       	ldi	r18, 0x10	; 16
     fe4:	32 e0       	ldi	r19, 0x02	; 2
     fe6:	f5 01       	movw	r30, r10
     fe8:	17 ff       	sbrs	r17, 7
     fea:	07 c0       	rjmp	.+14     	; 0xffa <vfprintf+0x290>
     fec:	60 81       	ld	r22, Z
     fee:	71 81       	ldd	r23, Z+1	; 0x01
     ff0:	82 81       	ldd	r24, Z+2	; 0x02
     ff2:	93 81       	ldd	r25, Z+3	; 0x03
     ff4:	44 e0       	ldi	r20, 0x04	; 4
     ff6:	50 e0       	ldi	r21, 0x00	; 0
     ff8:	06 c0       	rjmp	.+12     	; 0x1006 <vfprintf+0x29c>
     ffa:	60 81       	ld	r22, Z
     ffc:	71 81       	ldd	r23, Z+1	; 0x01
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	42 e0       	ldi	r20, 0x02	; 2
    1004:	50 e0       	ldi	r21, 0x00	; 0
    1006:	a4 0e       	add	r10, r20
    1008:	b5 1e       	adc	r11, r21
    100a:	a2 01       	movw	r20, r4
    100c:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__ultoa_invert>
    1010:	d8 2e       	mov	r13, r24
    1012:	d4 18       	sub	r13, r4
    1014:	01 2f       	mov	r16, r17
    1016:	0f 77       	andi	r16, 0x7F	; 127
    1018:	06 ff       	sbrs	r16, 6
    101a:	09 c0       	rjmp	.+18     	; 0x102e <vfprintf+0x2c4>
    101c:	0e 7f       	andi	r16, 0xFE	; 254
    101e:	df 14       	cp	r13, r15
    1020:	30 f4       	brcc	.+12     	; 0x102e <vfprintf+0x2c4>
    1022:	04 ff       	sbrs	r16, 4
    1024:	06 c0       	rjmp	.+12     	; 0x1032 <vfprintf+0x2c8>
    1026:	02 fd       	sbrc	r16, 2
    1028:	04 c0       	rjmp	.+8      	; 0x1032 <vfprintf+0x2c8>
    102a:	0f 7e       	andi	r16, 0xEF	; 239
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <vfprintf+0x2c8>
    102e:	1d 2d       	mov	r17, r13
    1030:	01 c0       	rjmp	.+2      	; 0x1034 <vfprintf+0x2ca>
    1032:	1f 2d       	mov	r17, r15
    1034:	80 2f       	mov	r24, r16
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	04 ff       	sbrs	r16, 4
    103a:	0c c0       	rjmp	.+24     	; 0x1054 <vfprintf+0x2ea>
    103c:	fe 01       	movw	r30, r28
    103e:	ed 0d       	add	r30, r13
    1040:	f1 1d       	adc	r31, r1
    1042:	20 81       	ld	r18, Z
    1044:	20 33       	cpi	r18, 0x30	; 48
    1046:	11 f4       	brne	.+4      	; 0x104c <vfprintf+0x2e2>
    1048:	09 7e       	andi	r16, 0xE9	; 233
    104a:	09 c0       	rjmp	.+18     	; 0x105e <vfprintf+0x2f4>
    104c:	02 ff       	sbrs	r16, 2
    104e:	06 c0       	rjmp	.+12     	; 0x105c <vfprintf+0x2f2>
    1050:	1e 5f       	subi	r17, 0xFE	; 254
    1052:	05 c0       	rjmp	.+10     	; 0x105e <vfprintf+0x2f4>
    1054:	86 78       	andi	r24, 0x86	; 134
    1056:	90 70       	andi	r25, 0x00	; 0
    1058:	00 97       	sbiw	r24, 0x00	; 0
    105a:	09 f0       	breq	.+2      	; 0x105e <vfprintf+0x2f4>
    105c:	1f 5f       	subi	r17, 0xFF	; 255
    105e:	80 2e       	mov	r8, r16
    1060:	99 24       	eor	r9, r9
    1062:	03 fd       	sbrc	r16, 3
    1064:	12 c0       	rjmp	.+36     	; 0x108a <vfprintf+0x320>
    1066:	00 ff       	sbrs	r16, 0
    1068:	0d c0       	rjmp	.+26     	; 0x1084 <vfprintf+0x31a>
    106a:	fd 2c       	mov	r15, r13
    106c:	1e 15       	cp	r17, r14
    106e:	50 f4       	brcc	.+20     	; 0x1084 <vfprintf+0x31a>
    1070:	fe 0c       	add	r15, r14
    1072:	f1 1a       	sub	r15, r17
    1074:	1e 2d       	mov	r17, r14
    1076:	06 c0       	rjmp	.+12     	; 0x1084 <vfprintf+0x31a>
    1078:	80 e2       	ldi	r24, 0x20	; 32
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	b3 01       	movw	r22, r6
    107e:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
    1082:	1f 5f       	subi	r17, 0xFF	; 255
    1084:	1e 15       	cp	r17, r14
    1086:	c0 f3       	brcs	.-16     	; 0x1078 <vfprintf+0x30e>
    1088:	04 c0       	rjmp	.+8      	; 0x1092 <vfprintf+0x328>
    108a:	1e 15       	cp	r17, r14
    108c:	10 f4       	brcc	.+4      	; 0x1092 <vfprintf+0x328>
    108e:	e1 1a       	sub	r14, r17
    1090:	01 c0       	rjmp	.+2      	; 0x1094 <vfprintf+0x32a>
    1092:	ee 24       	eor	r14, r14
    1094:	84 fe       	sbrs	r8, 4
    1096:	0f c0       	rjmp	.+30     	; 0x10b6 <vfprintf+0x34c>
    1098:	80 e3       	ldi	r24, 0x30	; 48
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	b3 01       	movw	r22, r6
    109e:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
    10a2:	82 fe       	sbrs	r8, 2
    10a4:	1f c0       	rjmp	.+62     	; 0x10e4 <vfprintf+0x37a>
    10a6:	81 fe       	sbrs	r8, 1
    10a8:	03 c0       	rjmp	.+6      	; 0x10b0 <vfprintf+0x346>
    10aa:	88 e5       	ldi	r24, 0x58	; 88
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	10 c0       	rjmp	.+32     	; 0x10d0 <vfprintf+0x366>
    10b0:	88 e7       	ldi	r24, 0x78	; 120
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	0d c0       	rjmp	.+26     	; 0x10d0 <vfprintf+0x366>
    10b6:	c4 01       	movw	r24, r8
    10b8:	86 78       	andi	r24, 0x86	; 134
    10ba:	90 70       	andi	r25, 0x00	; 0
    10bc:	00 97       	sbiw	r24, 0x00	; 0
    10be:	91 f0       	breq	.+36     	; 0x10e4 <vfprintf+0x37a>
    10c0:	81 fc       	sbrc	r8, 1
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <vfprintf+0x35e>
    10c4:	80 e2       	ldi	r24, 0x20	; 32
    10c6:	01 c0       	rjmp	.+2      	; 0x10ca <vfprintf+0x360>
    10c8:	8b e2       	ldi	r24, 0x2B	; 43
    10ca:	07 fd       	sbrc	r16, 7
    10cc:	8d e2       	ldi	r24, 0x2D	; 45
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	b3 01       	movw	r22, r6
    10d2:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
    10d6:	06 c0       	rjmp	.+12     	; 0x10e4 <vfprintf+0x37a>
    10d8:	80 e3       	ldi	r24, 0x30	; 48
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	b3 01       	movw	r22, r6
    10de:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
    10e2:	fa 94       	dec	r15
    10e4:	df 14       	cp	r13, r15
    10e6:	c0 f3       	brcs	.-16     	; 0x10d8 <vfprintf+0x36e>
    10e8:	da 94       	dec	r13
    10ea:	f2 01       	movw	r30, r4
    10ec:	ed 0d       	add	r30, r13
    10ee:	f1 1d       	adc	r31, r1
    10f0:	80 81       	ld	r24, Z
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	b3 01       	movw	r22, r6
    10f6:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
    10fa:	dd 20       	and	r13, r13
    10fc:	a9 f7       	brne	.-22     	; 0x10e8 <vfprintf+0x37e>
    10fe:	06 c0       	rjmp	.+12     	; 0x110c <vfprintf+0x3a2>
    1100:	80 e2       	ldi	r24, 0x20	; 32
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	b3 01       	movw	r22, r6
    1106:	0e 94 a9 08 	call	0x1152	; 0x1152 <fputc>
    110a:	ea 94       	dec	r14
    110c:	ee 20       	and	r14, r14
    110e:	c1 f7       	brne	.-16     	; 0x1100 <vfprintf+0x396>
    1110:	40 ce       	rjmp	.-896    	; 0xd92 <vfprintf+0x28>
    1112:	f3 01       	movw	r30, r6
    1114:	86 81       	ldd	r24, Z+6	; 0x06
    1116:	97 81       	ldd	r25, Z+7	; 0x07
    1118:	02 c0       	rjmp	.+4      	; 0x111e <vfprintf+0x3b4>
    111a:	8f ef       	ldi	r24, 0xFF	; 255
    111c:	9f ef       	ldi	r25, 0xFF	; 255
    111e:	2d 96       	adiw	r28, 0x0d	; 13
    1120:	e2 e1       	ldi	r30, 0x12	; 18
    1122:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__epilogue_restores__>

00001126 <strnlen_P>:
    1126:	fc 01       	movw	r30, r24
    1128:	05 90       	lpm	r0, Z+
    112a:	61 50       	subi	r22, 0x01	; 1
    112c:	70 40       	sbci	r23, 0x00	; 0
    112e:	01 10       	cpse	r0, r1
    1130:	d8 f7       	brcc	.-10     	; 0x1128 <strnlen_P+0x2>
    1132:	80 95       	com	r24
    1134:	90 95       	com	r25
    1136:	8e 0f       	add	r24, r30
    1138:	9f 1f       	adc	r25, r31
    113a:	08 95       	ret

0000113c <strnlen>:
    113c:	fc 01       	movw	r30, r24
    113e:	61 50       	subi	r22, 0x01	; 1
    1140:	70 40       	sbci	r23, 0x00	; 0
    1142:	01 90       	ld	r0, Z+
    1144:	01 10       	cpse	r0, r1
    1146:	d8 f7       	brcc	.-10     	; 0x113e <strnlen+0x2>
    1148:	80 95       	com	r24
    114a:	90 95       	com	r25
    114c:	8e 0f       	add	r24, r30
    114e:	9f 1f       	adc	r25, r31
    1150:	08 95       	ret

00001152 <fputc>:
    1152:	0f 93       	push	r16
    1154:	1f 93       	push	r17
    1156:	cf 93       	push	r28
    1158:	df 93       	push	r29
    115a:	8c 01       	movw	r16, r24
    115c:	eb 01       	movw	r28, r22
    115e:	8b 81       	ldd	r24, Y+3	; 0x03
    1160:	81 ff       	sbrs	r24, 1
    1162:	1b c0       	rjmp	.+54     	; 0x119a <fputc+0x48>
    1164:	82 ff       	sbrs	r24, 2
    1166:	0d c0       	rjmp	.+26     	; 0x1182 <fputc+0x30>
    1168:	2e 81       	ldd	r18, Y+6	; 0x06
    116a:	3f 81       	ldd	r19, Y+7	; 0x07
    116c:	8c 81       	ldd	r24, Y+4	; 0x04
    116e:	9d 81       	ldd	r25, Y+5	; 0x05
    1170:	28 17       	cp	r18, r24
    1172:	39 07       	cpc	r19, r25
    1174:	64 f4       	brge	.+24     	; 0x118e <fputc+0x3c>
    1176:	e8 81       	ld	r30, Y
    1178:	f9 81       	ldd	r31, Y+1	; 0x01
    117a:	01 93       	st	Z+, r16
    117c:	f9 83       	std	Y+1, r31	; 0x01
    117e:	e8 83       	st	Y, r30
    1180:	06 c0       	rjmp	.+12     	; 0x118e <fputc+0x3c>
    1182:	e8 85       	ldd	r30, Y+8	; 0x08
    1184:	f9 85       	ldd	r31, Y+9	; 0x09
    1186:	80 2f       	mov	r24, r16
    1188:	09 95       	icall
    118a:	00 97       	sbiw	r24, 0x00	; 0
    118c:	31 f4       	brne	.+12     	; 0x119a <fputc+0x48>
    118e:	8e 81       	ldd	r24, Y+6	; 0x06
    1190:	9f 81       	ldd	r25, Y+7	; 0x07
    1192:	01 96       	adiw	r24, 0x01	; 1
    1194:	9f 83       	std	Y+7, r25	; 0x07
    1196:	8e 83       	std	Y+6, r24	; 0x06
    1198:	02 c0       	rjmp	.+4      	; 0x119e <fputc+0x4c>
    119a:	0f ef       	ldi	r16, 0xFF	; 255
    119c:	1f ef       	ldi	r17, 0xFF	; 255
    119e:	c8 01       	movw	r24, r16
    11a0:	df 91       	pop	r29
    11a2:	cf 91       	pop	r28
    11a4:	1f 91       	pop	r17
    11a6:	0f 91       	pop	r16
    11a8:	08 95       	ret

000011aa <__ultoa_invert>:
    11aa:	fa 01       	movw	r30, r20
    11ac:	aa 27       	eor	r26, r26
    11ae:	28 30       	cpi	r18, 0x08	; 8
    11b0:	51 f1       	breq	.+84     	; 0x1206 <__ultoa_invert+0x5c>
    11b2:	20 31       	cpi	r18, 0x10	; 16
    11b4:	81 f1       	breq	.+96     	; 0x1216 <__ultoa_invert+0x6c>
    11b6:	e8 94       	clt
    11b8:	6f 93       	push	r22
    11ba:	6e 7f       	andi	r22, 0xFE	; 254
    11bc:	6e 5f       	subi	r22, 0xFE	; 254
    11be:	7f 4f       	sbci	r23, 0xFF	; 255
    11c0:	8f 4f       	sbci	r24, 0xFF	; 255
    11c2:	9f 4f       	sbci	r25, 0xFF	; 255
    11c4:	af 4f       	sbci	r26, 0xFF	; 255
    11c6:	b1 e0       	ldi	r27, 0x01	; 1
    11c8:	3e d0       	rcall	.+124    	; 0x1246 <__ultoa_invert+0x9c>
    11ca:	b4 e0       	ldi	r27, 0x04	; 4
    11cc:	3c d0       	rcall	.+120    	; 0x1246 <__ultoa_invert+0x9c>
    11ce:	67 0f       	add	r22, r23
    11d0:	78 1f       	adc	r23, r24
    11d2:	89 1f       	adc	r24, r25
    11d4:	9a 1f       	adc	r25, r26
    11d6:	a1 1d       	adc	r26, r1
    11d8:	68 0f       	add	r22, r24
    11da:	79 1f       	adc	r23, r25
    11dc:	8a 1f       	adc	r24, r26
    11de:	91 1d       	adc	r25, r1
    11e0:	a1 1d       	adc	r26, r1
    11e2:	6a 0f       	add	r22, r26
    11e4:	71 1d       	adc	r23, r1
    11e6:	81 1d       	adc	r24, r1
    11e8:	91 1d       	adc	r25, r1
    11ea:	a1 1d       	adc	r26, r1
    11ec:	20 d0       	rcall	.+64     	; 0x122e <__ultoa_invert+0x84>
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <__ultoa_invert+0x48>
    11f0:	68 94       	set
    11f2:	3f 91       	pop	r19
    11f4:	2a e0       	ldi	r18, 0x0A	; 10
    11f6:	26 9f       	mul	r18, r22
    11f8:	11 24       	eor	r1, r1
    11fa:	30 19       	sub	r19, r0
    11fc:	30 5d       	subi	r19, 0xD0	; 208
    11fe:	31 93       	st	Z+, r19
    1200:	de f6       	brtc	.-74     	; 0x11b8 <__ultoa_invert+0xe>
    1202:	cf 01       	movw	r24, r30
    1204:	08 95       	ret
    1206:	46 2f       	mov	r20, r22
    1208:	47 70       	andi	r20, 0x07	; 7
    120a:	40 5d       	subi	r20, 0xD0	; 208
    120c:	41 93       	st	Z+, r20
    120e:	b3 e0       	ldi	r27, 0x03	; 3
    1210:	0f d0       	rcall	.+30     	; 0x1230 <__ultoa_invert+0x86>
    1212:	c9 f7       	brne	.-14     	; 0x1206 <__ultoa_invert+0x5c>
    1214:	f6 cf       	rjmp	.-20     	; 0x1202 <__ultoa_invert+0x58>
    1216:	46 2f       	mov	r20, r22
    1218:	4f 70       	andi	r20, 0x0F	; 15
    121a:	40 5d       	subi	r20, 0xD0	; 208
    121c:	4a 33       	cpi	r20, 0x3A	; 58
    121e:	18 f0       	brcs	.+6      	; 0x1226 <__ultoa_invert+0x7c>
    1220:	49 5d       	subi	r20, 0xD9	; 217
    1222:	31 fd       	sbrc	r19, 1
    1224:	40 52       	subi	r20, 0x20	; 32
    1226:	41 93       	st	Z+, r20
    1228:	02 d0       	rcall	.+4      	; 0x122e <__ultoa_invert+0x84>
    122a:	a9 f7       	brne	.-22     	; 0x1216 <__ultoa_invert+0x6c>
    122c:	ea cf       	rjmp	.-44     	; 0x1202 <__ultoa_invert+0x58>
    122e:	b4 e0       	ldi	r27, 0x04	; 4
    1230:	a6 95       	lsr	r26
    1232:	97 95       	ror	r25
    1234:	87 95       	ror	r24
    1236:	77 95       	ror	r23
    1238:	67 95       	ror	r22
    123a:	ba 95       	dec	r27
    123c:	c9 f7       	brne	.-14     	; 0x1230 <__ultoa_invert+0x86>
    123e:	00 97       	sbiw	r24, 0x00	; 0
    1240:	61 05       	cpc	r22, r1
    1242:	71 05       	cpc	r23, r1
    1244:	08 95       	ret
    1246:	9b 01       	movw	r18, r22
    1248:	ac 01       	movw	r20, r24
    124a:	0a 2e       	mov	r0, r26
    124c:	06 94       	lsr	r0
    124e:	57 95       	ror	r21
    1250:	47 95       	ror	r20
    1252:	37 95       	ror	r19
    1254:	27 95       	ror	r18
    1256:	ba 95       	dec	r27
    1258:	c9 f7       	brne	.-14     	; 0x124c <__ultoa_invert+0xa2>
    125a:	62 0f       	add	r22, r18
    125c:	73 1f       	adc	r23, r19
    125e:	84 1f       	adc	r24, r20
    1260:	95 1f       	adc	r25, r21
    1262:	a0 1d       	adc	r26, r0
    1264:	08 95       	ret

00001266 <__prologue_saves__>:
    1266:	2f 92       	push	r2
    1268:	3f 92       	push	r3
    126a:	4f 92       	push	r4
    126c:	5f 92       	push	r5
    126e:	6f 92       	push	r6
    1270:	7f 92       	push	r7
    1272:	8f 92       	push	r8
    1274:	9f 92       	push	r9
    1276:	af 92       	push	r10
    1278:	bf 92       	push	r11
    127a:	cf 92       	push	r12
    127c:	df 92       	push	r13
    127e:	ef 92       	push	r14
    1280:	ff 92       	push	r15
    1282:	0f 93       	push	r16
    1284:	1f 93       	push	r17
    1286:	cf 93       	push	r28
    1288:	df 93       	push	r29
    128a:	cd b7       	in	r28, 0x3d	; 61
    128c:	de b7       	in	r29, 0x3e	; 62
    128e:	ca 1b       	sub	r28, r26
    1290:	db 0b       	sbc	r29, r27
    1292:	0f b6       	in	r0, 0x3f	; 63
    1294:	f8 94       	cli
    1296:	de bf       	out	0x3e, r29	; 62
    1298:	0f be       	out	0x3f, r0	; 63
    129a:	cd bf       	out	0x3d, r28	; 61
    129c:	09 94       	ijmp

0000129e <__epilogue_restores__>:
    129e:	2a 88       	ldd	r2, Y+18	; 0x12
    12a0:	39 88       	ldd	r3, Y+17	; 0x11
    12a2:	48 88       	ldd	r4, Y+16	; 0x10
    12a4:	5f 84       	ldd	r5, Y+15	; 0x0f
    12a6:	6e 84       	ldd	r6, Y+14	; 0x0e
    12a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    12aa:	8c 84       	ldd	r8, Y+12	; 0x0c
    12ac:	9b 84       	ldd	r9, Y+11	; 0x0b
    12ae:	aa 84       	ldd	r10, Y+10	; 0x0a
    12b0:	b9 84       	ldd	r11, Y+9	; 0x09
    12b2:	c8 84       	ldd	r12, Y+8	; 0x08
    12b4:	df 80       	ldd	r13, Y+7	; 0x07
    12b6:	ee 80       	ldd	r14, Y+6	; 0x06
    12b8:	fd 80       	ldd	r15, Y+5	; 0x05
    12ba:	0c 81       	ldd	r16, Y+4	; 0x04
    12bc:	1b 81       	ldd	r17, Y+3	; 0x03
    12be:	aa 81       	ldd	r26, Y+2	; 0x02
    12c0:	b9 81       	ldd	r27, Y+1	; 0x01
    12c2:	ce 0f       	add	r28, r30
    12c4:	d1 1d       	adc	r29, r1
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	ed 01       	movw	r28, r26
    12d2:	08 95       	ret

000012d4 <_exit>:
    12d4:	f8 94       	cli

000012d6 <__stop_program>:
    12d6:	ff cf       	rjmp	.-2      	; 0x12d6 <__stop_program>
