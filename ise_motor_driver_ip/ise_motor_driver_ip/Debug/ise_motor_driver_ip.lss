
ise_motor_driver_ip.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001234  000012c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001234  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000041e  00800106  00800106  000012ce  2**0
                  ALLOC
  3 .stab         00002bec  00000000  00000000  000012d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000009ba  00000000  00000000  00003ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  00004878  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001236  00000000  00000000  000049f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000784  00000000  00000000  00005c2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ae4  00000000  00000000  000063b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000370  00000000  00000000  00006e98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000060e  00000000  00000000  00007208  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a92  00000000  00000000  00007816  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000082a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 9e 02 	jmp	0x53c	; 0x53c <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__vector_24>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 e3       	ldi	r30, 0x34	; 52
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 30       	cpi	r26, 0x06	; 6
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	15 e0       	ldi	r17, 0x05	; 5
      8c:	a6 e0       	ldi	r26, 0x06	; 6
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a4 32       	cpi	r26, 0x24	; 36
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <main>
      9e:	0c 94 18 09 	jmp	0x1230	; 0x1230 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z16I2C_setCallbacksPFvhEPFvvE>:
static void (*I2C_recv)(uint8_t);
static void (*I2C_req)();

void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)())
{
	I2C_recv = recv;
      a6:	90 93 07 01 	sts	0x0107, r25
      aa:	80 93 06 01 	sts	0x0106, r24
	I2C_req = req;
      ae:	70 93 09 01 	sts	0x0109, r23
      b2:	60 93 08 01 	sts	0x0108, r22
}
      b6:	08 95       	ret

000000b8 <_Z8I2C_inith>:

void I2C_init(uint8_t address)
{
	cli();
      b8:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
      ba:	88 0f       	add	r24, r24
      bc:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
      c0:	85 ec       	ldi	r24, 0xC5	; 197
      c2:	80 93 bc 00 	sts	0x00BC, r24
	sei();
      c6:	78 94       	sei
}
      c8:	08 95       	ret

000000ca <_Z13I2C_init_synch>:

void I2C_init_sync(uint8_t address)
{
	cli();
      ca:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
      cc:	88 0f       	add	r24, r24
      ce:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
      d2:	84 ec       	ldi	r24, 0xC4	; 196
      d4:	80 93 bc 00 	sts	0x00BC, r24
	sei();
      d8:	78 94       	sei
}
      da:	08 95       	ret

000000dc <_Z8I2C_stopv>:

void I2C_stop(void)
{
	// clear acknowledge and enable bits
	cli();
      dc:	f8 94       	cli
	TWCR = 0;
      de:	10 92 bc 00 	sts	0x00BC, r1
	TWAR = 0;
      e2:	10 92 ba 00 	sts	0x00BA, r1
	sei();
      e6:	78 94       	sei
}
      e8:	08 95       	ret

000000ea <_Z8I2C_mainv>:

void I2C_main()
{
	//é©à∂SLA+RéÛêMÇ‹Ç≈ë“ã@
	while( !(TWCR & (1 << TWINT)));
      ea:	ec eb       	ldi	r30, 0xBC	; 188
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	88 23       	and	r24, r24
      f2:	ec f7       	brge	.-6      	; 0xee <_Z8I2C_mainv+0x4>
	
	switch(TW_STATUS)
      f4:	80 91 b9 00 	lds	r24, 0x00B9
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	88 7f       	andi	r24, 0xF8	; 248
      fc:	90 70       	andi	r25, 0x00	; 0
      fe:	80 38       	cpi	r24, 0x80	; 128
     100:	91 05       	cpc	r25, r1
     102:	69 f0       	breq	.+26     	; 0x11e <_Z8I2C_mainv+0x34>
     104:	81 38       	cpi	r24, 0x81	; 129
     106:	91 05       	cpc	r25, r1
     108:	1c f4       	brge	.+6      	; 0x110 <_Z8I2C_mainv+0x26>
     10a:	00 97       	sbiw	r24, 0x00	; 0
     10c:	29 f1       	breq	.+74     	; 0x158 <_Z8I2C_mainv+0x6e>
     10e:	2a c0       	rjmp	.+84     	; 0x164 <_Z8I2C_mainv+0x7a>
     110:	88 3a       	cpi	r24, 0xA8	; 168
     112:	91 05       	cpc	r25, r1
     114:	79 f0       	breq	.+30     	; 0x134 <_Z8I2C_mainv+0x4a>
     116:	88 3b       	cpi	r24, 0xB8	; 184
     118:	91 05       	cpc	r25, r1
     11a:	21 f5       	brne	.+72     	; 0x164 <_Z8I2C_mainv+0x7a>
     11c:	14 c0       	rjmp	.+40     	; 0x146 <_Z8I2C_mainv+0x5c>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     11e:	80 91 bb 00 	lds	r24, 0x00BB
     122:	e0 91 06 01 	lds	r30, 0x0106
     126:	f0 91 07 01 	lds	r31, 0x0107
     12a:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     12c:	84 ec       	ldi	r24, 0xC4	; 196
     12e:	80 93 bc 00 	sts	0x00BC, r24
		break;
     132:	08 95       	ret
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     134:	e0 91 08 01 	lds	r30, 0x0108
     138:	f0 91 09 01 	lds	r31, 0x0109
     13c:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     13e:	84 ec       	ldi	r24, 0xC4	; 196
     140:	80 93 bc 00 	sts	0x00BC, r24
		break;
     144:	08 95       	ret
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     146:	e0 91 08 01 	lds	r30, 0x0108
     14a:	f0 91 09 01 	lds	r31, 0x0109
     14e:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     150:	84 ec       	ldi	r24, 0xC4	; 196
     152:	80 93 bc 00 	sts	0x00BC, r24
		break;
     156:	08 95       	ret
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     158:	ec eb       	ldi	r30, 0xBC	; 188
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	10 82       	st	Z, r1
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     15e:	84 ec       	ldi	r24, 0xC4	; 196
     160:	80 83       	st	Z, r24
		break;
     162:	08 95       	ret
		default:
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     164:	84 ec       	ldi	r24, 0xC4	; 196
     166:	80 93 bc 00 	sts	0x00BC, r24
     16a:	08 95       	ret

0000016c <__vector_24>:
	}
}


ISR(TWI_vect)
{
     16c:	1f 92       	push	r1
     16e:	0f 92       	push	r0
     170:	0f b6       	in	r0, 0x3f	; 63
     172:	0f 92       	push	r0
     174:	11 24       	eor	r1, r1
     176:	2f 93       	push	r18
     178:	3f 93       	push	r19
     17a:	4f 93       	push	r20
     17c:	5f 93       	push	r21
     17e:	6f 93       	push	r22
     180:	7f 93       	push	r23
     182:	8f 93       	push	r24
     184:	9f 93       	push	r25
     186:	af 93       	push	r26
     188:	bf 93       	push	r27
     18a:	ef 93       	push	r30
     18c:	ff 93       	push	r31
	switch(TW_STATUS)
     18e:	80 91 b9 00 	lds	r24, 0x00B9
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	88 7f       	andi	r24, 0xF8	; 248
     196:	90 70       	andi	r25, 0x00	; 0
     198:	80 38       	cpi	r24, 0x80	; 128
     19a:	91 05       	cpc	r25, r1
     19c:	69 f0       	breq	.+26     	; 0x1b8 <__vector_24+0x4c>
     19e:	81 38       	cpi	r24, 0x81	; 129
     1a0:	91 05       	cpc	r25, r1
     1a2:	1c f4       	brge	.+6      	; 0x1aa <__vector_24+0x3e>
     1a4:	00 97       	sbiw	r24, 0x00	; 0
     1a6:	29 f1       	breq	.+74     	; 0x1f2 <__vector_24+0x86>
     1a8:	2a c0       	rjmp	.+84     	; 0x1fe <__vector_24+0x92>
     1aa:	88 3a       	cpi	r24, 0xA8	; 168
     1ac:	91 05       	cpc	r25, r1
     1ae:	79 f0       	breq	.+30     	; 0x1ce <__vector_24+0x62>
     1b0:	88 3b       	cpi	r24, 0xB8	; 184
     1b2:	91 05       	cpc	r25, r1
     1b4:	21 f5       	brne	.+72     	; 0x1fe <__vector_24+0x92>
     1b6:	14 c0       	rjmp	.+40     	; 0x1e0 <__vector_24+0x74>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     1b8:	80 91 bb 00 	lds	r24, 0x00BB
     1bc:	e0 91 06 01 	lds	r30, 0x0106
     1c0:	f0 91 07 01 	lds	r31, 0x0107
     1c4:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1c6:	85 ec       	ldi	r24, 0xC5	; 197
     1c8:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1cc:	1b c0       	rjmp	.+54     	; 0x204 <__vector_24+0x98>
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     1ce:	e0 91 08 01 	lds	r30, 0x0108
     1d2:	f0 91 09 01 	lds	r31, 0x0109
     1d6:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1d8:	85 ec       	ldi	r24, 0xC5	; 197
     1da:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1de:	12 c0       	rjmp	.+36     	; 0x204 <__vector_24+0x98>
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     1e0:	e0 91 08 01 	lds	r30, 0x0108
     1e4:	f0 91 09 01 	lds	r31, 0x0109
     1e8:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1ea:	85 ec       	ldi	r24, 0xC5	; 197
     1ec:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1f0:	09 c0       	rjmp	.+18     	; 0x204 <__vector_24+0x98>
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     1f2:	ec eb       	ldi	r30, 0xBC	; 188
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1f8:	85 ec       	ldi	r24, 0xC5	; 197
     1fa:	80 83       	st	Z, r24
		break;
     1fc:	03 c0       	rjmp	.+6      	; 0x204 <__vector_24+0x98>
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1fe:	85 ec       	ldi	r24, 0xC5	; 197
     200:	80 93 bc 00 	sts	0x00BC, r24
		break;
	}
     204:	ff 91       	pop	r31
     206:	ef 91       	pop	r30
     208:	bf 91       	pop	r27
     20a:	af 91       	pop	r26
     20c:	9f 91       	pop	r25
     20e:	8f 91       	pop	r24
     210:	7f 91       	pop	r23
     212:	6f 91       	pop	r22
     214:	5f 91       	pop	r21
     216:	4f 91       	pop	r20
     218:	3f 91       	pop	r19
     21a:	2f 91       	pop	r18
     21c:	0f 90       	pop	r0
     21e:	0f be       	out	0x3f, r0	; 63
     220:	0f 90       	pop	r0
     222:	1f 90       	pop	r1
     224:	18 95       	reti

00000226 <_Z14i2c_request_cbPc>:
}

void i2c_request_cb(char* buf) {
	// set TI2C_buf_send.str_buf
	//strcpy(buf, "Hello World\n");
	sprintf(buf,"%ld",count);
     226:	40 91 10 01 	lds	r20, 0x0110
     22a:	50 91 11 01 	lds	r21, 0x0111
     22e:	60 91 12 01 	lds	r22, 0x0112
     232:	70 91 13 01 	lds	r23, 0x0113
     236:	2d b7       	in	r18, 0x3d	; 61
     238:	3e b7       	in	r19, 0x3e	; 62
     23a:	28 50       	subi	r18, 0x08	; 8
     23c:	30 40       	sbci	r19, 0x00	; 0
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	3e bf       	out	0x3e, r19	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	2d bf       	out	0x3d, r18	; 61
     248:	ed b7       	in	r30, 0x3d	; 61
     24a:	fe b7       	in	r31, 0x3e	; 62
     24c:	31 96       	adiw	r30, 0x01	; 1
     24e:	ad b7       	in	r26, 0x3d	; 61
     250:	be b7       	in	r27, 0x3e	; 62
     252:	12 96       	adiw	r26, 0x02	; 2
     254:	9c 93       	st	X, r25
     256:	8e 93       	st	-X, r24
     258:	11 97       	sbiw	r26, 0x01	; 1
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	93 83       	std	Z+3, r25	; 0x03
     260:	82 83       	std	Z+2, r24	; 0x02
     262:	44 83       	std	Z+4, r20	; 0x04
     264:	55 83       	std	Z+5, r21	; 0x05
     266:	66 83       	std	Z+6, r22	; 0x06
     268:	77 83       	std	Z+7, r23	; 0x07
     26a:	0e 94 41 06 	call	0xc82	; 0xc82 <sprintf>
     26e:	2d b7       	in	r18, 0x3d	; 61
     270:	3e b7       	in	r19, 0x3e	; 62
     272:	28 5f       	subi	r18, 0xF8	; 248
     274:	3f 4f       	sbci	r19, 0xFF	; 255
     276:	0f b6       	in	r0, 0x3f	; 63
     278:	f8 94       	cli
     27a:	3e bf       	out	0x3e, r19	; 62
     27c:	0f be       	out	0x3f, r0	; 63
     27e:	2d bf       	out	0x3d, r18	; 61
}
     280:	08 95       	ret

00000282 <_Z15i2c_received_cbPc>:
volatile int pw = 0;
volatile int target_enc = 400;
volatile long timer_count = 0;

void i2c_received_cb(char* str) {
	motor_set_speed(atoi(str));
     282:	0e 94 1b 06 	call	0xc36	; 0xc36 <atoi>
     286:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <_Z15motor_set_speedi>
}
     28a:	08 95       	ret

0000028c <_Z3pidv>:
	// set TI2C_buf_send.str_buf
	//strcpy(buf, "Hello World\n");
	sprintf(buf,"%ld",count);
}

void pid() {
     28c:	4f 92       	push	r4
     28e:	5f 92       	push	r5
     290:	6f 92       	push	r6
     292:	7f 92       	push	r7
     294:	8f 92       	push	r8
     296:	9f 92       	push	r9
     298:	af 92       	push	r10
     29a:	bf 92       	push	r11
     29c:	cf 92       	push	r12
     29e:	df 92       	push	r13
     2a0:	ef 92       	push	r14
     2a2:	ff 92       	push	r15
     2a4:	0f 93       	push	r16
     2a6:	1f 93       	push	r17
     2a8:	cf 93       	push	r28
     2aa:	df 93       	push	r29
     2ac:	00 d0       	rcall	.+0      	; 0x2ae <_Z3pidv+0x22>
     2ae:	00 d0       	rcall	.+0      	; 0x2b0 <_Z3pidv+0x24>
     2b0:	cd b7       	in	r28, 0x3d	; 61
     2b2:	de b7       	in	r29, 0x3e	; 62
  double dt = 0.1; // 0.1sec
  
  static double now_diff;   
  static double pre_enc;	
  static double pre_diff;
  double now_enc = count;
     2b4:	c0 90 10 01 	lds	r12, 0x0110
     2b8:	d0 90 11 01 	lds	r13, 0x0111
     2bc:	e0 90 12 01 	lds	r14, 0x0112
     2c0:	f0 90 13 01 	lds	r15, 0x0113
  
  
  pre_diff = now_diff;
     2c4:	40 90 14 01 	lds	r4, 0x0114
     2c8:	50 90 15 01 	lds	r5, 0x0115
     2cc:	60 90 16 01 	lds	r6, 0x0116
     2d0:	70 90 17 01 	lds	r7, 0x0117
     2d4:	40 92 18 01 	sts	0x0118, r4
     2d8:	50 92 19 01 	sts	0x0119, r5
     2dc:	60 92 1a 01 	sts	0x011A, r6
     2e0:	70 92 1b 01 	sts	0x011B, r7
  now_diff = target_enc - now_enc;
     2e4:	60 91 04 01 	lds	r22, 0x0104
     2e8:	70 91 05 01 	lds	r23, 0x0105
     2ec:	88 27       	eor	r24, r24
     2ee:	77 fd       	sbrc	r23, 7
     2f0:	80 95       	com	r24
     2f2:	98 2f       	mov	r25, r24
     2f4:	0e 94 04 05 	call	0xa08	; 0xa08 <__floatsisf>
     2f8:	4b 01       	movw	r8, r22
     2fa:	5c 01       	movw	r10, r24
  double dt = 0.1; // 0.1sec
  
  static double now_diff;   
  static double pre_enc;	
  static double pre_diff;
  double now_enc = count;
     2fc:	c7 01       	movw	r24, r14
     2fe:	b6 01       	movw	r22, r12
     300:	0e 94 04 05 	call	0xa08	; 0xa08 <__floatsisf>
     304:	9b 01       	movw	r18, r22
     306:	ac 01       	movw	r20, r24
  
  
  pre_diff = now_diff;
  now_diff = target_enc - now_enc;
     308:	c5 01       	movw	r24, r10
     30a:	b4 01       	movw	r22, r8
     30c:	0e 94 00 04 	call	0x800	; 0x800 <__subsf3>
     310:	b6 2e       	mov	r11, r22
     312:	d7 2e       	mov	r13, r23
     314:	88 2e       	mov	r8, r24
     316:	c9 2e       	mov	r12, r25
     318:	86 2f       	mov	r24, r22
     31a:	9d 2d       	mov	r25, r13
     31c:	a8 2d       	mov	r26, r8
     31e:	bc 2d       	mov	r27, r12
     320:	80 93 14 01 	sts	0x0114, r24
     324:	90 93 15 01 	sts	0x0115, r25
     328:	a0 93 16 01 	sts	0x0116, r26
     32c:	b0 93 17 01 	sts	0x0117, r27
  if(now_diff>320)power=12;
     330:	bc 01       	movw	r22, r24
     332:	cd 01       	movw	r24, r26
     334:	20 e0       	ldi	r18, 0x00	; 0
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	40 ea       	ldi	r20, 0xA0	; 160
     33a:	53 e4       	ldi	r21, 0x43	; 67
     33c:	0e 94 b4 05 	call	0xb68	; 0xb68 <__gesf2>
     340:	18 16       	cp	r1, r24
     342:	ec f1       	brlt	.+122    	; 0x3be <_Z3pidv+0x132>
  else if(now_diff<-320)power=-12;
     344:	8b 2d       	mov	r24, r11
     346:	9d 2d       	mov	r25, r13
     348:	a8 2d       	mov	r26, r8
     34a:	bc 2d       	mov	r27, r12
     34c:	bc 01       	movw	r22, r24
     34e:	cd 01       	movw	r24, r26
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	40 ea       	ldi	r20, 0xA0	; 160
     356:	53 ec       	ldi	r21, 0xC3	; 195
     358:	0e 94 65 04 	call	0x8ca	; 0x8ca <__cmpsf2>
     35c:	88 23       	and	r24, r24
     35e:	cc f1       	brlt	.+114    	; 0x3d2 <_Z3pidv+0x146>
  p = KP * now_diff;
  i = KI * integral ;
  d = KD * (now_diff - pre_diff) /dt;
  
  power = power+ p + i + d;
  if(fabs(target_enc)<0.05 && fabs(now_vel)<0.01 /*&&fabs(power) < 10*/)
     360:	60 91 04 01 	lds	r22, 0x0104
     364:	70 91 05 01 	lds	r23, 0x0105
     368:	88 27       	eor	r24, r24
     36a:	77 fd       	sbrc	r23, 7
     36c:	80 95       	com	r24
     36e:	98 2f       	mov	r25, r24
     370:	0e 94 04 05 	call	0xa08	; 0xa08 <__floatsisf>
     374:	9f 77       	andi	r25, 0x7F	; 127
     376:	2d ec       	ldi	r18, 0xCD	; 205
     378:	3c ec       	ldi	r19, 0xCC	; 204
     37a:	4c e4       	ldi	r20, 0x4C	; 76
     37c:	5d e3       	ldi	r21, 0x3D	; 61
     37e:	0e 94 65 04 	call	0x8ca	; 0x8ca <__cmpsf2>
     382:	88 23       	and	r24, r24
     384:	0c f0       	brlt	.+2      	; 0x388 <_Z3pidv+0xfc>
     386:	68 c0       	rjmp	.+208    	; 0x458 <_Z3pidv+0x1cc>
     388:	60 e0       	ldi	r22, 0x00	; 0
     38a:	70 e0       	ldi	r23, 0x00	; 0
     38c:	cb 01       	movw	r24, r22
     38e:	2a e0       	ldi	r18, 0x0A	; 10
     390:	37 ed       	ldi	r19, 0xD7	; 215
     392:	43 e2       	ldi	r20, 0x23	; 35
     394:	5c e3       	ldi	r21, 0x3C	; 60
     396:	0e 94 65 04 	call	0x8ca	; 0x8ca <__cmpsf2>
     39a:	88 23       	and	r24, r24
     39c:	24 f1       	brlt	.+72     	; 0x3e6 <_Z3pidv+0x15a>
     39e:	5c c0       	rjmp	.+184    	; 0x458 <_Z3pidv+0x1cc>
    power = 0;

  }
  else if(12 < power )
    power = 12;
  else if(power < -12)
     3a0:	88 2d       	mov	r24, r8
     3a2:	9c 2d       	mov	r25, r12
     3a4:	a4 2d       	mov	r26, r4
     3a6:	bf 2d       	mov	r27, r15
     3a8:	bc 01       	movw	r22, r24
     3aa:	cd 01       	movw	r24, r26
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	30 e0       	ldi	r19, 0x00	; 0
     3b0:	40 e4       	ldi	r20, 0x40	; 64
     3b2:	51 ec       	ldi	r21, 0xC1	; 193
     3b4:	0e 94 65 04 	call	0x8ca	; 0x8ca <__cmpsf2>
     3b8:	88 23       	and	r24, r24
     3ba:	d4 f0       	brlt	.+52     	; 0x3f0 <_Z3pidv+0x164>
     3bc:	2c c0       	rjmp	.+88     	; 0x416 <_Z3pidv+0x18a>
  double now_enc = count;
  
  
  pre_diff = now_diff;
  now_diff = target_enc - now_enc;
  if(now_diff>320)power=12;
     3be:	00 e0       	ldi	r16, 0x00	; 0
     3c0:	10 e0       	ldi	r17, 0x00	; 0
     3c2:	dd 24       	eor	r13, r13
     3c4:	68 94       	set
     3c6:	d6 f8       	bld	r13, 6
     3c8:	0f 2e       	mov	r0, r31
     3ca:	f1 e4       	ldi	r31, 0x41	; 65
     3cc:	ef 2e       	mov	r14, r31
     3ce:	f0 2d       	mov	r31, r0
     3d0:	22 c0       	rjmp	.+68     	; 0x416 <_Z3pidv+0x18a>
  else if(now_diff<-320)power=-12;
     3d2:	00 e0       	ldi	r16, 0x00	; 0
     3d4:	10 e0       	ldi	r17, 0x00	; 0
     3d6:	dd 24       	eor	r13, r13
     3d8:	68 94       	set
     3da:	d6 f8       	bld	r13, 6
     3dc:	0f 2e       	mov	r0, r31
     3de:	f1 ec       	ldi	r31, 0xC1	; 193
     3e0:	ef 2e       	mov	r14, r31
     3e2:	f0 2d       	mov	r31, r0
     3e4:	18 c0       	rjmp	.+48     	; 0x416 <_Z3pidv+0x18a>
  
  power = power+ p + i + d;
  if(fabs(target_enc)<0.05 && fabs(now_vel)<0.01 /*&&fabs(power) < 10*/)
  {
    integral = 0;
    power = 0;
     3e6:	00 e0       	ldi	r16, 0x00	; 0
     3e8:	10 e0       	ldi	r17, 0x00	; 0
     3ea:	dd 24       	eor	r13, r13
     3ec:	ee 24       	eor	r14, r14
     3ee:	13 c0       	rjmp	.+38     	; 0x416 <_Z3pidv+0x18a>

  }
  else if(12 < power )
    power = 12;
  else if(power < -12)
    power = -12;
     3f0:	00 e0       	ldi	r16, 0x00	; 0
     3f2:	10 e0       	ldi	r17, 0x00	; 0
     3f4:	dd 24       	eor	r13, r13
     3f6:	68 94       	set
     3f8:	d6 f8       	bld	r13, 6
     3fa:	0f 2e       	mov	r0, r31
     3fc:	f1 ec       	ldi	r31, 0xC1	; 193
     3fe:	ef 2e       	mov	r14, r31
     400:	f0 2d       	mov	r31, r0
     402:	09 c0       	rjmp	.+18     	; 0x416 <_Z3pidv+0x18a>
    integral = 0;
    power = 0;

  }
  else if(12 < power )
    power = 12;
     404:	00 e0       	ldi	r16, 0x00	; 0
     406:	10 e0       	ldi	r17, 0x00	; 0
     408:	dd 24       	eor	r13, r13
     40a:	68 94       	set
     40c:	d6 f8       	bld	r13, 6
     40e:	0f 2e       	mov	r0, r31
     410:	f1 e4       	ldi	r31, 0x41	; 65
     412:	ef 2e       	mov	r14, r31
     414:	f0 2d       	mov	r31, r0
  else if(power < -12)
    power = -12;
  }
 //return power;  
	motor_set_speed(power);
     416:	80 2f       	mov	r24, r16
     418:	91 2f       	mov	r25, r17
     41a:	ad 2d       	mov	r26, r13
     41c:	be 2d       	mov	r27, r14
     41e:	bc 01       	movw	r22, r24
     420:	cd 01       	movw	r24, r26
     422:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__fixsfsi>
     426:	dc 01       	movw	r26, r24
     428:	cb 01       	movw	r24, r22
     42a:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <_Z15motor_set_speedi>
}
     42e:	0f 90       	pop	r0
     430:	0f 90       	pop	r0
     432:	0f 90       	pop	r0
     434:	0f 90       	pop	r0
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	1f 91       	pop	r17
     43c:	0f 91       	pop	r16
     43e:	ff 90       	pop	r15
     440:	ef 90       	pop	r14
     442:	df 90       	pop	r13
     444:	cf 90       	pop	r12
     446:	bf 90       	pop	r11
     448:	af 90       	pop	r10
     44a:	9f 90       	pop	r9
     44c:	8f 90       	pop	r8
     44e:	7f 90       	pop	r7
     450:	6f 90       	pop	r6
     452:	5f 90       	pop	r5
     454:	4f 90       	pop	r4
     456:	08 95       	ret
  pre_diff = now_diff;
  now_diff = target_enc - now_enc;
  if(now_diff>320)power=12;
  else if(now_diff<-320)power=-12;
  else{
  integral += now_diff * dt;
     458:	8b 2d       	mov	r24, r11
     45a:	9d 2d       	mov	r25, r13
     45c:	a8 2d       	mov	r26, r8
     45e:	bc 2d       	mov	r27, r12
     460:	bc 01       	movw	r22, r24
     462:	cd 01       	movw	r24, r26
     464:	2d ec       	ldi	r18, 0xCD	; 205
     466:	3c ec       	ldi	r19, 0xCC	; 204
     468:	4c ec       	ldi	r20, 0xCC	; 204
     46a:	5d e3       	ldi	r21, 0x3D	; 61
     46c:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     470:	16 2f       	mov	r17, r22
     472:	07 2f       	mov	r16, r23
     474:	f8 2e       	mov	r15, r24
     476:	e9 2e       	mov	r14, r25

  p = KP * now_diff;
  i = KI * integral ;
  d = KD * (now_diff - pre_diff) /dt;
  
  power = power+ p + i + d;
     478:	86 2f       	mov	r24, r22
     47a:	90 2f       	mov	r25, r16
     47c:	af 2d       	mov	r26, r15
     47e:	be 2d       	mov	r27, r14
     480:	bc 01       	movw	r22, r24
     482:	cd 01       	movw	r24, r26
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	a9 01       	movw	r20, r18
     48a:	0e 94 01 04 	call	0x802	; 0x802 <__addsf3>
     48e:	69 83       	std	Y+1, r22	; 0x01
     490:	7a 83       	std	Y+2, r23	; 0x02
     492:	8b 83       	std	Y+3, r24	; 0x03
     494:	9c 83       	std	Y+4, r25	; 0x04
  pre_diff = now_diff;
  now_diff = target_enc - now_enc;
  if(now_diff>320)power=12;
  else if(now_diff<-320)power=-12;
  else{
  integral += now_diff * dt;
     496:	81 2f       	mov	r24, r17
     498:	90 2f       	mov	r25, r16
     49a:	af 2d       	mov	r26, r15
     49c:	be 2d       	mov	r27, r14
     49e:	bc 01       	movw	r22, r24
     4a0:	cd 01       	movw	r24, r26
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	a9 01       	movw	r20, r18
     4a8:	0e 94 01 04 	call	0x802	; 0x802 <__addsf3>

  p = KP * now_diff;
  i = KI * integral ;
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	a9 01       	movw	r20, r18
     4b2:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     4b6:	9b 01       	movw	r18, r22
     4b8:	ac 01       	movw	r20, r24
  d = KD * (now_diff - pre_diff) /dt;
  
  power = power+ p + i + d;
     4ba:	69 81       	ldd	r22, Y+1	; 0x01
     4bc:	7a 81       	ldd	r23, Y+2	; 0x02
     4be:	8b 81       	ldd	r24, Y+3	; 0x03
     4c0:	9c 81       	ldd	r25, Y+4	; 0x04
     4c2:	0e 94 01 04 	call	0x802	; 0x802 <__addsf3>
     4c6:	16 2f       	mov	r17, r22
     4c8:	07 2f       	mov	r16, r23
     4ca:	f8 2e       	mov	r15, r24
     4cc:	e9 2e       	mov	r14, r25
  else{
  integral += now_diff * dt;

  p = KP * now_diff;
  i = KI * integral ;
  d = KD * (now_diff - pre_diff) /dt;
     4ce:	8b 2d       	mov	r24, r11
     4d0:	9d 2d       	mov	r25, r13
     4d2:	a8 2d       	mov	r26, r8
     4d4:	bc 2d       	mov	r27, r12
     4d6:	bc 01       	movw	r22, r24
     4d8:	cd 01       	movw	r24, r26
     4da:	a3 01       	movw	r20, r6
     4dc:	92 01       	movw	r18, r4
     4de:	0e 94 00 04 	call	0x800	; 0x800 <__subsf3>
     4e2:	20 e0       	ldi	r18, 0x00	; 0
     4e4:	30 e0       	ldi	r19, 0x00	; 0
     4e6:	a9 01       	movw	r20, r18
     4e8:	0e 94 b8 05 	call	0xb70	; 0xb70 <__mulsf3>
     4ec:	2d ec       	ldi	r18, 0xCD	; 205
     4ee:	3c ec       	ldi	r19, 0xCC	; 204
     4f0:	4c ec       	ldi	r20, 0xCC	; 204
     4f2:	5d e3       	ldi	r21, 0x3D	; 61
     4f4:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__divsf3>
     4f8:	9b 01       	movw	r18, r22
     4fa:	ac 01       	movw	r20, r24
  
  power = power+ p + i + d;
     4fc:	81 2f       	mov	r24, r17
     4fe:	90 2f       	mov	r25, r16
     500:	af 2d       	mov	r26, r15
     502:	be 2d       	mov	r27, r14
     504:	bc 01       	movw	r22, r24
     506:	cd 01       	movw	r24, r26
     508:	0e 94 01 04 	call	0x802	; 0x802 <__addsf3>
     50c:	86 2e       	mov	r8, r22
     50e:	c7 2e       	mov	r12, r23
     510:	48 2e       	mov	r4, r24
     512:	f9 2e       	mov	r15, r25
     514:	06 2f       	mov	r16, r22
     516:	17 2f       	mov	r17, r23
     518:	d8 2e       	mov	r13, r24
     51a:	e9 2e       	mov	r14, r25
  {
    integral = 0;
    power = 0;

  }
  else if(12 < power )
     51c:	86 2f       	mov	r24, r22
     51e:	91 2f       	mov	r25, r17
     520:	a4 2d       	mov	r26, r4
     522:	bf 2d       	mov	r27, r15
     524:	bc 01       	movw	r22, r24
     526:	cd 01       	movw	r24, r26
     528:	20 e0       	ldi	r18, 0x00	; 0
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	40 e4       	ldi	r20, 0x40	; 64
     52e:	51 e4       	ldi	r21, 0x41	; 65
     530:	0e 94 b4 05 	call	0xb68	; 0xb68 <__gesf2>
     534:	18 16       	cp	r1, r24
     536:	0c f0       	brlt	.+2      	; 0x53a <_Z3pidv+0x2ae>
     538:	33 cf       	rjmp	.-410    	; 0x3a0 <_Z3pidv+0x114>
     53a:	64 cf       	rjmp	.-312    	; 0x404 <_Z3pidv+0x178>

0000053c <__vector_4>:
  }
 //return power;  
	motor_set_speed(power);
}

ISR(PCINT1_vect, ISR_NOBLOCK){//encorder
     53c:	78 94       	sei
     53e:	1f 92       	push	r1
     540:	0f 92       	push	r0
     542:	0f b6       	in	r0, 0x3f	; 63
     544:	0f 92       	push	r0
     546:	11 24       	eor	r1, r1
     548:	2f 93       	push	r18
     54a:	3f 93       	push	r19
     54c:	8f 93       	push	r24
     54e:	9f 93       	push	r25
     550:	af 93       	push	r26
     552:	bf 93       	push	r27
	if((PINC & (1 << PINC0)) ^ ((PINC & (1 << PINC1))>> 1))--count;
     554:	26 b1       	in	r18, 0x06	; 6
     556:	86 b1       	in	r24, 0x06	; 6
     558:	30 e0       	ldi	r19, 0x00	; 0
     55a:	21 70       	andi	r18, 0x01	; 1
     55c:	30 70       	andi	r19, 0x00	; 0
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	82 70       	andi	r24, 0x02	; 2
     562:	90 70       	andi	r25, 0x00	; 0
     564:	95 95       	asr	r25
     566:	87 95       	ror	r24
     568:	28 17       	cp	r18, r24
     56a:	39 07       	cpc	r19, r25
     56c:	a1 f0       	breq	.+40     	; 0x596 <__vector_4+0x5a>
     56e:	80 91 10 01 	lds	r24, 0x0110
     572:	90 91 11 01 	lds	r25, 0x0111
     576:	a0 91 12 01 	lds	r26, 0x0112
     57a:	b0 91 13 01 	lds	r27, 0x0113
     57e:	01 97       	sbiw	r24, 0x01	; 1
     580:	a1 09       	sbc	r26, r1
     582:	b1 09       	sbc	r27, r1
     584:	80 93 10 01 	sts	0x0110, r24
     588:	90 93 11 01 	sts	0x0111, r25
     58c:	a0 93 12 01 	sts	0x0112, r26
     590:	b0 93 13 01 	sts	0x0113, r27
     594:	13 c0       	rjmp	.+38     	; 0x5bc <__vector_4+0x80>
	else ++count;	
     596:	80 91 10 01 	lds	r24, 0x0110
     59a:	90 91 11 01 	lds	r25, 0x0111
     59e:	a0 91 12 01 	lds	r26, 0x0112
     5a2:	b0 91 13 01 	lds	r27, 0x0113
     5a6:	01 96       	adiw	r24, 0x01	; 1
     5a8:	a1 1d       	adc	r26, r1
     5aa:	b1 1d       	adc	r27, r1
     5ac:	80 93 10 01 	sts	0x0110, r24
     5b0:	90 93 11 01 	sts	0x0111, r25
     5b4:	a0 93 12 01 	sts	0x0112, r26
     5b8:	b0 93 13 01 	sts	0x0113, r27
}
     5bc:	bf 91       	pop	r27
     5be:	af 91       	pop	r26
     5c0:	9f 91       	pop	r25
     5c2:	8f 91       	pop	r24
     5c4:	3f 91       	pop	r19
     5c6:	2f 91       	pop	r18
     5c8:	0f 90       	pop	r0
     5ca:	0f be       	out	0x3f, r0	; 63
     5cc:	0f 90       	pop	r0
     5ce:	1f 90       	pop	r1
     5d0:	18 95       	reti

000005d2 <__vector_11>:


ISR(TIMER1_COMPA_vect){//PID
     5d2:	1f 92       	push	r1
     5d4:	0f 92       	push	r0
     5d6:	0f b6       	in	r0, 0x3f	; 63
     5d8:	0f 92       	push	r0
     5da:	11 24       	eor	r1, r1
     5dc:	2f 93       	push	r18
     5de:	3f 93       	push	r19
     5e0:	4f 93       	push	r20
     5e2:	5f 93       	push	r21
     5e4:	6f 93       	push	r22
     5e6:	7f 93       	push	r23
     5e8:	8f 93       	push	r24
     5ea:	9f 93       	push	r25
     5ec:	af 93       	push	r26
     5ee:	bf 93       	push	r27
     5f0:	ef 93       	push	r30
     5f2:	ff 93       	push	r31
	if (timer_count > (0.1 / 0.00325)) {
     5f4:	60 91 0a 01 	lds	r22, 0x010A
     5f8:	70 91 0b 01 	lds	r23, 0x010B
     5fc:	80 91 0c 01 	lds	r24, 0x010C
     600:	90 91 0d 01 	lds	r25, 0x010D
     604:	0e 94 04 05 	call	0xa08	; 0xa08 <__floatsisf>
     608:	22 e6       	ldi	r18, 0x62	; 98
     60a:	37 e2       	ldi	r19, 0x27	; 39
     60c:	46 ef       	ldi	r20, 0xF6	; 246
     60e:	51 e4       	ldi	r21, 0x41	; 65
     610:	0e 94 b4 05 	call	0xb68	; 0xb68 <__gesf2>
     614:	18 16       	cp	r1, r24
     616:	54 f4       	brge	.+20     	; 0x62c <__vector_11+0x5a>
		pid();	
     618:	0e 94 46 01 	call	0x28c	; 0x28c <_Z3pidv>
		timer_count = 0;
     61c:	10 92 0a 01 	sts	0x010A, r1
     620:	10 92 0b 01 	sts	0x010B, r1
     624:	10 92 0c 01 	sts	0x010C, r1
     628:	10 92 0d 01 	sts	0x010D, r1
	} 
	timer_count ++;		
     62c:	80 91 0a 01 	lds	r24, 0x010A
     630:	90 91 0b 01 	lds	r25, 0x010B
     634:	a0 91 0c 01 	lds	r26, 0x010C
     638:	b0 91 0d 01 	lds	r27, 0x010D
     63c:	01 96       	adiw	r24, 0x01	; 1
     63e:	a1 1d       	adc	r26, r1
     640:	b1 1d       	adc	r27, r1
     642:	80 93 0a 01 	sts	0x010A, r24
     646:	90 93 0b 01 	sts	0x010B, r25
     64a:	a0 93 0c 01 	sts	0x010C, r26
     64e:	b0 93 0d 01 	sts	0x010D, r27
}
     652:	ff 91       	pop	r31
     654:	ef 91       	pop	r30
     656:	bf 91       	pop	r27
     658:	af 91       	pop	r26
     65a:	9f 91       	pop	r25
     65c:	8f 91       	pop	r24
     65e:	7f 91       	pop	r23
     660:	6f 91       	pop	r22
     662:	5f 91       	pop	r21
     664:	4f 91       	pop	r20
     666:	3f 91       	pop	r19
     668:	2f 91       	pop	r18
     66a:	0f 90       	pop	r0
     66c:	0f be       	out	0x3f, r0	; 63
     66e:	0f 90       	pop	r0
     670:	1f 90       	pop	r1
     672:	18 95       	reti

00000674 <_Z5setupv>:


void setup (){
	
	//ÉsÉìïœâªäÑÇËçûÇ›ãñâ¬ÅiPCINT8~15Åj
	PCICR |= (1<<PCIE1);
     674:	e8 e6       	ldi	r30, 0x68	; 104
     676:	f0 e0       	ldi	r31, 0x00	; 0
     678:	80 81       	ld	r24, Z
     67a:	82 60       	ori	r24, 0x02	; 2
     67c:	80 83       	st	Z, r24
	//ÉsÉìïœâªäÑÇËçûÇ›ãñâ¬ÅiPCINT8Åj
	PCMSK1 |= (1<<PCINT8);
     67e:	ec e6       	ldi	r30, 0x6C	; 108
     680:	f0 e0       	ldi	r31, 0x00	; 0
     682:	80 81       	ld	r24, Z
     684:	81 60       	ori	r24, 0x01	; 1
     686:	80 83       	st	Z, r24
	motor_init();
     688:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_Z10motor_initv>
	motor_set_speed(pw);
     68c:	80 91 0e 01 	lds	r24, 0x010E
     690:	90 91 0f 01 	lds	r25, 0x010F
     694:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <_Z15motor_set_speedi>
	
	DDRC = 0x00;
     698:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x00;
     69a:	18 b8       	out	0x08, r1	; 8
	
	// LED of addresses 0x10~ 0x1F 0~F -> 0~15
	PORTD |= (0b00001111 & I2C_ADDR);
     69c:	5a 9a       	sbi	0x0b, 2	; 11
	
	TCCR1A = 0b00000010;
     69e:	82 e0       	ldi	r24, 0x02	; 2
     6a0:	80 93 80 00 	sts	0x0080, r24
	TCCR1B = 0b00011001;
     6a4:	89 e1       	ldi	r24, 0x19	; 25
     6a6:	80 93 81 00 	sts	0x0081, r24
	TIMSK1 = 0b00100000;
     6aa:	80 e2       	ldi	r24, 0x20	; 32
     6ac:	80 93 6f 00 	sts	0x006F, r24
	ICR1 = 64999; // 3.25ms // 20MHz
     6b0:	87 ee       	ldi	r24, 0xE7	; 231
     6b2:	9d ef       	ldi	r25, 0xFD	; 253
     6b4:	90 93 87 00 	sts	0x0087, r25
     6b8:	80 93 86 00 	sts	0x0086, r24

	sei();
     6bc:	78 94       	sei
	motor_set_speed(12);
     6be:	8c e0       	ldi	r24, 0x0C	; 12
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <_Z15motor_set_speedi>
	TI2C_init_sync(I2C_ADDR,i2c_received_cb, i2c_request_cb);
     6c6:	84 e1       	ldi	r24, 0x14	; 20
     6c8:	61 e4       	ldi	r22, 0x41	; 65
     6ca:	71 e0       	ldi	r23, 0x01	; 1
     6cc:	43 e1       	ldi	r20, 0x13	; 19
     6ce:	51 e0       	ldi	r21, 0x01	; 1
     6d0:	0e 94 ce 03 	call	0x79c	; 0x79c <_Z14TI2C_init_synchPFvPcES1_>
}
     6d4:	08 95       	ret

000006d6 <main>:


int main(void)
{
	setup();
     6d6:	0e 94 3a 03 	call	0x674	; 0x674 <_Z5setupv>
	
    /* Replace with your application code */
    while (1) 
    {
		I2C_main();
     6da:	0e 94 75 00 	call	0xea	; 0xea <_Z8I2C_mainv>
     6de:	fd cf       	rjmp	.-6      	; 0x6da <main+0x4>

000006e0 <_Z10motor_initv>:
};

int motor_init(void)
{
	//setup
	DDRD |= 0b11100000;
     6e0:	8a b1       	in	r24, 0x0a	; 10
     6e2:	80 6e       	ori	r24, 0xE0	; 224
     6e4:	8a b9       	out	0x0a, r24	; 10
	
	TCCR0A = 0b10100011;  //highspeedPWM
     6e6:	83 ea       	ldi	r24, 0xA3	; 163
     6e8:	84 bd       	out	0x24, r24	; 36
	
	//TCCR0B = 0b00000010;  //1/8,Top=OVF
     6ea:	82 e0       	ldi	r24, 0x02	; 2
     6ec:	85 bd       	out	0x25, r24	; 37
	TCCR0B = 0b00000100;  // 1/256
     6ee:	08 95       	ret

000006f0 <_Z7pwm_mapi>:
}

int pwm_map (int duty){
     6f0:	88 0f       	add	r24, r24
     6f2:	99 1f       	adc	r25, r25
	return TMR0INI + (int)(TOP/100*duty); //duty=0~100
     6f4:	08 95       	ret

000006f6 <_Z15motor_set_speedi>:
}
	
	
	
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	ec 01       	movw	r28, r24
int motor_set_speed (int power) {
	
     6fc:	dd 23       	and	r29, r29
     6fe:	24 f4       	brge	.+8      	; 0x708 <_Z15motor_set_speedi+0x12>
     700:	88 27       	eor	r24, r24
     702:	99 27       	eor	r25, r25
     704:	8c 1b       	sub	r24, r28
     706:	9d 0b       	sbc	r25, r29
     708:	0e 94 78 03 	call	0x6f0	; 0x6f0 <_Z7pwm_mapi>
     70c:	87 bd       	out	0x27, r24	; 39
     	OCR0A = pwm_map(abs(power));
     70e:	88 bd       	out	0x28, r24	; 40
	    OCR0B = pwm_map(abs(power));

     710:	dd 23       	and	r29, r29
     712:	14 f4       	brge	.+4      	; 0x718 <_Z15motor_set_speedi+0x22>
		if (power < 0){
			//PORTD = 0b01100000;	  //PHASE=high
     714:	5f 98       	cbi	0x0b, 7	; 11
     716:	04 c0       	rjmp	.+8      	; 0x720 <_Z15motor_set_speedi+0x2a>
			PORTD &= 0b01111111;
		}
		
     718:	1c 16       	cp	r1, r28
     71a:	1d 06       	cpc	r1, r29
     71c:	0c f4       	brge	.+2      	; 0x720 <_Z15motor_set_speedi+0x2a>
		else if(power > 0){
			//PORTD = 0b11100000;   //PHASE=low
     71e:	5f 9a       	sbi	0x0b, 7	; 11
			PORTD |= 0b10000000;
		}
				
     720:	df 91       	pop	r29
     722:	cf 91       	pop	r28
     724:	08 95       	ret

00000726 <_Z14TI2C_requestedv>:

void TI2C_requested() //Å®master
{
	static int i = 0;
	
	if (i == 0){
     726:	80 91 20 05 	lds	r24, 0x0520
     72a:	90 91 21 05 	lds	r25, 0x0521
     72e:	00 97       	sbiw	r24, 0x00	; 0
     730:	39 f4       	brne	.+14     	; 0x740 <_Z14TI2C_requestedv+0x1a>
		// initialize
		TI2C_req_cb(TI2C_buf_send.str_buf);
     732:	e0 91 1c 01 	lds	r30, 0x011C
     736:	f0 91 1d 01 	lds	r31, 0x011D
     73a:	80 e2       	ldi	r24, 0x20	; 32
     73c:	91 e0       	ldi	r25, 0x01	; 1
     73e:	09 95       	icall
	}
	// send data
	if (TI2C_buf_send.uint_buf[i] == '\0') { 
     740:	e0 91 20 05 	lds	r30, 0x0520
     744:	f0 91 21 05 	lds	r31, 0x0521
     748:	e0 5e       	subi	r30, 0xE0	; 224
     74a:	fe 4f       	sbci	r31, 0xFE	; 254
     74c:	80 81       	ld	r24, Z
     74e:	88 23       	and	r24, r24
     750:	41 f4       	brne	.+16     	; 0x762 <_Z14TI2C_requestedv+0x3c>
void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)());
void I2C_main();

inline void __attribute__((always_inline)) I2C_transmitByte(uint8_t data)
{
	TWDR = data;
     752:	84 e2       	ldi	r24, 0x24	; 36
     754:	80 93 bb 00 	sts	0x00BB, r24
		I2C_transmitByte(postfix);
		i = 0;
     758:	10 92 21 05 	sts	0x0521, r1
     75c:	10 92 20 05 	sts	0x0520, r1
     760:	08 95       	ret
     762:	80 93 bb 00 	sts	0x00BB, r24
	} else {
		I2C_transmitByte(TI2C_buf_send.uint_buf[i]);
		i++;
     766:	80 91 20 05 	lds	r24, 0x0520
     76a:	90 91 21 05 	lds	r25, 0x0521
     76e:	01 96       	adiw	r24, 0x01	; 1
     770:	90 93 21 05 	sts	0x0521, r25
     774:	80 93 20 05 	sts	0x0520, r24
     778:	08 95       	ret

0000077a <_Z9TI2C_inithPFvPcES1_>:
void (*TI2C_recv_cb)(char*);
void (*TI2C_req_cb)(char*);


void TI2C_init(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
     77a:	70 93 1f 01 	sts	0x011F, r23
     77e:	60 93 1e 01 	sts	0x011E, r22
	TI2C_req_cb = req;
     782:	50 93 1d 01 	sts	0x011D, r21
     786:	40 93 1c 01 	sts	0x011C, r20
	I2C_init(address);
     78a:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z8I2C_inith>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
     78e:	85 ee       	ldi	r24, 0xE5	; 229
     790:	93 e0       	ldi	r25, 0x03	; 3
     792:	63 e9       	ldi	r22, 0x93	; 147
     794:	73 e0       	ldi	r23, 0x03	; 3
     796:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
     79a:	08 95       	ret

0000079c <_Z14TI2C_init_synchPFvPcES1_>:

void TI2C_init_sync(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
     79c:	70 93 1f 01 	sts	0x011F, r23
     7a0:	60 93 1e 01 	sts	0x011E, r22
	TI2C_req_cb = req;
     7a4:	50 93 1d 01 	sts	0x011D, r21
     7a8:	40 93 1c 01 	sts	0x011C, r20
	I2C_init_sync(address);
     7ac:	0e 94 65 00 	call	0xca	; 0xca <_Z13I2C_init_synch>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
     7b0:	85 ee       	ldi	r24, 0xE5	; 229
     7b2:	93 e0       	ldi	r25, 0x03	; 3
     7b4:	63 e9       	ldi	r22, 0x93	; 147
     7b6:	73 e0       	ldi	r23, 0x03	; 3
     7b8:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
     7bc:	08 95       	ret

000007be <_Z13TI2C_receivedPc>:


void TI2C_received(char *str) //slave <-
{
	TI2C_recv_cb(str);
     7be:	e0 91 1e 01 	lds	r30, 0x011E
     7c2:	f0 91 1f 01 	lds	r31, 0x011F
     7c6:	09 95       	icall
}
     7c8:	08 95       	ret

000007ca <_Z18TI2C_char_receivedh>:

void TI2C_char_received(uint8_t received_data) {
	//DDRC = 0b00000010;
	static int i = 0;
	// ÉfÅ[É^Ç…í«â¡
	TI2C_buf.uint_buf[i] = received_data;
     7ca:	20 91 22 05 	lds	r18, 0x0522
     7ce:	30 91 23 05 	lds	r19, 0x0523
     7d2:	f9 01       	movw	r30, r18
     7d4:	e0 5e       	subi	r30, 0xE0	; 224
     7d6:	fc 4f       	sbci	r31, 0xFC	; 252
     7d8:	80 83       	st	Z, r24
	// postfixÇ™óàÇΩèÍçáÇ…ÉRÅ[ÉãÉoÉbÉNÇåƒÇÒÇ≈èâä˙âª
	if (TI2C_buf.str_buf[i] == postfix) {
     7da:	84 32       	cpi	r24, 0x24	; 36
     7dc:	51 f4       	brne	.+20     	; 0x7f2 <_Z18TI2C_char_receivedh+0x28>
		TI2C_buf.str_buf[i] = '\0';
     7de:	80 e2       	ldi	r24, 0x20	; 32
     7e0:	93 e0       	ldi	r25, 0x03	; 3
     7e2:	10 82       	st	Z, r1
		TI2C_received(TI2C_buf.str_buf);
     7e4:	0e 94 df 03 	call	0x7be	; 0x7be <_Z13TI2C_receivedPc>
		i = 0;
     7e8:	10 92 23 05 	sts	0x0523, r1
     7ec:	10 92 22 05 	sts	0x0522, r1
     7f0:	08 95       	ret
	} else {
		i++;
     7f2:	2f 5f       	subi	r18, 0xFF	; 255
     7f4:	3f 4f       	sbci	r19, 0xFF	; 255
     7f6:	30 93 23 05 	sts	0x0523, r19
     7fa:	20 93 22 05 	sts	0x0522, r18
     7fe:	08 95       	ret

00000800 <__subsf3>:
     800:	50 58       	subi	r21, 0x80	; 128

00000802 <__addsf3>:
     802:	bb 27       	eor	r27, r27
     804:	aa 27       	eor	r26, r26
     806:	0e d0       	rcall	.+28     	; 0x824 <__addsf3x>
     808:	75 c1       	rjmp	.+746    	; 0xaf4 <__fp_round>
     80a:	66 d1       	rcall	.+716    	; 0xad8 <__fp_pscA>
     80c:	30 f0       	brcs	.+12     	; 0x81a <__addsf3+0x18>
     80e:	6b d1       	rcall	.+726    	; 0xae6 <__fp_pscB>
     810:	20 f0       	brcs	.+8      	; 0x81a <__addsf3+0x18>
     812:	31 f4       	brne	.+12     	; 0x820 <__addsf3+0x1e>
     814:	9f 3f       	cpi	r25, 0xFF	; 255
     816:	11 f4       	brne	.+4      	; 0x81c <__addsf3+0x1a>
     818:	1e f4       	brtc	.+6      	; 0x820 <__addsf3+0x1e>
     81a:	5b c1       	rjmp	.+694    	; 0xad2 <__fp_nan>
     81c:	0e f4       	brtc	.+2      	; 0x820 <__addsf3+0x1e>
     81e:	e0 95       	com	r30
     820:	e7 fb       	bst	r30, 7
     822:	51 c1       	rjmp	.+674    	; 0xac6 <__fp_inf>

00000824 <__addsf3x>:
     824:	e9 2f       	mov	r30, r25
     826:	77 d1       	rcall	.+750    	; 0xb16 <__fp_split3>
     828:	80 f3       	brcs	.-32     	; 0x80a <__addsf3+0x8>
     82a:	ba 17       	cp	r27, r26
     82c:	62 07       	cpc	r22, r18
     82e:	73 07       	cpc	r23, r19
     830:	84 07       	cpc	r24, r20
     832:	95 07       	cpc	r25, r21
     834:	18 f0       	brcs	.+6      	; 0x83c <__addsf3x+0x18>
     836:	71 f4       	brne	.+28     	; 0x854 <__addsf3x+0x30>
     838:	9e f5       	brtc	.+102    	; 0x8a0 <__addsf3x+0x7c>
     83a:	8f c1       	rjmp	.+798    	; 0xb5a <__fp_zero>
     83c:	0e f4       	brtc	.+2      	; 0x840 <__addsf3x+0x1c>
     83e:	e0 95       	com	r30
     840:	0b 2e       	mov	r0, r27
     842:	ba 2f       	mov	r27, r26
     844:	a0 2d       	mov	r26, r0
     846:	0b 01       	movw	r0, r22
     848:	b9 01       	movw	r22, r18
     84a:	90 01       	movw	r18, r0
     84c:	0c 01       	movw	r0, r24
     84e:	ca 01       	movw	r24, r20
     850:	a0 01       	movw	r20, r0
     852:	11 24       	eor	r1, r1
     854:	ff 27       	eor	r31, r31
     856:	59 1b       	sub	r21, r25
     858:	99 f0       	breq	.+38     	; 0x880 <__addsf3x+0x5c>
     85a:	59 3f       	cpi	r21, 0xF9	; 249
     85c:	50 f4       	brcc	.+20     	; 0x872 <__addsf3x+0x4e>
     85e:	50 3e       	cpi	r21, 0xE0	; 224
     860:	68 f1       	brcs	.+90     	; 0x8bc <__addsf3x+0x98>
     862:	1a 16       	cp	r1, r26
     864:	f0 40       	sbci	r31, 0x00	; 0
     866:	a2 2f       	mov	r26, r18
     868:	23 2f       	mov	r18, r19
     86a:	34 2f       	mov	r19, r20
     86c:	44 27       	eor	r20, r20
     86e:	58 5f       	subi	r21, 0xF8	; 248
     870:	f3 cf       	rjmp	.-26     	; 0x858 <__addsf3x+0x34>
     872:	46 95       	lsr	r20
     874:	37 95       	ror	r19
     876:	27 95       	ror	r18
     878:	a7 95       	ror	r26
     87a:	f0 40       	sbci	r31, 0x00	; 0
     87c:	53 95       	inc	r21
     87e:	c9 f7       	brne	.-14     	; 0x872 <__addsf3x+0x4e>
     880:	7e f4       	brtc	.+30     	; 0x8a0 <__addsf3x+0x7c>
     882:	1f 16       	cp	r1, r31
     884:	ba 0b       	sbc	r27, r26
     886:	62 0b       	sbc	r22, r18
     888:	73 0b       	sbc	r23, r19
     88a:	84 0b       	sbc	r24, r20
     88c:	ba f0       	brmi	.+46     	; 0x8bc <__addsf3x+0x98>
     88e:	91 50       	subi	r25, 0x01	; 1
     890:	a1 f0       	breq	.+40     	; 0x8ba <__addsf3x+0x96>
     892:	ff 0f       	add	r31, r31
     894:	bb 1f       	adc	r27, r27
     896:	66 1f       	adc	r22, r22
     898:	77 1f       	adc	r23, r23
     89a:	88 1f       	adc	r24, r24
     89c:	c2 f7       	brpl	.-16     	; 0x88e <__addsf3x+0x6a>
     89e:	0e c0       	rjmp	.+28     	; 0x8bc <__addsf3x+0x98>
     8a0:	ba 0f       	add	r27, r26
     8a2:	62 1f       	adc	r22, r18
     8a4:	73 1f       	adc	r23, r19
     8a6:	84 1f       	adc	r24, r20
     8a8:	48 f4       	brcc	.+18     	; 0x8bc <__addsf3x+0x98>
     8aa:	87 95       	ror	r24
     8ac:	77 95       	ror	r23
     8ae:	67 95       	ror	r22
     8b0:	b7 95       	ror	r27
     8b2:	f7 95       	ror	r31
     8b4:	9e 3f       	cpi	r25, 0xFE	; 254
     8b6:	08 f0       	brcs	.+2      	; 0x8ba <__addsf3x+0x96>
     8b8:	b3 cf       	rjmp	.-154    	; 0x820 <__addsf3+0x1e>
     8ba:	93 95       	inc	r25
     8bc:	88 0f       	add	r24, r24
     8be:	08 f0       	brcs	.+2      	; 0x8c2 <__addsf3x+0x9e>
     8c0:	99 27       	eor	r25, r25
     8c2:	ee 0f       	add	r30, r30
     8c4:	97 95       	ror	r25
     8c6:	87 95       	ror	r24
     8c8:	08 95       	ret

000008ca <__cmpsf2>:
     8ca:	d9 d0       	rcall	.+434    	; 0xa7e <__fp_cmp>
     8cc:	08 f4       	brcc	.+2      	; 0x8d0 <__cmpsf2+0x6>
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	08 95       	ret

000008d2 <__divsf3>:
     8d2:	0c d0       	rcall	.+24     	; 0x8ec <__divsf3x>
     8d4:	0f c1       	rjmp	.+542    	; 0xaf4 <__fp_round>
     8d6:	07 d1       	rcall	.+526    	; 0xae6 <__fp_pscB>
     8d8:	40 f0       	brcs	.+16     	; 0x8ea <__divsf3+0x18>
     8da:	fe d0       	rcall	.+508    	; 0xad8 <__fp_pscA>
     8dc:	30 f0       	brcs	.+12     	; 0x8ea <__divsf3+0x18>
     8de:	21 f4       	brne	.+8      	; 0x8e8 <__divsf3+0x16>
     8e0:	5f 3f       	cpi	r21, 0xFF	; 255
     8e2:	19 f0       	breq	.+6      	; 0x8ea <__divsf3+0x18>
     8e4:	f0 c0       	rjmp	.+480    	; 0xac6 <__fp_inf>
     8e6:	51 11       	cpse	r21, r1
     8e8:	39 c1       	rjmp	.+626    	; 0xb5c <__fp_szero>
     8ea:	f3 c0       	rjmp	.+486    	; 0xad2 <__fp_nan>

000008ec <__divsf3x>:
     8ec:	14 d1       	rcall	.+552    	; 0xb16 <__fp_split3>
     8ee:	98 f3       	brcs	.-26     	; 0x8d6 <__divsf3+0x4>

000008f0 <__divsf3_pse>:
     8f0:	99 23       	and	r25, r25
     8f2:	c9 f3       	breq	.-14     	; 0x8e6 <__divsf3+0x14>
     8f4:	55 23       	and	r21, r21
     8f6:	b1 f3       	breq	.-20     	; 0x8e4 <__divsf3+0x12>
     8f8:	95 1b       	sub	r25, r21
     8fa:	55 0b       	sbc	r21, r21
     8fc:	bb 27       	eor	r27, r27
     8fe:	aa 27       	eor	r26, r26
     900:	62 17       	cp	r22, r18
     902:	73 07       	cpc	r23, r19
     904:	84 07       	cpc	r24, r20
     906:	38 f0       	brcs	.+14     	; 0x916 <__stack+0x17>
     908:	9f 5f       	subi	r25, 0xFF	; 255
     90a:	5f 4f       	sbci	r21, 0xFF	; 255
     90c:	22 0f       	add	r18, r18
     90e:	33 1f       	adc	r19, r19
     910:	44 1f       	adc	r20, r20
     912:	aa 1f       	adc	r26, r26
     914:	a9 f3       	breq	.-22     	; 0x900 <__stack+0x1>
     916:	33 d0       	rcall	.+102    	; 0x97e <__stack+0x7f>
     918:	0e 2e       	mov	r0, r30
     91a:	3a f0       	brmi	.+14     	; 0x92a <__stack+0x2b>
     91c:	e0 e8       	ldi	r30, 0x80	; 128
     91e:	30 d0       	rcall	.+96     	; 0x980 <__stack+0x81>
     920:	91 50       	subi	r25, 0x01	; 1
     922:	50 40       	sbci	r21, 0x00	; 0
     924:	e6 95       	lsr	r30
     926:	00 1c       	adc	r0, r0
     928:	ca f7       	brpl	.-14     	; 0x91c <__stack+0x1d>
     92a:	29 d0       	rcall	.+82     	; 0x97e <__stack+0x7f>
     92c:	fe 2f       	mov	r31, r30
     92e:	27 d0       	rcall	.+78     	; 0x97e <__stack+0x7f>
     930:	66 0f       	add	r22, r22
     932:	77 1f       	adc	r23, r23
     934:	88 1f       	adc	r24, r24
     936:	bb 1f       	adc	r27, r27
     938:	26 17       	cp	r18, r22
     93a:	37 07       	cpc	r19, r23
     93c:	48 07       	cpc	r20, r24
     93e:	ab 07       	cpc	r26, r27
     940:	b0 e8       	ldi	r27, 0x80	; 128
     942:	09 f0       	breq	.+2      	; 0x946 <__stack+0x47>
     944:	bb 0b       	sbc	r27, r27
     946:	80 2d       	mov	r24, r0
     948:	bf 01       	movw	r22, r30
     94a:	ff 27       	eor	r31, r31
     94c:	93 58       	subi	r25, 0x83	; 131
     94e:	5f 4f       	sbci	r21, 0xFF	; 255
     950:	2a f0       	brmi	.+10     	; 0x95c <__stack+0x5d>
     952:	9e 3f       	cpi	r25, 0xFE	; 254
     954:	51 05       	cpc	r21, r1
     956:	68 f0       	brcs	.+26     	; 0x972 <__stack+0x73>
     958:	b6 c0       	rjmp	.+364    	; 0xac6 <__fp_inf>
     95a:	00 c1       	rjmp	.+512    	; 0xb5c <__fp_szero>
     95c:	5f 3f       	cpi	r21, 0xFF	; 255
     95e:	ec f3       	brlt	.-6      	; 0x95a <__stack+0x5b>
     960:	98 3e       	cpi	r25, 0xE8	; 232
     962:	dc f3       	brlt	.-10     	; 0x95a <__stack+0x5b>
     964:	86 95       	lsr	r24
     966:	77 95       	ror	r23
     968:	67 95       	ror	r22
     96a:	b7 95       	ror	r27
     96c:	f7 95       	ror	r31
     96e:	9f 5f       	subi	r25, 0xFF	; 255
     970:	c9 f7       	brne	.-14     	; 0x964 <__stack+0x65>
     972:	88 0f       	add	r24, r24
     974:	91 1d       	adc	r25, r1
     976:	96 95       	lsr	r25
     978:	87 95       	ror	r24
     97a:	97 f9       	bld	r25, 7
     97c:	08 95       	ret
     97e:	e1 e0       	ldi	r30, 0x01	; 1
     980:	66 0f       	add	r22, r22
     982:	77 1f       	adc	r23, r23
     984:	88 1f       	adc	r24, r24
     986:	bb 1f       	adc	r27, r27
     988:	62 17       	cp	r22, r18
     98a:	73 07       	cpc	r23, r19
     98c:	84 07       	cpc	r24, r20
     98e:	ba 07       	cpc	r27, r26
     990:	20 f0       	brcs	.+8      	; 0x99a <__stack+0x9b>
     992:	62 1b       	sub	r22, r18
     994:	73 0b       	sbc	r23, r19
     996:	84 0b       	sbc	r24, r20
     998:	ba 0b       	sbc	r27, r26
     99a:	ee 1f       	adc	r30, r30
     99c:	88 f7       	brcc	.-30     	; 0x980 <__stack+0x81>
     99e:	e0 95       	com	r30
     9a0:	08 95       	ret

000009a2 <__fixsfsi>:
     9a2:	04 d0       	rcall	.+8      	; 0x9ac <__fixunssfsi>
     9a4:	68 94       	set
     9a6:	b1 11       	cpse	r27, r1
     9a8:	d9 c0       	rjmp	.+434    	; 0xb5c <__fp_szero>
     9aa:	08 95       	ret

000009ac <__fixunssfsi>:
     9ac:	bc d0       	rcall	.+376    	; 0xb26 <__fp_splitA>
     9ae:	88 f0       	brcs	.+34     	; 0x9d2 <__fixunssfsi+0x26>
     9b0:	9f 57       	subi	r25, 0x7F	; 127
     9b2:	90 f0       	brcs	.+36     	; 0x9d8 <__fixunssfsi+0x2c>
     9b4:	b9 2f       	mov	r27, r25
     9b6:	99 27       	eor	r25, r25
     9b8:	b7 51       	subi	r27, 0x17	; 23
     9ba:	a0 f0       	brcs	.+40     	; 0x9e4 <__fixunssfsi+0x38>
     9bc:	d1 f0       	breq	.+52     	; 0x9f2 <__fixunssfsi+0x46>
     9be:	66 0f       	add	r22, r22
     9c0:	77 1f       	adc	r23, r23
     9c2:	88 1f       	adc	r24, r24
     9c4:	99 1f       	adc	r25, r25
     9c6:	1a f0       	brmi	.+6      	; 0x9ce <__fixunssfsi+0x22>
     9c8:	ba 95       	dec	r27
     9ca:	c9 f7       	brne	.-14     	; 0x9be <__fixunssfsi+0x12>
     9cc:	12 c0       	rjmp	.+36     	; 0x9f2 <__fixunssfsi+0x46>
     9ce:	b1 30       	cpi	r27, 0x01	; 1
     9d0:	81 f0       	breq	.+32     	; 0x9f2 <__fixunssfsi+0x46>
     9d2:	c3 d0       	rcall	.+390    	; 0xb5a <__fp_zero>
     9d4:	b1 e0       	ldi	r27, 0x01	; 1
     9d6:	08 95       	ret
     9d8:	c0 c0       	rjmp	.+384    	; 0xb5a <__fp_zero>
     9da:	67 2f       	mov	r22, r23
     9dc:	78 2f       	mov	r23, r24
     9de:	88 27       	eor	r24, r24
     9e0:	b8 5f       	subi	r27, 0xF8	; 248
     9e2:	39 f0       	breq	.+14     	; 0x9f2 <__fixunssfsi+0x46>
     9e4:	b9 3f       	cpi	r27, 0xF9	; 249
     9e6:	cc f3       	brlt	.-14     	; 0x9da <__fixunssfsi+0x2e>
     9e8:	86 95       	lsr	r24
     9ea:	77 95       	ror	r23
     9ec:	67 95       	ror	r22
     9ee:	b3 95       	inc	r27
     9f0:	d9 f7       	brne	.-10     	; 0x9e8 <__fixunssfsi+0x3c>
     9f2:	3e f4       	brtc	.+14     	; 0xa02 <__fixunssfsi+0x56>
     9f4:	90 95       	com	r25
     9f6:	80 95       	com	r24
     9f8:	70 95       	com	r23
     9fa:	61 95       	neg	r22
     9fc:	7f 4f       	sbci	r23, 0xFF	; 255
     9fe:	8f 4f       	sbci	r24, 0xFF	; 255
     a00:	9f 4f       	sbci	r25, 0xFF	; 255
     a02:	08 95       	ret

00000a04 <__floatunsisf>:
     a04:	e8 94       	clt
     a06:	09 c0       	rjmp	.+18     	; 0xa1a <__floatsisf+0x12>

00000a08 <__floatsisf>:
     a08:	97 fb       	bst	r25, 7
     a0a:	3e f4       	brtc	.+14     	; 0xa1a <__floatsisf+0x12>
     a0c:	90 95       	com	r25
     a0e:	80 95       	com	r24
     a10:	70 95       	com	r23
     a12:	61 95       	neg	r22
     a14:	7f 4f       	sbci	r23, 0xFF	; 255
     a16:	8f 4f       	sbci	r24, 0xFF	; 255
     a18:	9f 4f       	sbci	r25, 0xFF	; 255
     a1a:	99 23       	and	r25, r25
     a1c:	a9 f0       	breq	.+42     	; 0xa48 <__floatsisf+0x40>
     a1e:	f9 2f       	mov	r31, r25
     a20:	96 e9       	ldi	r25, 0x96	; 150
     a22:	bb 27       	eor	r27, r27
     a24:	93 95       	inc	r25
     a26:	f6 95       	lsr	r31
     a28:	87 95       	ror	r24
     a2a:	77 95       	ror	r23
     a2c:	67 95       	ror	r22
     a2e:	b7 95       	ror	r27
     a30:	f1 11       	cpse	r31, r1
     a32:	f8 cf       	rjmp	.-16     	; 0xa24 <__floatsisf+0x1c>
     a34:	fa f4       	brpl	.+62     	; 0xa74 <__floatsisf+0x6c>
     a36:	bb 0f       	add	r27, r27
     a38:	11 f4       	brne	.+4      	; 0xa3e <__floatsisf+0x36>
     a3a:	60 ff       	sbrs	r22, 0
     a3c:	1b c0       	rjmp	.+54     	; 0xa74 <__floatsisf+0x6c>
     a3e:	6f 5f       	subi	r22, 0xFF	; 255
     a40:	7f 4f       	sbci	r23, 0xFF	; 255
     a42:	8f 4f       	sbci	r24, 0xFF	; 255
     a44:	9f 4f       	sbci	r25, 0xFF	; 255
     a46:	16 c0       	rjmp	.+44     	; 0xa74 <__floatsisf+0x6c>
     a48:	88 23       	and	r24, r24
     a4a:	11 f0       	breq	.+4      	; 0xa50 <__floatsisf+0x48>
     a4c:	96 e9       	ldi	r25, 0x96	; 150
     a4e:	11 c0       	rjmp	.+34     	; 0xa72 <__floatsisf+0x6a>
     a50:	77 23       	and	r23, r23
     a52:	21 f0       	breq	.+8      	; 0xa5c <__floatsisf+0x54>
     a54:	9e e8       	ldi	r25, 0x8E	; 142
     a56:	87 2f       	mov	r24, r23
     a58:	76 2f       	mov	r23, r22
     a5a:	05 c0       	rjmp	.+10     	; 0xa66 <__floatsisf+0x5e>
     a5c:	66 23       	and	r22, r22
     a5e:	71 f0       	breq	.+28     	; 0xa7c <__floatsisf+0x74>
     a60:	96 e8       	ldi	r25, 0x86	; 134
     a62:	86 2f       	mov	r24, r22
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	60 e0       	ldi	r22, 0x00	; 0
     a68:	2a f0       	brmi	.+10     	; 0xa74 <__floatsisf+0x6c>
     a6a:	9a 95       	dec	r25
     a6c:	66 0f       	add	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	88 1f       	adc	r24, r24
     a72:	da f7       	brpl	.-10     	; 0xa6a <__floatsisf+0x62>
     a74:	88 0f       	add	r24, r24
     a76:	96 95       	lsr	r25
     a78:	87 95       	ror	r24
     a7a:	97 f9       	bld	r25, 7
     a7c:	08 95       	ret

00000a7e <__fp_cmp>:
     a7e:	99 0f       	add	r25, r25
     a80:	00 08       	sbc	r0, r0
     a82:	55 0f       	add	r21, r21
     a84:	aa 0b       	sbc	r26, r26
     a86:	e0 e8       	ldi	r30, 0x80	; 128
     a88:	fe ef       	ldi	r31, 0xFE	; 254
     a8a:	16 16       	cp	r1, r22
     a8c:	17 06       	cpc	r1, r23
     a8e:	e8 07       	cpc	r30, r24
     a90:	f9 07       	cpc	r31, r25
     a92:	c0 f0       	brcs	.+48     	; 0xac4 <__fp_cmp+0x46>
     a94:	12 16       	cp	r1, r18
     a96:	13 06       	cpc	r1, r19
     a98:	e4 07       	cpc	r30, r20
     a9a:	f5 07       	cpc	r31, r21
     a9c:	98 f0       	brcs	.+38     	; 0xac4 <__fp_cmp+0x46>
     a9e:	62 1b       	sub	r22, r18
     aa0:	73 0b       	sbc	r23, r19
     aa2:	84 0b       	sbc	r24, r20
     aa4:	95 0b       	sbc	r25, r21
     aa6:	39 f4       	brne	.+14     	; 0xab6 <__fp_cmp+0x38>
     aa8:	0a 26       	eor	r0, r26
     aaa:	61 f0       	breq	.+24     	; 0xac4 <__fp_cmp+0x46>
     aac:	23 2b       	or	r18, r19
     aae:	24 2b       	or	r18, r20
     ab0:	25 2b       	or	r18, r21
     ab2:	21 f4       	brne	.+8      	; 0xabc <__fp_cmp+0x3e>
     ab4:	08 95       	ret
     ab6:	0a 26       	eor	r0, r26
     ab8:	09 f4       	brne	.+2      	; 0xabc <__fp_cmp+0x3e>
     aba:	a1 40       	sbci	r26, 0x01	; 1
     abc:	a6 95       	lsr	r26
     abe:	8f ef       	ldi	r24, 0xFF	; 255
     ac0:	81 1d       	adc	r24, r1
     ac2:	81 1d       	adc	r24, r1
     ac4:	08 95       	ret

00000ac6 <__fp_inf>:
     ac6:	97 f9       	bld	r25, 7
     ac8:	9f 67       	ori	r25, 0x7F	; 127
     aca:	80 e8       	ldi	r24, 0x80	; 128
     acc:	70 e0       	ldi	r23, 0x00	; 0
     ace:	60 e0       	ldi	r22, 0x00	; 0
     ad0:	08 95       	ret

00000ad2 <__fp_nan>:
     ad2:	9f ef       	ldi	r25, 0xFF	; 255
     ad4:	80 ec       	ldi	r24, 0xC0	; 192
     ad6:	08 95       	ret

00000ad8 <__fp_pscA>:
     ad8:	00 24       	eor	r0, r0
     ada:	0a 94       	dec	r0
     adc:	16 16       	cp	r1, r22
     ade:	17 06       	cpc	r1, r23
     ae0:	18 06       	cpc	r1, r24
     ae2:	09 06       	cpc	r0, r25
     ae4:	08 95       	ret

00000ae6 <__fp_pscB>:
     ae6:	00 24       	eor	r0, r0
     ae8:	0a 94       	dec	r0
     aea:	12 16       	cp	r1, r18
     aec:	13 06       	cpc	r1, r19
     aee:	14 06       	cpc	r1, r20
     af0:	05 06       	cpc	r0, r21
     af2:	08 95       	ret

00000af4 <__fp_round>:
     af4:	09 2e       	mov	r0, r25
     af6:	03 94       	inc	r0
     af8:	00 0c       	add	r0, r0
     afa:	11 f4       	brne	.+4      	; 0xb00 <__fp_round+0xc>
     afc:	88 23       	and	r24, r24
     afe:	52 f0       	brmi	.+20     	; 0xb14 <__fp_round+0x20>
     b00:	bb 0f       	add	r27, r27
     b02:	40 f4       	brcc	.+16     	; 0xb14 <__fp_round+0x20>
     b04:	bf 2b       	or	r27, r31
     b06:	11 f4       	brne	.+4      	; 0xb0c <__fp_round+0x18>
     b08:	60 ff       	sbrs	r22, 0
     b0a:	04 c0       	rjmp	.+8      	; 0xb14 <__fp_round+0x20>
     b0c:	6f 5f       	subi	r22, 0xFF	; 255
     b0e:	7f 4f       	sbci	r23, 0xFF	; 255
     b10:	8f 4f       	sbci	r24, 0xFF	; 255
     b12:	9f 4f       	sbci	r25, 0xFF	; 255
     b14:	08 95       	ret

00000b16 <__fp_split3>:
     b16:	57 fd       	sbrc	r21, 7
     b18:	90 58       	subi	r25, 0x80	; 128
     b1a:	44 0f       	add	r20, r20
     b1c:	55 1f       	adc	r21, r21
     b1e:	59 f0       	breq	.+22     	; 0xb36 <__fp_splitA+0x10>
     b20:	5f 3f       	cpi	r21, 0xFF	; 255
     b22:	71 f0       	breq	.+28     	; 0xb40 <__fp_splitA+0x1a>
     b24:	47 95       	ror	r20

00000b26 <__fp_splitA>:
     b26:	88 0f       	add	r24, r24
     b28:	97 fb       	bst	r25, 7
     b2a:	99 1f       	adc	r25, r25
     b2c:	61 f0       	breq	.+24     	; 0xb46 <__fp_splitA+0x20>
     b2e:	9f 3f       	cpi	r25, 0xFF	; 255
     b30:	79 f0       	breq	.+30     	; 0xb50 <__fp_splitA+0x2a>
     b32:	87 95       	ror	r24
     b34:	08 95       	ret
     b36:	12 16       	cp	r1, r18
     b38:	13 06       	cpc	r1, r19
     b3a:	14 06       	cpc	r1, r20
     b3c:	55 1f       	adc	r21, r21
     b3e:	f2 cf       	rjmp	.-28     	; 0xb24 <__fp_split3+0xe>
     b40:	46 95       	lsr	r20
     b42:	f1 df       	rcall	.-30     	; 0xb26 <__fp_splitA>
     b44:	08 c0       	rjmp	.+16     	; 0xb56 <__fp_splitA+0x30>
     b46:	16 16       	cp	r1, r22
     b48:	17 06       	cpc	r1, r23
     b4a:	18 06       	cpc	r1, r24
     b4c:	99 1f       	adc	r25, r25
     b4e:	f1 cf       	rjmp	.-30     	; 0xb32 <__fp_splitA+0xc>
     b50:	86 95       	lsr	r24
     b52:	71 05       	cpc	r23, r1
     b54:	61 05       	cpc	r22, r1
     b56:	08 94       	sec
     b58:	08 95       	ret

00000b5a <__fp_zero>:
     b5a:	e8 94       	clt

00000b5c <__fp_szero>:
     b5c:	bb 27       	eor	r27, r27
     b5e:	66 27       	eor	r22, r22
     b60:	77 27       	eor	r23, r23
     b62:	cb 01       	movw	r24, r22
     b64:	97 f9       	bld	r25, 7
     b66:	08 95       	ret

00000b68 <__gesf2>:
     b68:	8a df       	rcall	.-236    	; 0xa7e <__fp_cmp>
     b6a:	08 f4       	brcc	.+2      	; 0xb6e <__gesf2+0x6>
     b6c:	8f ef       	ldi	r24, 0xFF	; 255
     b6e:	08 95       	ret

00000b70 <__mulsf3>:
     b70:	0b d0       	rcall	.+22     	; 0xb88 <__mulsf3x>
     b72:	c0 cf       	rjmp	.-128    	; 0xaf4 <__fp_round>
     b74:	b1 df       	rcall	.-158    	; 0xad8 <__fp_pscA>
     b76:	28 f0       	brcs	.+10     	; 0xb82 <__mulsf3+0x12>
     b78:	b6 df       	rcall	.-148    	; 0xae6 <__fp_pscB>
     b7a:	18 f0       	brcs	.+6      	; 0xb82 <__mulsf3+0x12>
     b7c:	95 23       	and	r25, r21
     b7e:	09 f0       	breq	.+2      	; 0xb82 <__mulsf3+0x12>
     b80:	a2 cf       	rjmp	.-188    	; 0xac6 <__fp_inf>
     b82:	a7 cf       	rjmp	.-178    	; 0xad2 <__fp_nan>
     b84:	11 24       	eor	r1, r1
     b86:	ea cf       	rjmp	.-44     	; 0xb5c <__fp_szero>

00000b88 <__mulsf3x>:
     b88:	c6 df       	rcall	.-116    	; 0xb16 <__fp_split3>
     b8a:	a0 f3       	brcs	.-24     	; 0xb74 <__mulsf3+0x4>

00000b8c <__mulsf3_pse>:
     b8c:	95 9f       	mul	r25, r21
     b8e:	d1 f3       	breq	.-12     	; 0xb84 <__mulsf3+0x14>
     b90:	95 0f       	add	r25, r21
     b92:	50 e0       	ldi	r21, 0x00	; 0
     b94:	55 1f       	adc	r21, r21
     b96:	62 9f       	mul	r22, r18
     b98:	f0 01       	movw	r30, r0
     b9a:	72 9f       	mul	r23, r18
     b9c:	bb 27       	eor	r27, r27
     b9e:	f0 0d       	add	r31, r0
     ba0:	b1 1d       	adc	r27, r1
     ba2:	63 9f       	mul	r22, r19
     ba4:	aa 27       	eor	r26, r26
     ba6:	f0 0d       	add	r31, r0
     ba8:	b1 1d       	adc	r27, r1
     baa:	aa 1f       	adc	r26, r26
     bac:	64 9f       	mul	r22, r20
     bae:	66 27       	eor	r22, r22
     bb0:	b0 0d       	add	r27, r0
     bb2:	a1 1d       	adc	r26, r1
     bb4:	66 1f       	adc	r22, r22
     bb6:	82 9f       	mul	r24, r18
     bb8:	22 27       	eor	r18, r18
     bba:	b0 0d       	add	r27, r0
     bbc:	a1 1d       	adc	r26, r1
     bbe:	62 1f       	adc	r22, r18
     bc0:	73 9f       	mul	r23, r19
     bc2:	b0 0d       	add	r27, r0
     bc4:	a1 1d       	adc	r26, r1
     bc6:	62 1f       	adc	r22, r18
     bc8:	83 9f       	mul	r24, r19
     bca:	a0 0d       	add	r26, r0
     bcc:	61 1d       	adc	r22, r1
     bce:	22 1f       	adc	r18, r18
     bd0:	74 9f       	mul	r23, r20
     bd2:	33 27       	eor	r19, r19
     bd4:	a0 0d       	add	r26, r0
     bd6:	61 1d       	adc	r22, r1
     bd8:	23 1f       	adc	r18, r19
     bda:	84 9f       	mul	r24, r20
     bdc:	60 0d       	add	r22, r0
     bde:	21 1d       	adc	r18, r1
     be0:	82 2f       	mov	r24, r18
     be2:	76 2f       	mov	r23, r22
     be4:	6a 2f       	mov	r22, r26
     be6:	11 24       	eor	r1, r1
     be8:	9f 57       	subi	r25, 0x7F	; 127
     bea:	50 40       	sbci	r21, 0x00	; 0
     bec:	8a f0       	brmi	.+34     	; 0xc10 <__mulsf3_pse+0x84>
     bee:	e1 f0       	breq	.+56     	; 0xc28 <__mulsf3_pse+0x9c>
     bf0:	88 23       	and	r24, r24
     bf2:	4a f0       	brmi	.+18     	; 0xc06 <__mulsf3_pse+0x7a>
     bf4:	ee 0f       	add	r30, r30
     bf6:	ff 1f       	adc	r31, r31
     bf8:	bb 1f       	adc	r27, r27
     bfa:	66 1f       	adc	r22, r22
     bfc:	77 1f       	adc	r23, r23
     bfe:	88 1f       	adc	r24, r24
     c00:	91 50       	subi	r25, 0x01	; 1
     c02:	50 40       	sbci	r21, 0x00	; 0
     c04:	a9 f7       	brne	.-22     	; 0xbf0 <__mulsf3_pse+0x64>
     c06:	9e 3f       	cpi	r25, 0xFE	; 254
     c08:	51 05       	cpc	r21, r1
     c0a:	70 f0       	brcs	.+28     	; 0xc28 <__mulsf3_pse+0x9c>
     c0c:	5c cf       	rjmp	.-328    	; 0xac6 <__fp_inf>
     c0e:	a6 cf       	rjmp	.-180    	; 0xb5c <__fp_szero>
     c10:	5f 3f       	cpi	r21, 0xFF	; 255
     c12:	ec f3       	brlt	.-6      	; 0xc0e <__mulsf3_pse+0x82>
     c14:	98 3e       	cpi	r25, 0xE8	; 232
     c16:	dc f3       	brlt	.-10     	; 0xc0e <__mulsf3_pse+0x82>
     c18:	86 95       	lsr	r24
     c1a:	77 95       	ror	r23
     c1c:	67 95       	ror	r22
     c1e:	b7 95       	ror	r27
     c20:	f7 95       	ror	r31
     c22:	e7 95       	ror	r30
     c24:	9f 5f       	subi	r25, 0xFF	; 255
     c26:	c1 f7       	brne	.-16     	; 0xc18 <__mulsf3_pse+0x8c>
     c28:	fe 2b       	or	r31, r30
     c2a:	88 0f       	add	r24, r24
     c2c:	91 1d       	adc	r25, r1
     c2e:	96 95       	lsr	r25
     c30:	87 95       	ror	r24
     c32:	97 f9       	bld	r25, 7
     c34:	08 95       	ret

00000c36 <atoi>:
     c36:	fc 01       	movw	r30, r24
     c38:	88 27       	eor	r24, r24
     c3a:	99 27       	eor	r25, r25
     c3c:	e8 94       	clt
     c3e:	21 91       	ld	r18, Z+
     c40:	20 32       	cpi	r18, 0x20	; 32
     c42:	e9 f3       	breq	.-6      	; 0xc3e <atoi+0x8>
     c44:	29 30       	cpi	r18, 0x09	; 9
     c46:	10 f0       	brcs	.+4      	; 0xc4c <atoi+0x16>
     c48:	2e 30       	cpi	r18, 0x0E	; 14
     c4a:	c8 f3       	brcs	.-14     	; 0xc3e <atoi+0x8>
     c4c:	2b 32       	cpi	r18, 0x2B	; 43
     c4e:	41 f0       	breq	.+16     	; 0xc60 <atoi+0x2a>
     c50:	2d 32       	cpi	r18, 0x2D	; 45
     c52:	39 f4       	brne	.+14     	; 0xc62 <atoi+0x2c>
     c54:	68 94       	set
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <atoi+0x2a>
     c58:	0e 94 39 06 	call	0xc72	; 0xc72 <__mulhi_const_10>
     c5c:	82 0f       	add	r24, r18
     c5e:	91 1d       	adc	r25, r1
     c60:	21 91       	ld	r18, Z+
     c62:	20 53       	subi	r18, 0x30	; 48
     c64:	2a 30       	cpi	r18, 0x0A	; 10
     c66:	c0 f3       	brcs	.-16     	; 0xc58 <atoi+0x22>
     c68:	1e f4       	brtc	.+6      	; 0xc70 <atoi+0x3a>
     c6a:	90 95       	com	r25
     c6c:	81 95       	neg	r24
     c6e:	9f 4f       	sbci	r25, 0xFF	; 255
     c70:	08 95       	ret

00000c72 <__mulhi_const_10>:
     c72:	7a e0       	ldi	r23, 0x0A	; 10
     c74:	97 9f       	mul	r25, r23
     c76:	90 2d       	mov	r25, r0
     c78:	87 9f       	mul	r24, r23
     c7a:	80 2d       	mov	r24, r0
     c7c:	91 0d       	add	r25, r1
     c7e:	11 24       	eor	r1, r1
     c80:	08 95       	ret

00000c82 <sprintf>:
     c82:	ae e0       	ldi	r26, 0x0E	; 14
     c84:	b0 e0       	ldi	r27, 0x00	; 0
     c86:	e7 e4       	ldi	r30, 0x47	; 71
     c88:	f6 e0       	ldi	r31, 0x06	; 6
     c8a:	0c 94 ef 08 	jmp	0x11de	; 0x11de <__prologue_saves__+0x1c>
     c8e:	0d 89       	ldd	r16, Y+21	; 0x15
     c90:	1e 89       	ldd	r17, Y+22	; 0x16
     c92:	86 e0       	ldi	r24, 0x06	; 6
     c94:	8c 83       	std	Y+4, r24	; 0x04
     c96:	1a 83       	std	Y+2, r17	; 0x02
     c98:	09 83       	std	Y+1, r16	; 0x01
     c9a:	8f ef       	ldi	r24, 0xFF	; 255
     c9c:	9f e7       	ldi	r25, 0x7F	; 127
     c9e:	9e 83       	std	Y+6, r25	; 0x06
     ca0:	8d 83       	std	Y+5, r24	; 0x05
     ca2:	ae 01       	movw	r20, r28
     ca4:	47 5e       	subi	r20, 0xE7	; 231
     ca6:	5f 4f       	sbci	r21, 0xFF	; 255
     ca8:	ce 01       	movw	r24, r28
     caa:	01 96       	adiw	r24, 0x01	; 1
     cac:	6f 89       	ldd	r22, Y+23	; 0x17
     cae:	78 8d       	ldd	r23, Y+24	; 0x18
     cb0:	0e 94 63 06 	call	0xcc6	; 0xcc6 <vfprintf>
     cb4:	ef 81       	ldd	r30, Y+7	; 0x07
     cb6:	f8 85       	ldd	r31, Y+8	; 0x08
     cb8:	e0 0f       	add	r30, r16
     cba:	f1 1f       	adc	r31, r17
     cbc:	10 82       	st	Z, r1
     cbe:	2e 96       	adiw	r28, 0x0e	; 14
     cc0:	e4 e0       	ldi	r30, 0x04	; 4
     cc2:	0c 94 0b 09 	jmp	0x1216	; 0x1216 <__epilogue_restores__+0x1c>

00000cc6 <vfprintf>:
     cc6:	ad e0       	ldi	r26, 0x0D	; 13
     cc8:	b0 e0       	ldi	r27, 0x00	; 0
     cca:	e9 e6       	ldi	r30, 0x69	; 105
     ccc:	f6 e0       	ldi	r31, 0x06	; 6
     cce:	0c 94 e1 08 	jmp	0x11c2	; 0x11c2 <__prologue_saves__>
     cd2:	3c 01       	movw	r6, r24
     cd4:	7d 87       	std	Y+13, r23	; 0x0d
     cd6:	6c 87       	std	Y+12, r22	; 0x0c
     cd8:	5a 01       	movw	r10, r20
     cda:	fc 01       	movw	r30, r24
     cdc:	17 82       	std	Z+7, r1	; 0x07
     cde:	16 82       	std	Z+6, r1	; 0x06
     ce0:	83 81       	ldd	r24, Z+3	; 0x03
     ce2:	81 ff       	sbrs	r24, 1
     ce4:	c8 c1       	rjmp	.+912    	; 0x1076 <vfprintf+0x3b0>
     ce6:	2e 01       	movw	r4, r28
     ce8:	08 94       	sec
     cea:	41 1c       	adc	r4, r1
     cec:	51 1c       	adc	r5, r1
     cee:	f3 01       	movw	r30, r6
     cf0:	93 81       	ldd	r25, Z+3	; 0x03
     cf2:	ec 85       	ldd	r30, Y+12	; 0x0c
     cf4:	fd 85       	ldd	r31, Y+13	; 0x0d
     cf6:	93 fd       	sbrc	r25, 3
     cf8:	85 91       	lpm	r24, Z+
     cfa:	93 ff       	sbrs	r25, 3
     cfc:	81 91       	ld	r24, Z+
     cfe:	fd 87       	std	Y+13, r31	; 0x0d
     d00:	ec 87       	std	Y+12, r30	; 0x0c
     d02:	88 23       	and	r24, r24
     d04:	09 f4       	brne	.+2      	; 0xd08 <vfprintf+0x42>
     d06:	b3 c1       	rjmp	.+870    	; 0x106e <vfprintf+0x3a8>
     d08:	85 32       	cpi	r24, 0x25	; 37
     d0a:	41 f4       	brne	.+16     	; 0xd1c <vfprintf+0x56>
     d0c:	93 fd       	sbrc	r25, 3
     d0e:	85 91       	lpm	r24, Z+
     d10:	93 ff       	sbrs	r25, 3
     d12:	81 91       	ld	r24, Z+
     d14:	fd 87       	std	Y+13, r31	; 0x0d
     d16:	ec 87       	std	Y+12, r30	; 0x0c
     d18:	85 32       	cpi	r24, 0x25	; 37
     d1a:	29 f4       	brne	.+10     	; 0xd26 <vfprintf+0x60>
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	b3 01       	movw	r22, r6
     d20:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
     d24:	e4 cf       	rjmp	.-56     	; 0xcee <vfprintf+0x28>
     d26:	ff 24       	eor	r15, r15
     d28:	ee 24       	eor	r14, r14
     d2a:	10 e0       	ldi	r17, 0x00	; 0
     d2c:	10 32       	cpi	r17, 0x20	; 32
     d2e:	b0 f4       	brcc	.+44     	; 0xd5c <vfprintf+0x96>
     d30:	8b 32       	cpi	r24, 0x2B	; 43
     d32:	69 f0       	breq	.+26     	; 0xd4e <vfprintf+0x88>
     d34:	8c 32       	cpi	r24, 0x2C	; 44
     d36:	28 f4       	brcc	.+10     	; 0xd42 <vfprintf+0x7c>
     d38:	80 32       	cpi	r24, 0x20	; 32
     d3a:	51 f0       	breq	.+20     	; 0xd50 <vfprintf+0x8a>
     d3c:	83 32       	cpi	r24, 0x23	; 35
     d3e:	71 f4       	brne	.+28     	; 0xd5c <vfprintf+0x96>
     d40:	0b c0       	rjmp	.+22     	; 0xd58 <vfprintf+0x92>
     d42:	8d 32       	cpi	r24, 0x2D	; 45
     d44:	39 f0       	breq	.+14     	; 0xd54 <vfprintf+0x8e>
     d46:	80 33       	cpi	r24, 0x30	; 48
     d48:	49 f4       	brne	.+18     	; 0xd5c <vfprintf+0x96>
     d4a:	11 60       	ori	r17, 0x01	; 1
     d4c:	2c c0       	rjmp	.+88     	; 0xda6 <vfprintf+0xe0>
     d4e:	12 60       	ori	r17, 0x02	; 2
     d50:	14 60       	ori	r17, 0x04	; 4
     d52:	29 c0       	rjmp	.+82     	; 0xda6 <vfprintf+0xe0>
     d54:	18 60       	ori	r17, 0x08	; 8
     d56:	27 c0       	rjmp	.+78     	; 0xda6 <vfprintf+0xe0>
     d58:	10 61       	ori	r17, 0x10	; 16
     d5a:	25 c0       	rjmp	.+74     	; 0xda6 <vfprintf+0xe0>
     d5c:	17 fd       	sbrc	r17, 7
     d5e:	2e c0       	rjmp	.+92     	; 0xdbc <vfprintf+0xf6>
     d60:	28 2f       	mov	r18, r24
     d62:	20 53       	subi	r18, 0x30	; 48
     d64:	2a 30       	cpi	r18, 0x0A	; 10
     d66:	98 f4       	brcc	.+38     	; 0xd8e <vfprintf+0xc8>
     d68:	16 ff       	sbrs	r17, 6
     d6a:	08 c0       	rjmp	.+16     	; 0xd7c <vfprintf+0xb6>
     d6c:	8f 2d       	mov	r24, r15
     d6e:	88 0f       	add	r24, r24
     d70:	f8 2e       	mov	r15, r24
     d72:	ff 0c       	add	r15, r15
     d74:	ff 0c       	add	r15, r15
     d76:	f8 0e       	add	r15, r24
     d78:	f2 0e       	add	r15, r18
     d7a:	15 c0       	rjmp	.+42     	; 0xda6 <vfprintf+0xe0>
     d7c:	8e 2d       	mov	r24, r14
     d7e:	88 0f       	add	r24, r24
     d80:	e8 2e       	mov	r14, r24
     d82:	ee 0c       	add	r14, r14
     d84:	ee 0c       	add	r14, r14
     d86:	e8 0e       	add	r14, r24
     d88:	e2 0e       	add	r14, r18
     d8a:	10 62       	ori	r17, 0x20	; 32
     d8c:	0c c0       	rjmp	.+24     	; 0xda6 <vfprintf+0xe0>
     d8e:	8e 32       	cpi	r24, 0x2E	; 46
     d90:	21 f4       	brne	.+8      	; 0xd9a <vfprintf+0xd4>
     d92:	16 fd       	sbrc	r17, 6
     d94:	6c c1       	rjmp	.+728    	; 0x106e <vfprintf+0x3a8>
     d96:	10 64       	ori	r17, 0x40	; 64
     d98:	06 c0       	rjmp	.+12     	; 0xda6 <vfprintf+0xe0>
     d9a:	8c 36       	cpi	r24, 0x6C	; 108
     d9c:	11 f4       	brne	.+4      	; 0xda2 <vfprintf+0xdc>
     d9e:	10 68       	ori	r17, 0x80	; 128
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <vfprintf+0xe0>
     da2:	88 36       	cpi	r24, 0x68	; 104
     da4:	59 f4       	brne	.+22     	; 0xdbc <vfprintf+0xf6>
     da6:	ec 85       	ldd	r30, Y+12	; 0x0c
     da8:	fd 85       	ldd	r31, Y+13	; 0x0d
     daa:	93 fd       	sbrc	r25, 3
     dac:	85 91       	lpm	r24, Z+
     dae:	93 ff       	sbrs	r25, 3
     db0:	81 91       	ld	r24, Z+
     db2:	fd 87       	std	Y+13, r31	; 0x0d
     db4:	ec 87       	std	Y+12, r30	; 0x0c
     db6:	88 23       	and	r24, r24
     db8:	09 f0       	breq	.+2      	; 0xdbc <vfprintf+0xf6>
     dba:	b8 cf       	rjmp	.-144    	; 0xd2c <vfprintf+0x66>
     dbc:	98 2f       	mov	r25, r24
     dbe:	95 54       	subi	r25, 0x45	; 69
     dc0:	93 30       	cpi	r25, 0x03	; 3
     dc2:	18 f0       	brcs	.+6      	; 0xdca <vfprintf+0x104>
     dc4:	90 52       	subi	r25, 0x20	; 32
     dc6:	93 30       	cpi	r25, 0x03	; 3
     dc8:	38 f4       	brcc	.+14     	; 0xdd8 <vfprintf+0x112>
     dca:	24 e0       	ldi	r18, 0x04	; 4
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	a2 0e       	add	r10, r18
     dd0:	b3 1e       	adc	r11, r19
     dd2:	3f e3       	ldi	r19, 0x3F	; 63
     dd4:	39 83       	std	Y+1, r19	; 0x01
     dd6:	0f c0       	rjmp	.+30     	; 0xdf6 <vfprintf+0x130>
     dd8:	83 36       	cpi	r24, 0x63	; 99
     dda:	31 f0       	breq	.+12     	; 0xde8 <vfprintf+0x122>
     ddc:	83 37       	cpi	r24, 0x73	; 115
     dde:	81 f0       	breq	.+32     	; 0xe00 <vfprintf+0x13a>
     de0:	83 35       	cpi	r24, 0x53	; 83
     de2:	09 f0       	breq	.+2      	; 0xde6 <vfprintf+0x120>
     de4:	5a c0       	rjmp	.+180    	; 0xe9a <vfprintf+0x1d4>
     de6:	22 c0       	rjmp	.+68     	; 0xe2c <vfprintf+0x166>
     de8:	f5 01       	movw	r30, r10
     dea:	80 81       	ld	r24, Z
     dec:	89 83       	std	Y+1, r24	; 0x01
     dee:	22 e0       	ldi	r18, 0x02	; 2
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	a2 0e       	add	r10, r18
     df4:	b3 1e       	adc	r11, r19
     df6:	21 e0       	ldi	r18, 0x01	; 1
     df8:	c2 2e       	mov	r12, r18
     dfa:	d1 2c       	mov	r13, r1
     dfc:	42 01       	movw	r8, r4
     dfe:	14 c0       	rjmp	.+40     	; 0xe28 <vfprintf+0x162>
     e00:	92 e0       	ldi	r25, 0x02	; 2
     e02:	29 2e       	mov	r2, r25
     e04:	31 2c       	mov	r3, r1
     e06:	2a 0c       	add	r2, r10
     e08:	3b 1c       	adc	r3, r11
     e0a:	f5 01       	movw	r30, r10
     e0c:	80 80       	ld	r8, Z
     e0e:	91 80       	ldd	r9, Z+1	; 0x01
     e10:	16 ff       	sbrs	r17, 6
     e12:	03 c0       	rjmp	.+6      	; 0xe1a <vfprintf+0x154>
     e14:	6f 2d       	mov	r22, r15
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x158>
     e1a:	6f ef       	ldi	r22, 0xFF	; 255
     e1c:	7f ef       	ldi	r23, 0xFF	; 255
     e1e:	c4 01       	movw	r24, r8
     e20:	0e 94 4c 08 	call	0x1098	; 0x1098 <strnlen>
     e24:	6c 01       	movw	r12, r24
     e26:	51 01       	movw	r10, r2
     e28:	1f 77       	andi	r17, 0x7F	; 127
     e2a:	15 c0       	rjmp	.+42     	; 0xe56 <vfprintf+0x190>
     e2c:	82 e0       	ldi	r24, 0x02	; 2
     e2e:	28 2e       	mov	r2, r24
     e30:	31 2c       	mov	r3, r1
     e32:	2a 0c       	add	r2, r10
     e34:	3b 1c       	adc	r3, r11
     e36:	f5 01       	movw	r30, r10
     e38:	80 80       	ld	r8, Z
     e3a:	91 80       	ldd	r9, Z+1	; 0x01
     e3c:	16 ff       	sbrs	r17, 6
     e3e:	03 c0       	rjmp	.+6      	; 0xe46 <vfprintf+0x180>
     e40:	6f 2d       	mov	r22, r15
     e42:	70 e0       	ldi	r23, 0x00	; 0
     e44:	02 c0       	rjmp	.+4      	; 0xe4a <vfprintf+0x184>
     e46:	6f ef       	ldi	r22, 0xFF	; 255
     e48:	7f ef       	ldi	r23, 0xFF	; 255
     e4a:	c4 01       	movw	r24, r8
     e4c:	0e 94 41 08 	call	0x1082	; 0x1082 <strnlen_P>
     e50:	6c 01       	movw	r12, r24
     e52:	10 68       	ori	r17, 0x80	; 128
     e54:	51 01       	movw	r10, r2
     e56:	13 fd       	sbrc	r17, 3
     e58:	1c c0       	rjmp	.+56     	; 0xe92 <vfprintf+0x1cc>
     e5a:	06 c0       	rjmp	.+12     	; 0xe68 <vfprintf+0x1a2>
     e5c:	80 e2       	ldi	r24, 0x20	; 32
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	b3 01       	movw	r22, r6
     e62:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
     e66:	ea 94       	dec	r14
     e68:	8e 2d       	mov	r24, r14
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	c8 16       	cp	r12, r24
     e6e:	d9 06       	cpc	r13, r25
     e70:	a8 f3       	brcs	.-22     	; 0xe5c <vfprintf+0x196>
     e72:	0f c0       	rjmp	.+30     	; 0xe92 <vfprintf+0x1cc>
     e74:	f4 01       	movw	r30, r8
     e76:	17 fd       	sbrc	r17, 7
     e78:	85 91       	lpm	r24, Z+
     e7a:	17 ff       	sbrs	r17, 7
     e7c:	81 91       	ld	r24, Z+
     e7e:	4f 01       	movw	r8, r30
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	b3 01       	movw	r22, r6
     e84:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
     e88:	e1 10       	cpse	r14, r1
     e8a:	ea 94       	dec	r14
     e8c:	08 94       	sec
     e8e:	c1 08       	sbc	r12, r1
     e90:	d1 08       	sbc	r13, r1
     e92:	c1 14       	cp	r12, r1
     e94:	d1 04       	cpc	r13, r1
     e96:	71 f7       	brne	.-36     	; 0xe74 <vfprintf+0x1ae>
     e98:	e7 c0       	rjmp	.+462    	; 0x1068 <vfprintf+0x3a2>
     e9a:	84 36       	cpi	r24, 0x64	; 100
     e9c:	11 f0       	breq	.+4      	; 0xea2 <vfprintf+0x1dc>
     e9e:	89 36       	cpi	r24, 0x69	; 105
     ea0:	51 f5       	brne	.+84     	; 0xef6 <vfprintf+0x230>
     ea2:	f5 01       	movw	r30, r10
     ea4:	17 ff       	sbrs	r17, 7
     ea6:	07 c0       	rjmp	.+14     	; 0xeb6 <vfprintf+0x1f0>
     ea8:	80 81       	ld	r24, Z
     eaa:	91 81       	ldd	r25, Z+1	; 0x01
     eac:	a2 81       	ldd	r26, Z+2	; 0x02
     eae:	b3 81       	ldd	r27, Z+3	; 0x03
     eb0:	24 e0       	ldi	r18, 0x04	; 4
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	08 c0       	rjmp	.+16     	; 0xec6 <vfprintf+0x200>
     eb6:	80 81       	ld	r24, Z
     eb8:	91 81       	ldd	r25, Z+1	; 0x01
     eba:	aa 27       	eor	r26, r26
     ebc:	97 fd       	sbrc	r25, 7
     ebe:	a0 95       	com	r26
     ec0:	ba 2f       	mov	r27, r26
     ec2:	22 e0       	ldi	r18, 0x02	; 2
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	a2 0e       	add	r10, r18
     ec8:	b3 1e       	adc	r11, r19
     eca:	01 2f       	mov	r16, r17
     ecc:	0f 76       	andi	r16, 0x6F	; 111
     ece:	b7 ff       	sbrs	r27, 7
     ed0:	08 c0       	rjmp	.+16     	; 0xee2 <vfprintf+0x21c>
     ed2:	b0 95       	com	r27
     ed4:	a0 95       	com	r26
     ed6:	90 95       	com	r25
     ed8:	81 95       	neg	r24
     eda:	9f 4f       	sbci	r25, 0xFF	; 255
     edc:	af 4f       	sbci	r26, 0xFF	; 255
     ede:	bf 4f       	sbci	r27, 0xFF	; 255
     ee0:	00 68       	ori	r16, 0x80	; 128
     ee2:	bc 01       	movw	r22, r24
     ee4:	cd 01       	movw	r24, r26
     ee6:	a2 01       	movw	r20, r4
     ee8:	2a e0       	ldi	r18, 0x0A	; 10
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	0e 94 83 08 	call	0x1106	; 0x1106 <__ultoa_invert>
     ef0:	d8 2e       	mov	r13, r24
     ef2:	d4 18       	sub	r13, r4
     ef4:	3f c0       	rjmp	.+126    	; 0xf74 <vfprintf+0x2ae>
     ef6:	85 37       	cpi	r24, 0x75	; 117
     ef8:	21 f4       	brne	.+8      	; 0xf02 <vfprintf+0x23c>
     efa:	1f 7e       	andi	r17, 0xEF	; 239
     efc:	2a e0       	ldi	r18, 0x0A	; 10
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	20 c0       	rjmp	.+64     	; 0xf42 <vfprintf+0x27c>
     f02:	19 7f       	andi	r17, 0xF9	; 249
     f04:	8f 36       	cpi	r24, 0x6F	; 111
     f06:	a9 f0       	breq	.+42     	; 0xf32 <vfprintf+0x26c>
     f08:	80 37       	cpi	r24, 0x70	; 112
     f0a:	20 f4       	brcc	.+8      	; 0xf14 <vfprintf+0x24e>
     f0c:	88 35       	cpi	r24, 0x58	; 88
     f0e:	09 f0       	breq	.+2      	; 0xf12 <vfprintf+0x24c>
     f10:	ae c0       	rjmp	.+348    	; 0x106e <vfprintf+0x3a8>
     f12:	0b c0       	rjmp	.+22     	; 0xf2a <vfprintf+0x264>
     f14:	80 37       	cpi	r24, 0x70	; 112
     f16:	21 f0       	breq	.+8      	; 0xf20 <vfprintf+0x25a>
     f18:	88 37       	cpi	r24, 0x78	; 120
     f1a:	09 f0       	breq	.+2      	; 0xf1e <vfprintf+0x258>
     f1c:	a8 c0       	rjmp	.+336    	; 0x106e <vfprintf+0x3a8>
     f1e:	01 c0       	rjmp	.+2      	; 0xf22 <vfprintf+0x25c>
     f20:	10 61       	ori	r17, 0x10	; 16
     f22:	14 ff       	sbrs	r17, 4
     f24:	09 c0       	rjmp	.+18     	; 0xf38 <vfprintf+0x272>
     f26:	14 60       	ori	r17, 0x04	; 4
     f28:	07 c0       	rjmp	.+14     	; 0xf38 <vfprintf+0x272>
     f2a:	14 ff       	sbrs	r17, 4
     f2c:	08 c0       	rjmp	.+16     	; 0xf3e <vfprintf+0x278>
     f2e:	16 60       	ori	r17, 0x06	; 6
     f30:	06 c0       	rjmp	.+12     	; 0xf3e <vfprintf+0x278>
     f32:	28 e0       	ldi	r18, 0x08	; 8
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	05 c0       	rjmp	.+10     	; 0xf42 <vfprintf+0x27c>
     f38:	20 e1       	ldi	r18, 0x10	; 16
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <vfprintf+0x27c>
     f3e:	20 e1       	ldi	r18, 0x10	; 16
     f40:	32 e0       	ldi	r19, 0x02	; 2
     f42:	f5 01       	movw	r30, r10
     f44:	17 ff       	sbrs	r17, 7
     f46:	07 c0       	rjmp	.+14     	; 0xf56 <vfprintf+0x290>
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	82 81       	ldd	r24, Z+2	; 0x02
     f4e:	93 81       	ldd	r25, Z+3	; 0x03
     f50:	44 e0       	ldi	r20, 0x04	; 4
     f52:	50 e0       	ldi	r21, 0x00	; 0
     f54:	06 c0       	rjmp	.+12     	; 0xf62 <vfprintf+0x29c>
     f56:	60 81       	ld	r22, Z
     f58:	71 81       	ldd	r23, Z+1	; 0x01
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	42 e0       	ldi	r20, 0x02	; 2
     f60:	50 e0       	ldi	r21, 0x00	; 0
     f62:	a4 0e       	add	r10, r20
     f64:	b5 1e       	adc	r11, r21
     f66:	a2 01       	movw	r20, r4
     f68:	0e 94 83 08 	call	0x1106	; 0x1106 <__ultoa_invert>
     f6c:	d8 2e       	mov	r13, r24
     f6e:	d4 18       	sub	r13, r4
     f70:	01 2f       	mov	r16, r17
     f72:	0f 77       	andi	r16, 0x7F	; 127
     f74:	06 ff       	sbrs	r16, 6
     f76:	09 c0       	rjmp	.+18     	; 0xf8a <vfprintf+0x2c4>
     f78:	0e 7f       	andi	r16, 0xFE	; 254
     f7a:	df 14       	cp	r13, r15
     f7c:	30 f4       	brcc	.+12     	; 0xf8a <vfprintf+0x2c4>
     f7e:	04 ff       	sbrs	r16, 4
     f80:	06 c0       	rjmp	.+12     	; 0xf8e <vfprintf+0x2c8>
     f82:	02 fd       	sbrc	r16, 2
     f84:	04 c0       	rjmp	.+8      	; 0xf8e <vfprintf+0x2c8>
     f86:	0f 7e       	andi	r16, 0xEF	; 239
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <vfprintf+0x2c8>
     f8a:	1d 2d       	mov	r17, r13
     f8c:	01 c0       	rjmp	.+2      	; 0xf90 <vfprintf+0x2ca>
     f8e:	1f 2d       	mov	r17, r15
     f90:	80 2f       	mov	r24, r16
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	04 ff       	sbrs	r16, 4
     f96:	0c c0       	rjmp	.+24     	; 0xfb0 <vfprintf+0x2ea>
     f98:	fe 01       	movw	r30, r28
     f9a:	ed 0d       	add	r30, r13
     f9c:	f1 1d       	adc	r31, r1
     f9e:	20 81       	ld	r18, Z
     fa0:	20 33       	cpi	r18, 0x30	; 48
     fa2:	11 f4       	brne	.+4      	; 0xfa8 <vfprintf+0x2e2>
     fa4:	09 7e       	andi	r16, 0xE9	; 233
     fa6:	09 c0       	rjmp	.+18     	; 0xfba <vfprintf+0x2f4>
     fa8:	02 ff       	sbrs	r16, 2
     faa:	06 c0       	rjmp	.+12     	; 0xfb8 <vfprintf+0x2f2>
     fac:	1e 5f       	subi	r17, 0xFE	; 254
     fae:	05 c0       	rjmp	.+10     	; 0xfba <vfprintf+0x2f4>
     fb0:	86 78       	andi	r24, 0x86	; 134
     fb2:	90 70       	andi	r25, 0x00	; 0
     fb4:	00 97       	sbiw	r24, 0x00	; 0
     fb6:	09 f0       	breq	.+2      	; 0xfba <vfprintf+0x2f4>
     fb8:	1f 5f       	subi	r17, 0xFF	; 255
     fba:	80 2e       	mov	r8, r16
     fbc:	99 24       	eor	r9, r9
     fbe:	03 fd       	sbrc	r16, 3
     fc0:	12 c0       	rjmp	.+36     	; 0xfe6 <vfprintf+0x320>
     fc2:	00 ff       	sbrs	r16, 0
     fc4:	0d c0       	rjmp	.+26     	; 0xfe0 <vfprintf+0x31a>
     fc6:	fd 2c       	mov	r15, r13
     fc8:	1e 15       	cp	r17, r14
     fca:	50 f4       	brcc	.+20     	; 0xfe0 <vfprintf+0x31a>
     fcc:	fe 0c       	add	r15, r14
     fce:	f1 1a       	sub	r15, r17
     fd0:	1e 2d       	mov	r17, r14
     fd2:	06 c0       	rjmp	.+12     	; 0xfe0 <vfprintf+0x31a>
     fd4:	80 e2       	ldi	r24, 0x20	; 32
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	b3 01       	movw	r22, r6
     fda:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
     fde:	1f 5f       	subi	r17, 0xFF	; 255
     fe0:	1e 15       	cp	r17, r14
     fe2:	c0 f3       	brcs	.-16     	; 0xfd4 <vfprintf+0x30e>
     fe4:	04 c0       	rjmp	.+8      	; 0xfee <vfprintf+0x328>
     fe6:	1e 15       	cp	r17, r14
     fe8:	10 f4       	brcc	.+4      	; 0xfee <vfprintf+0x328>
     fea:	e1 1a       	sub	r14, r17
     fec:	01 c0       	rjmp	.+2      	; 0xff0 <vfprintf+0x32a>
     fee:	ee 24       	eor	r14, r14
     ff0:	84 fe       	sbrs	r8, 4
     ff2:	0f c0       	rjmp	.+30     	; 0x1012 <vfprintf+0x34c>
     ff4:	80 e3       	ldi	r24, 0x30	; 48
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	b3 01       	movw	r22, r6
     ffa:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
     ffe:	82 fe       	sbrs	r8, 2
    1000:	1f c0       	rjmp	.+62     	; 0x1040 <vfprintf+0x37a>
    1002:	81 fe       	sbrs	r8, 1
    1004:	03 c0       	rjmp	.+6      	; 0x100c <vfprintf+0x346>
    1006:	88 e5       	ldi	r24, 0x58	; 88
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	10 c0       	rjmp	.+32     	; 0x102c <vfprintf+0x366>
    100c:	88 e7       	ldi	r24, 0x78	; 120
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	0d c0       	rjmp	.+26     	; 0x102c <vfprintf+0x366>
    1012:	c4 01       	movw	r24, r8
    1014:	86 78       	andi	r24, 0x86	; 134
    1016:	90 70       	andi	r25, 0x00	; 0
    1018:	00 97       	sbiw	r24, 0x00	; 0
    101a:	91 f0       	breq	.+36     	; 0x1040 <vfprintf+0x37a>
    101c:	81 fc       	sbrc	r8, 1
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <vfprintf+0x35e>
    1020:	80 e2       	ldi	r24, 0x20	; 32
    1022:	01 c0       	rjmp	.+2      	; 0x1026 <vfprintf+0x360>
    1024:	8b e2       	ldi	r24, 0x2B	; 43
    1026:	07 fd       	sbrc	r16, 7
    1028:	8d e2       	ldi	r24, 0x2D	; 45
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	b3 01       	movw	r22, r6
    102e:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
    1032:	06 c0       	rjmp	.+12     	; 0x1040 <vfprintf+0x37a>
    1034:	80 e3       	ldi	r24, 0x30	; 48
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	b3 01       	movw	r22, r6
    103a:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
    103e:	fa 94       	dec	r15
    1040:	df 14       	cp	r13, r15
    1042:	c0 f3       	brcs	.-16     	; 0x1034 <vfprintf+0x36e>
    1044:	da 94       	dec	r13
    1046:	f2 01       	movw	r30, r4
    1048:	ed 0d       	add	r30, r13
    104a:	f1 1d       	adc	r31, r1
    104c:	80 81       	ld	r24, Z
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	b3 01       	movw	r22, r6
    1052:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
    1056:	dd 20       	and	r13, r13
    1058:	a9 f7       	brne	.-22     	; 0x1044 <vfprintf+0x37e>
    105a:	06 c0       	rjmp	.+12     	; 0x1068 <vfprintf+0x3a2>
    105c:	80 e2       	ldi	r24, 0x20	; 32
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	b3 01       	movw	r22, r6
    1062:	0e 94 57 08 	call	0x10ae	; 0x10ae <fputc>
    1066:	ea 94       	dec	r14
    1068:	ee 20       	and	r14, r14
    106a:	c1 f7       	brne	.-16     	; 0x105c <vfprintf+0x396>
    106c:	40 ce       	rjmp	.-896    	; 0xcee <vfprintf+0x28>
    106e:	f3 01       	movw	r30, r6
    1070:	86 81       	ldd	r24, Z+6	; 0x06
    1072:	97 81       	ldd	r25, Z+7	; 0x07
    1074:	02 c0       	rjmp	.+4      	; 0x107a <vfprintf+0x3b4>
    1076:	8f ef       	ldi	r24, 0xFF	; 255
    1078:	9f ef       	ldi	r25, 0xFF	; 255
    107a:	2d 96       	adiw	r28, 0x0d	; 13
    107c:	e2 e1       	ldi	r30, 0x12	; 18
    107e:	0c 94 fd 08 	jmp	0x11fa	; 0x11fa <__epilogue_restores__>

00001082 <strnlen_P>:
    1082:	fc 01       	movw	r30, r24
    1084:	05 90       	lpm	r0, Z+
    1086:	61 50       	subi	r22, 0x01	; 1
    1088:	70 40       	sbci	r23, 0x00	; 0
    108a:	01 10       	cpse	r0, r1
    108c:	d8 f7       	brcc	.-10     	; 0x1084 <strnlen_P+0x2>
    108e:	80 95       	com	r24
    1090:	90 95       	com	r25
    1092:	8e 0f       	add	r24, r30
    1094:	9f 1f       	adc	r25, r31
    1096:	08 95       	ret

00001098 <strnlen>:
    1098:	fc 01       	movw	r30, r24
    109a:	61 50       	subi	r22, 0x01	; 1
    109c:	70 40       	sbci	r23, 0x00	; 0
    109e:	01 90       	ld	r0, Z+
    10a0:	01 10       	cpse	r0, r1
    10a2:	d8 f7       	brcc	.-10     	; 0x109a <strnlen+0x2>
    10a4:	80 95       	com	r24
    10a6:	90 95       	com	r25
    10a8:	8e 0f       	add	r24, r30
    10aa:	9f 1f       	adc	r25, r31
    10ac:	08 95       	ret

000010ae <fputc>:
    10ae:	0f 93       	push	r16
    10b0:	1f 93       	push	r17
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	8c 01       	movw	r16, r24
    10b8:	eb 01       	movw	r28, r22
    10ba:	8b 81       	ldd	r24, Y+3	; 0x03
    10bc:	81 ff       	sbrs	r24, 1
    10be:	1b c0       	rjmp	.+54     	; 0x10f6 <fputc+0x48>
    10c0:	82 ff       	sbrs	r24, 2
    10c2:	0d c0       	rjmp	.+26     	; 0x10de <fputc+0x30>
    10c4:	2e 81       	ldd	r18, Y+6	; 0x06
    10c6:	3f 81       	ldd	r19, Y+7	; 0x07
    10c8:	8c 81       	ldd	r24, Y+4	; 0x04
    10ca:	9d 81       	ldd	r25, Y+5	; 0x05
    10cc:	28 17       	cp	r18, r24
    10ce:	39 07       	cpc	r19, r25
    10d0:	64 f4       	brge	.+24     	; 0x10ea <fputc+0x3c>
    10d2:	e8 81       	ld	r30, Y
    10d4:	f9 81       	ldd	r31, Y+1	; 0x01
    10d6:	01 93       	st	Z+, r16
    10d8:	f9 83       	std	Y+1, r31	; 0x01
    10da:	e8 83       	st	Y, r30
    10dc:	06 c0       	rjmp	.+12     	; 0x10ea <fputc+0x3c>
    10de:	e8 85       	ldd	r30, Y+8	; 0x08
    10e0:	f9 85       	ldd	r31, Y+9	; 0x09
    10e2:	80 2f       	mov	r24, r16
    10e4:	09 95       	icall
    10e6:	00 97       	sbiw	r24, 0x00	; 0
    10e8:	31 f4       	brne	.+12     	; 0x10f6 <fputc+0x48>
    10ea:	8e 81       	ldd	r24, Y+6	; 0x06
    10ec:	9f 81       	ldd	r25, Y+7	; 0x07
    10ee:	01 96       	adiw	r24, 0x01	; 1
    10f0:	9f 83       	std	Y+7, r25	; 0x07
    10f2:	8e 83       	std	Y+6, r24	; 0x06
    10f4:	02 c0       	rjmp	.+4      	; 0x10fa <fputc+0x4c>
    10f6:	0f ef       	ldi	r16, 0xFF	; 255
    10f8:	1f ef       	ldi	r17, 0xFF	; 255
    10fa:	c8 01       	movw	r24, r16
    10fc:	df 91       	pop	r29
    10fe:	cf 91       	pop	r28
    1100:	1f 91       	pop	r17
    1102:	0f 91       	pop	r16
    1104:	08 95       	ret

00001106 <__ultoa_invert>:
    1106:	fa 01       	movw	r30, r20
    1108:	aa 27       	eor	r26, r26
    110a:	28 30       	cpi	r18, 0x08	; 8
    110c:	51 f1       	breq	.+84     	; 0x1162 <__ultoa_invert+0x5c>
    110e:	20 31       	cpi	r18, 0x10	; 16
    1110:	81 f1       	breq	.+96     	; 0x1172 <__ultoa_invert+0x6c>
    1112:	e8 94       	clt
    1114:	6f 93       	push	r22
    1116:	6e 7f       	andi	r22, 0xFE	; 254
    1118:	6e 5f       	subi	r22, 0xFE	; 254
    111a:	7f 4f       	sbci	r23, 0xFF	; 255
    111c:	8f 4f       	sbci	r24, 0xFF	; 255
    111e:	9f 4f       	sbci	r25, 0xFF	; 255
    1120:	af 4f       	sbci	r26, 0xFF	; 255
    1122:	b1 e0       	ldi	r27, 0x01	; 1
    1124:	3e d0       	rcall	.+124    	; 0x11a2 <__ultoa_invert+0x9c>
    1126:	b4 e0       	ldi	r27, 0x04	; 4
    1128:	3c d0       	rcall	.+120    	; 0x11a2 <__ultoa_invert+0x9c>
    112a:	67 0f       	add	r22, r23
    112c:	78 1f       	adc	r23, r24
    112e:	89 1f       	adc	r24, r25
    1130:	9a 1f       	adc	r25, r26
    1132:	a1 1d       	adc	r26, r1
    1134:	68 0f       	add	r22, r24
    1136:	79 1f       	adc	r23, r25
    1138:	8a 1f       	adc	r24, r26
    113a:	91 1d       	adc	r25, r1
    113c:	a1 1d       	adc	r26, r1
    113e:	6a 0f       	add	r22, r26
    1140:	71 1d       	adc	r23, r1
    1142:	81 1d       	adc	r24, r1
    1144:	91 1d       	adc	r25, r1
    1146:	a1 1d       	adc	r26, r1
    1148:	20 d0       	rcall	.+64     	; 0x118a <__ultoa_invert+0x84>
    114a:	09 f4       	brne	.+2      	; 0x114e <__ultoa_invert+0x48>
    114c:	68 94       	set
    114e:	3f 91       	pop	r19
    1150:	2a e0       	ldi	r18, 0x0A	; 10
    1152:	26 9f       	mul	r18, r22
    1154:	11 24       	eor	r1, r1
    1156:	30 19       	sub	r19, r0
    1158:	30 5d       	subi	r19, 0xD0	; 208
    115a:	31 93       	st	Z+, r19
    115c:	de f6       	brtc	.-74     	; 0x1114 <__ultoa_invert+0xe>
    115e:	cf 01       	movw	r24, r30
    1160:	08 95       	ret
    1162:	46 2f       	mov	r20, r22
    1164:	47 70       	andi	r20, 0x07	; 7
    1166:	40 5d       	subi	r20, 0xD0	; 208
    1168:	41 93       	st	Z+, r20
    116a:	b3 e0       	ldi	r27, 0x03	; 3
    116c:	0f d0       	rcall	.+30     	; 0x118c <__ultoa_invert+0x86>
    116e:	c9 f7       	brne	.-14     	; 0x1162 <__ultoa_invert+0x5c>
    1170:	f6 cf       	rjmp	.-20     	; 0x115e <__ultoa_invert+0x58>
    1172:	46 2f       	mov	r20, r22
    1174:	4f 70       	andi	r20, 0x0F	; 15
    1176:	40 5d       	subi	r20, 0xD0	; 208
    1178:	4a 33       	cpi	r20, 0x3A	; 58
    117a:	18 f0       	brcs	.+6      	; 0x1182 <__ultoa_invert+0x7c>
    117c:	49 5d       	subi	r20, 0xD9	; 217
    117e:	31 fd       	sbrc	r19, 1
    1180:	40 52       	subi	r20, 0x20	; 32
    1182:	41 93       	st	Z+, r20
    1184:	02 d0       	rcall	.+4      	; 0x118a <__ultoa_invert+0x84>
    1186:	a9 f7       	brne	.-22     	; 0x1172 <__ultoa_invert+0x6c>
    1188:	ea cf       	rjmp	.-44     	; 0x115e <__ultoa_invert+0x58>
    118a:	b4 e0       	ldi	r27, 0x04	; 4
    118c:	a6 95       	lsr	r26
    118e:	97 95       	ror	r25
    1190:	87 95       	ror	r24
    1192:	77 95       	ror	r23
    1194:	67 95       	ror	r22
    1196:	ba 95       	dec	r27
    1198:	c9 f7       	brne	.-14     	; 0x118c <__ultoa_invert+0x86>
    119a:	00 97       	sbiw	r24, 0x00	; 0
    119c:	61 05       	cpc	r22, r1
    119e:	71 05       	cpc	r23, r1
    11a0:	08 95       	ret
    11a2:	9b 01       	movw	r18, r22
    11a4:	ac 01       	movw	r20, r24
    11a6:	0a 2e       	mov	r0, r26
    11a8:	06 94       	lsr	r0
    11aa:	57 95       	ror	r21
    11ac:	47 95       	ror	r20
    11ae:	37 95       	ror	r19
    11b0:	27 95       	ror	r18
    11b2:	ba 95       	dec	r27
    11b4:	c9 f7       	brne	.-14     	; 0x11a8 <__ultoa_invert+0xa2>
    11b6:	62 0f       	add	r22, r18
    11b8:	73 1f       	adc	r23, r19
    11ba:	84 1f       	adc	r24, r20
    11bc:	95 1f       	adc	r25, r21
    11be:	a0 1d       	adc	r26, r0
    11c0:	08 95       	ret

000011c2 <__prologue_saves__>:
    11c2:	2f 92       	push	r2
    11c4:	3f 92       	push	r3
    11c6:	4f 92       	push	r4
    11c8:	5f 92       	push	r5
    11ca:	6f 92       	push	r6
    11cc:	7f 92       	push	r7
    11ce:	8f 92       	push	r8
    11d0:	9f 92       	push	r9
    11d2:	af 92       	push	r10
    11d4:	bf 92       	push	r11
    11d6:	cf 92       	push	r12
    11d8:	df 92       	push	r13
    11da:	ef 92       	push	r14
    11dc:	ff 92       	push	r15
    11de:	0f 93       	push	r16
    11e0:	1f 93       	push	r17
    11e2:	cf 93       	push	r28
    11e4:	df 93       	push	r29
    11e6:	cd b7       	in	r28, 0x3d	; 61
    11e8:	de b7       	in	r29, 0x3e	; 62
    11ea:	ca 1b       	sub	r28, r26
    11ec:	db 0b       	sbc	r29, r27
    11ee:	0f b6       	in	r0, 0x3f	; 63
    11f0:	f8 94       	cli
    11f2:	de bf       	out	0x3e, r29	; 62
    11f4:	0f be       	out	0x3f, r0	; 63
    11f6:	cd bf       	out	0x3d, r28	; 61
    11f8:	09 94       	ijmp

000011fa <__epilogue_restores__>:
    11fa:	2a 88       	ldd	r2, Y+18	; 0x12
    11fc:	39 88       	ldd	r3, Y+17	; 0x11
    11fe:	48 88       	ldd	r4, Y+16	; 0x10
    1200:	5f 84       	ldd	r5, Y+15	; 0x0f
    1202:	6e 84       	ldd	r6, Y+14	; 0x0e
    1204:	7d 84       	ldd	r7, Y+13	; 0x0d
    1206:	8c 84       	ldd	r8, Y+12	; 0x0c
    1208:	9b 84       	ldd	r9, Y+11	; 0x0b
    120a:	aa 84       	ldd	r10, Y+10	; 0x0a
    120c:	b9 84       	ldd	r11, Y+9	; 0x09
    120e:	c8 84       	ldd	r12, Y+8	; 0x08
    1210:	df 80       	ldd	r13, Y+7	; 0x07
    1212:	ee 80       	ldd	r14, Y+6	; 0x06
    1214:	fd 80       	ldd	r15, Y+5	; 0x05
    1216:	0c 81       	ldd	r16, Y+4	; 0x04
    1218:	1b 81       	ldd	r17, Y+3	; 0x03
    121a:	aa 81       	ldd	r26, Y+2	; 0x02
    121c:	b9 81       	ldd	r27, Y+1	; 0x01
    121e:	ce 0f       	add	r28, r30
    1220:	d1 1d       	adc	r29, r1
    1222:	0f b6       	in	r0, 0x3f	; 63
    1224:	f8 94       	cli
    1226:	de bf       	out	0x3e, r29	; 62
    1228:	0f be       	out	0x3f, r0	; 63
    122a:	cd bf       	out	0x3d, r28	; 61
    122c:	ed 01       	movw	r28, r26
    122e:	08 95       	ret

00001230 <_exit>:
    1230:	f8 94       	cli

00001232 <__stop_program>:
    1232:	ff cf       	rjmp	.-2      	; 0x1232 <__stop_program>
