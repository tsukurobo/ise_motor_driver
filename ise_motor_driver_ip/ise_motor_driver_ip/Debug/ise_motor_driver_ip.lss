
ise_motor_driver_ip.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00001350  000013e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001350  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000434  00800104  00800104  000013e8  2**0
                  ALLOC
  3 .stab         00002bec  00000000  00000000  000013e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000009ba  00000000  00000000  00003fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  00004990  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001332  00000000  00000000  00004b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000819  00000000  00000000  00005e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c48  00000000  00000000  0000665b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000340  00000000  00000000  000072a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000675  00000000  00000000  000075e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b0e  00000000  00000000  00007c59  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00008767  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 4c 03 	jmp	0x698	; 0x698 <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 97 03 	jmp	0x72e	; 0x72e <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__vector_24>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e5       	ldi	r30, 0x50	; 80
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a4 30       	cpi	r26, 0x04	; 4
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	15 e0       	ldi	r17, 0x05	; 5
      8c:	a4 e0       	ldi	r26, 0x04	; 4
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a8 33       	cpi	r26, 0x38	; 56
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 c2 03 	call	0x784	; 0x784 <main>
      9e:	0c 94 a6 09 	jmp	0x134c	; 0x134c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z16I2C_setCallbacksPFvhEPFvvE>:
static void (*I2C_recv)(uint8_t);
static void (*I2C_req)();

void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)())
{
	I2C_recv = recv;
      a6:	90 93 05 01 	sts	0x0105, r25
      aa:	80 93 04 01 	sts	0x0104, r24
	I2C_req = req;
      ae:	70 93 07 01 	sts	0x0107, r23
      b2:	60 93 06 01 	sts	0x0106, r22
}
      b6:	08 95       	ret

000000b8 <_Z8I2C_inith>:

void I2C_init(uint8_t address)
{
	cli();
      b8:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
      ba:	88 0f       	add	r24, r24
      bc:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
      c0:	85 ec       	ldi	r24, 0xC5	; 197
      c2:	80 93 bc 00 	sts	0x00BC, r24
	sei();
      c6:	78 94       	sei
}
      c8:	08 95       	ret

000000ca <_Z13I2C_init_synch>:

void I2C_init_sync(uint8_t address)
{
	cli();
      ca:	f8 94       	cli
	// load address into TWI address register
	TWAR = address << 1;
      cc:	88 0f       	add	r24, r24
      ce:	80 93 ba 00 	sts	0x00BA, r24
	// set the TWCR to enable address matching and enable TWI, clear TWINT, enable TWI interrupt
	TWCR = (1<<TWEA) | (1<<TWINT) | (1<<TWEN);
      d2:	84 ec       	ldi	r24, 0xC4	; 196
      d4:	80 93 bc 00 	sts	0x00BC, r24
	sei();
      d8:	78 94       	sei
}
      da:	08 95       	ret

000000dc <_Z8I2C_stopv>:

void I2C_stop(void)
{
	// clear acknowledge and enable bits
	cli();
      dc:	f8 94       	cli
	TWCR = 0;
      de:	10 92 bc 00 	sts	0x00BC, r1
	TWAR = 0;
      e2:	10 92 ba 00 	sts	0x00BA, r1
	sei();
      e6:	78 94       	sei
}
      e8:	08 95       	ret

000000ea <_Z8I2C_mainv>:

void I2C_main()
{
	//é©à∂SLA+RéÛêMÇ‹Ç≈ë“ã@
	while( !(TWCR & (1 << TWINT))){
      ea:	ec eb       	ldi	r30, 0xBC	; 188
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	88 23       	and	r24, r24
      f2:	ec f7       	brge	.-6      	; 0xee <_Z8I2C_mainv+0x4>
	//_delay_us(10);
	}
		
	switch(TW_STATUS)
      f4:	80 91 b9 00 	lds	r24, 0x00B9
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	88 7f       	andi	r24, 0xF8	; 248
      fc:	90 70       	andi	r25, 0x00	; 0
      fe:	80 38       	cpi	r24, 0x80	; 128
     100:	91 05       	cpc	r25, r1
     102:	69 f0       	breq	.+26     	; 0x11e <_Z8I2C_mainv+0x34>
     104:	81 38       	cpi	r24, 0x81	; 129
     106:	91 05       	cpc	r25, r1
     108:	1c f4       	brge	.+6      	; 0x110 <_Z8I2C_mainv+0x26>
     10a:	00 97       	sbiw	r24, 0x00	; 0
     10c:	29 f1       	breq	.+74     	; 0x158 <_Z8I2C_mainv+0x6e>
     10e:	2a c0       	rjmp	.+84     	; 0x164 <_Z8I2C_mainv+0x7a>
     110:	88 3a       	cpi	r24, 0xA8	; 168
     112:	91 05       	cpc	r25, r1
     114:	79 f0       	breq	.+30     	; 0x134 <_Z8I2C_mainv+0x4a>
     116:	88 3b       	cpi	r24, 0xB8	; 184
     118:	91 05       	cpc	r25, r1
     11a:	21 f5       	brne	.+72     	; 0x164 <_Z8I2C_mainv+0x7a>
     11c:	14 c0       	rjmp	.+40     	; 0x146 <_Z8I2C_mainv+0x5c>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     11e:	80 91 bb 00 	lds	r24, 0x00BB
     122:	e0 91 04 01 	lds	r30, 0x0104
     126:	f0 91 05 01 	lds	r31, 0x0105
     12a:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     12c:	84 ec       	ldi	r24, 0xC4	; 196
     12e:	80 93 bc 00 	sts	0x00BC, r24
		break;
     132:	08 95       	ret
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     134:	e0 91 06 01 	lds	r30, 0x0106
     138:	f0 91 07 01 	lds	r31, 0x0107
     13c:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     13e:	84 ec       	ldi	r24, 0xC4	; 196
     140:	80 93 bc 00 	sts	0x00BC, r24
		break;
     144:	08 95       	ret
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     146:	e0 91 06 01 	lds	r30, 0x0106
     14a:	f0 91 07 01 	lds	r31, 0x0107
     14e:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     150:	84 ec       	ldi	r24, 0xC4	; 196
     152:	80 93 bc 00 	sts	0x00BC, r24
		break;
     156:	08 95       	ret
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     158:	ec eb       	ldi	r30, 0xBC	; 188
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	10 82       	st	Z, r1
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     15e:	84 ec       	ldi	r24, 0xC4	; 196
     160:	80 83       	st	Z, r24
		break;
     162:	08 95       	ret
		default:
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     164:	84 ec       	ldi	r24, 0xC4	; 196
     166:	80 93 bc 00 	sts	0x00BC, r24
     16a:	08 95       	ret

0000016c <_Z8I2C_bodyv>:
		break;
	}
}

void I2C_body() {
	switch(TW_STATUS)
     16c:	80 91 b9 00 	lds	r24, 0x00B9
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	88 7f       	andi	r24, 0xF8	; 248
     174:	90 70       	andi	r25, 0x00	; 0
     176:	80 38       	cpi	r24, 0x80	; 128
     178:	91 05       	cpc	r25, r1
     17a:	69 f0       	breq	.+26     	; 0x196 <_Z8I2C_bodyv+0x2a>
     17c:	81 38       	cpi	r24, 0x81	; 129
     17e:	91 05       	cpc	r25, r1
     180:	1c f4       	brge	.+6      	; 0x188 <_Z8I2C_bodyv+0x1c>
     182:	00 97       	sbiw	r24, 0x00	; 0
     184:	29 f1       	breq	.+74     	; 0x1d0 <_Z8I2C_bodyv+0x64>
     186:	2a c0       	rjmp	.+84     	; 0x1dc <_Z8I2C_bodyv+0x70>
     188:	88 3a       	cpi	r24, 0xA8	; 168
     18a:	91 05       	cpc	r25, r1
     18c:	79 f0       	breq	.+30     	; 0x1ac <_Z8I2C_bodyv+0x40>
     18e:	88 3b       	cpi	r24, 0xB8	; 184
     190:	91 05       	cpc	r25, r1
     192:	21 f5       	brne	.+72     	; 0x1dc <_Z8I2C_bodyv+0x70>
     194:	14 c0       	rjmp	.+40     	; 0x1be <_Z8I2C_bodyv+0x52>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     196:	80 91 bb 00 	lds	r24, 0x00BB
     19a:	e0 91 04 01 	lds	r30, 0x0104
     19e:	f0 91 05 01 	lds	r31, 0x0105
     1a2:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1a4:	84 ec       	ldi	r24, 0xC4	; 196
     1a6:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1aa:	08 95       	ret
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     1ac:	e0 91 06 01 	lds	r30, 0x0106
     1b0:	f0 91 07 01 	lds	r31, 0x0107
     1b4:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1b6:	84 ec       	ldi	r24, 0xC4	; 196
     1b8:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1bc:	08 95       	ret
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     1be:	e0 91 06 01 	lds	r30, 0x0106
     1c2:	f0 91 07 01 	lds	r31, 0x0107
     1c6:	09 95       	icall
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1c8:	84 ec       	ldi	r24, 0xC4	; 196
     1ca:	80 93 bc 00 	sts	0x00BC, r24
		break;
     1ce:	08 95       	ret
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     1d0:	ec eb       	ldi	r30, 0xBC	; 188
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	10 82       	st	Z, r1
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1d6:	84 ec       	ldi	r24, 0xC4	; 196
     1d8:	80 83       	st	Z, r24
		break;
     1da:	08 95       	ret
		default:
		TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     1dc:	84 ec       	ldi	r24, 0xC4	; 196
     1de:	80 93 bc 00 	sts	0x00BC, r24
     1e2:	08 95       	ret

000001e4 <__vector_24>:
	
}


ISR(TWI_vect)
{
     1e4:	1f 92       	push	r1
     1e6:	0f 92       	push	r0
     1e8:	0f b6       	in	r0, 0x3f	; 63
     1ea:	0f 92       	push	r0
     1ec:	11 24       	eor	r1, r1
     1ee:	2f 93       	push	r18
     1f0:	3f 93       	push	r19
     1f2:	4f 93       	push	r20
     1f4:	5f 93       	push	r21
     1f6:	6f 93       	push	r22
     1f8:	7f 93       	push	r23
     1fa:	8f 93       	push	r24
     1fc:	9f 93       	push	r25
     1fe:	af 93       	push	r26
     200:	bf 93       	push	r27
     202:	ef 93       	push	r30
     204:	ff 93       	push	r31
	switch(TW_STATUS)
     206:	80 91 b9 00 	lds	r24, 0x00B9
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	88 7f       	andi	r24, 0xF8	; 248
     20e:	90 70       	andi	r25, 0x00	; 0
     210:	80 38       	cpi	r24, 0x80	; 128
     212:	91 05       	cpc	r25, r1
     214:	69 f0       	breq	.+26     	; 0x230 <__vector_24+0x4c>
     216:	81 38       	cpi	r24, 0x81	; 129
     218:	91 05       	cpc	r25, r1
     21a:	1c f4       	brge	.+6      	; 0x222 <__vector_24+0x3e>
     21c:	00 97       	sbiw	r24, 0x00	; 0
     21e:	29 f1       	breq	.+74     	; 0x26a <__vector_24+0x86>
     220:	2a c0       	rjmp	.+84     	; 0x276 <__vector_24+0x92>
     222:	88 3a       	cpi	r24, 0xA8	; 168
     224:	91 05       	cpc	r25, r1
     226:	79 f0       	breq	.+30     	; 0x246 <__vector_24+0x62>
     228:	88 3b       	cpi	r24, 0xB8	; 184
     22a:	91 05       	cpc	r25, r1
     22c:	21 f5       	brne	.+72     	; 0x276 <__vector_24+0x92>
     22e:	14 c0       	rjmp	.+40     	; 0x258 <__vector_24+0x74>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recv(TWDR);
     230:	80 91 bb 00 	lds	r24, 0x00BB
     234:	e0 91 04 01 	lds	r30, 0x0104
     238:	f0 91 05 01 	lds	r31, 0x0105
     23c:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     23e:	85 ec       	ldi	r24, 0xC5	; 197
     240:	80 93 bc 00 	sts	0x00BC, r24
		break;
     244:	1b c0       	rjmp	.+54     	; 0x27c <__vector_24+0x98>
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     246:	e0 91 06 01 	lds	r30, 0x0106
     24a:	f0 91 07 01 	lds	r31, 0x0107
     24e:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     250:	85 ec       	ldi	r24, 0xC5	; 197
     252:	80 93 bc 00 	sts	0x00BC, r24
		break;
     256:	12 c0       	rjmp	.+36     	; 0x27c <__vector_24+0x98>
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		I2C_req();
     258:	e0 91 06 01 	lds	r30, 0x0106
     25c:	f0 91 07 01 	lds	r31, 0x0107
     260:	09 95       	icall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     262:	85 ec       	ldi	r24, 0xC5	; 197
     264:	80 93 bc 00 	sts	0x00BC, r24
		break;
     268:	09 c0       	rjmp	.+18     	; 0x27c <__vector_24+0x98>
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     26a:	ec eb       	ldi	r30, 0xBC	; 188
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     270:	85 ec       	ldi	r24, 0xC5	; 197
     272:	80 83       	st	Z, r24
		break;
     274:	03 c0       	rjmp	.+6      	; 0x27c <__vector_24+0x98>
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     276:	85 ec       	ldi	r24, 0xC5	; 197
     278:	80 93 bc 00 	sts	0x00BC, r24
		break;
	}
     27c:	ff 91       	pop	r31
     27e:	ef 91       	pop	r30
     280:	bf 91       	pop	r27
     282:	af 91       	pop	r26
     284:	9f 91       	pop	r25
     286:	8f 91       	pop	r24
     288:	7f 91       	pop	r23
     28a:	6f 91       	pop	r22
     28c:	5f 91       	pop	r21
     28e:	4f 91       	pop	r20
     290:	3f 91       	pop	r19
     292:	2f 91       	pop	r18
     294:	0f 90       	pop	r0
     296:	0f be       	out	0x3f, r0	; 63
     298:	0f 90       	pop	r0
     29a:	1f 90       	pop	r1
     29c:	18 95       	reti

0000029e <_Z14i2c_request_cbPc>:
}

void i2c_request_cb(char* buf) {
	// set TI2C_buf_send.str_buf
	//strcpy(buf, "Hello World\n");
	sprintf(buf,"%ld",count);
     29e:	40 91 10 01 	lds	r20, 0x0110
     2a2:	50 91 11 01 	lds	r21, 0x0111
     2a6:	60 91 12 01 	lds	r22, 0x0112
     2aa:	70 91 13 01 	lds	r23, 0x0113
     2ae:	2d b7       	in	r18, 0x3d	; 61
     2b0:	3e b7       	in	r19, 0x3e	; 62
     2b2:	28 50       	subi	r18, 0x08	; 8
     2b4:	30 40       	sbci	r19, 0x00	; 0
     2b6:	0f b6       	in	r0, 0x3f	; 63
     2b8:	f8 94       	cli
     2ba:	3e bf       	out	0x3e, r19	; 62
     2bc:	0f be       	out	0x3f, r0	; 63
     2be:	2d bf       	out	0x3d, r18	; 61
     2c0:	ed b7       	in	r30, 0x3d	; 61
     2c2:	fe b7       	in	r31, 0x3e	; 62
     2c4:	31 96       	adiw	r30, 0x01	; 1
     2c6:	ad b7       	in	r26, 0x3d	; 61
     2c8:	be b7       	in	r27, 0x3e	; 62
     2ca:	12 96       	adiw	r26, 0x02	; 2
     2cc:	9c 93       	st	X, r25
     2ce:	8e 93       	st	-X, r24
     2d0:	11 97       	sbiw	r26, 0x01	; 1
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	93 83       	std	Z+3, r25	; 0x03
     2d8:	82 83       	std	Z+2, r24	; 0x02
     2da:	44 83       	std	Z+4, r20	; 0x04
     2dc:	55 83       	std	Z+5, r21	; 0x05
     2de:	66 83       	std	Z+6, r22	; 0x06
     2e0:	77 83       	std	Z+7, r23	; 0x07
     2e2:	0e 94 cf 06 	call	0xd9e	; 0xd9e <sprintf>
     2e6:	2d b7       	in	r18, 0x3d	; 61
     2e8:	3e b7       	in	r19, 0x3e	; 62
     2ea:	28 5f       	subi	r18, 0xF8	; 248
     2ec:	3f 4f       	sbci	r19, 0xFF	; 255
     2ee:	0f b6       	in	r0, 0x3f	; 63
     2f0:	f8 94       	cli
     2f2:	3e bf       	out	0x3e, r19	; 62
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	2d bf       	out	0x3d, r18	; 61
}
     2f8:	08 95       	ret

000002fa <_Z15i2c_received_cbPc>:
volatile int target_vel = 0;
volatile long timer_count = 0;

void i2c_received_cb(char* str) {
	//motor_set_speed(atoi(str));
	target_vel = atoi(str);
     2fa:	0e 94 a9 06 	call	0xd52	; 0xd52 <atoi>
     2fe:	90 93 0d 01 	sts	0x010D, r25
     302:	80 93 0c 01 	sts	0x010C, r24
}
     306:	08 95       	ret

00000308 <_Z3pidv>:
	// set TI2C_buf_send.str_buf
	//strcpy(buf, "Hello World\n");
	sprintf(buf,"%ld",count);
}

void pid() {
     308:	4f 92       	push	r4
     30a:	5f 92       	push	r5
     30c:	6f 92       	push	r6
     30e:	7f 92       	push	r7
     310:	8f 92       	push	r8
     312:	9f 92       	push	r9
     314:	af 92       	push	r10
     316:	bf 92       	push	r11
     318:	df 92       	push	r13
     31a:	ef 92       	push	r14
     31c:	ff 92       	push	r15
     31e:	0f 93       	push	r16
     320:	1f 93       	push	r17
     322:	cf 93       	push	r28
     324:	df 93       	push	r29
     326:	00 d0       	rcall	.+0      	; 0x328 <_Z3pidv+0x20>
     328:	00 d0       	rcall	.+0      	; 0x32a <_Z3pidv+0x22>
     32a:	cd b7       	in	r28, 0x3d	; 61
     32c:	de b7       	in	r29, 0x3e	; 62
  static double now_diff;   
  static double pre_vel;
  static double now_vel;
  static double pre_enc;	
  static double pre_diff;
  double now_enc = count;
     32e:	60 91 10 01 	lds	r22, 0x0110
     332:	70 91 11 01 	lds	r23, 0x0111
     336:	80 91 12 01 	lds	r24, 0x0112
     33a:	90 91 13 01 	lds	r25, 0x0113
     33e:	0e 94 92 05 	call	0xb24	; 0xb24 <__floatsisf>
     342:	d6 2e       	mov	r13, r22
     344:	e7 2e       	mov	r14, r23
     346:	08 2f       	mov	r16, r24
     348:	f9 2e       	mov	r15, r25

  pre_enc = now_enc;
     34a:	86 2f       	mov	r24, r22
     34c:	9e 2d       	mov	r25, r14
     34e:	a0 2f       	mov	r26, r16
     350:	bf 2d       	mov	r27, r15
     352:	80 93 14 01 	sts	0x0114, r24
     356:	90 93 15 01 	sts	0x0115, r25
     35a:	a0 93 16 01 	sts	0x0116, r26
     35e:	b0 93 17 01 	sts	0x0117, r27
  now_enc = count;
     362:	60 91 10 01 	lds	r22, 0x0110
     366:	70 91 11 01 	lds	r23, 0x0111
     36a:	80 91 12 01 	lds	r24, 0x0112
     36e:	90 91 13 01 	lds	r25, 0x0113
  pre_vel = now_vel;
     372:	80 90 18 01 	lds	r8, 0x0118
     376:	90 90 19 01 	lds	r9, 0x0119
     37a:	a0 90 1a 01 	lds	r10, 0x011A
     37e:	b0 90 1b 01 	lds	r11, 0x011B
     382:	80 92 1c 01 	sts	0x011C, r8
     386:	90 92 1d 01 	sts	0x011D, r9
     38a:	a0 92 1e 01 	sts	0x011E, r10
     38e:	b0 92 1f 01 	sts	0x011F, r11
  static double pre_enc;	
  static double pre_diff;
  double now_enc = count;

  pre_enc = now_enc;
  now_enc = count;
     392:	0e 94 92 05 	call	0xb24	; 0xb24 <__floatsisf>
     396:	9b 01       	movw	r18, r22
     398:	ac 01       	movw	r20, r24
  pre_vel = now_vel;
  now_vel = (pre_enc - now_enc)/dt;
     39a:	8d 2d       	mov	r24, r13
     39c:	9e 2d       	mov	r25, r14
     39e:	a0 2f       	mov	r26, r16
     3a0:	bf 2d       	mov	r27, r15
     3a2:	bc 01       	movw	r22, r24
     3a4:	cd 01       	movw	r24, r26
     3a6:	0e 94 8e 04 	call	0x91c	; 0x91c <__subsf3>
     3aa:	27 e1       	ldi	r18, 0x17	; 23
     3ac:	37 eb       	ldi	r19, 0xB7	; 183
     3ae:	41 ed       	ldi	r20, 0xD1	; 209
     3b0:	58 e3       	ldi	r21, 0x38	; 56
     3b2:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__divsf3>
     3b6:	d6 2e       	mov	r13, r22
     3b8:	47 2e       	mov	r4, r23
     3ba:	f8 2e       	mov	r15, r24
     3bc:	e9 2e       	mov	r14, r25
     3be:	86 2f       	mov	r24, r22
     3c0:	94 2d       	mov	r25, r4
     3c2:	af 2d       	mov	r26, r15
     3c4:	be 2d       	mov	r27, r14
     3c6:	89 83       	std	Y+1, r24	; 0x01
     3c8:	9a 83       	std	Y+2, r25	; 0x02
     3ca:	ab 83       	std	Y+3, r26	; 0x03
     3cc:	bc 83       	std	Y+4, r27	; 0x04
     3ce:	80 93 18 01 	sts	0x0118, r24
     3d2:	90 93 19 01 	sts	0x0119, r25
     3d6:	a0 93 1a 01 	sts	0x011A, r26
     3da:	b0 93 1b 01 	sts	0x011B, r27
  
  pre_diff = now_diff;
     3de:	80 90 20 01 	lds	r8, 0x0120
     3e2:	90 90 21 01 	lds	r9, 0x0121
     3e6:	a0 90 22 01 	lds	r10, 0x0122
     3ea:	b0 90 23 01 	lds	r11, 0x0123
     3ee:	80 92 24 01 	sts	0x0124, r8
     3f2:	90 92 25 01 	sts	0x0125, r9
     3f6:	a0 92 26 01 	sts	0x0126, r10
     3fa:	b0 92 27 01 	sts	0x0127, r11
  now_diff = target_vel - now_vel;
     3fe:	60 91 0c 01 	lds	r22, 0x010C
     402:	70 91 0d 01 	lds	r23, 0x010D
     406:	88 27       	eor	r24, r24
     408:	77 fd       	sbrc	r23, 7
     40a:	80 95       	com	r24
     40c:	98 2f       	mov	r25, r24
     40e:	0e 94 92 05 	call	0xb24	; 0xb24 <__floatsisf>
     412:	0d 2d       	mov	r16, r13
     414:	14 2d       	mov	r17, r4
     416:	2f 2d       	mov	r18, r15
     418:	3e 2d       	mov	r19, r14
     41a:	a9 01       	movw	r20, r18
     41c:	98 01       	movw	r18, r16
     41e:	0e 94 8e 04 	call	0x91c	; 0x91c <__subsf3>
     422:	f6 2e       	mov	r15, r22
     424:	07 2f       	mov	r16, r23
     426:	d8 2e       	mov	r13, r24
     428:	e9 2e       	mov	r14, r25
     42a:	86 2f       	mov	r24, r22
     42c:	90 2f       	mov	r25, r16
     42e:	ad 2d       	mov	r26, r13
     430:	be 2d       	mov	r27, r14
     432:	80 93 20 01 	sts	0x0120, r24
     436:	90 93 21 01 	sts	0x0121, r25
     43a:	a0 93 22 01 	sts	0x0122, r26
     43e:	b0 93 23 01 	sts	0x0123, r27
  if(now_diff>320)power=max_pow;
     442:	bc 01       	movw	r22, r24
     444:	cd 01       	movw	r24, r26
     446:	20 e0       	ldi	r18, 0x00	; 0
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	40 ea       	ldi	r20, 0xA0	; 160
     44c:	53 e4       	ldi	r21, 0x43	; 67
     44e:	0e 94 42 06 	call	0xc84	; 0xc84 <__gesf2>
     452:	18 16       	cp	r1, r24
     454:	6c f4       	brge	.+26     	; 0x470 <_Z3pidv+0x168>
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	a8 e4       	ldi	r26, 0x48	; 72
     45c:	b2 e4       	ldi	r27, 0x42	; 66
     45e:	80 93 28 01 	sts	0x0128, r24
     462:	90 93 29 01 	sts	0x0129, r25
     466:	a0 93 2a 01 	sts	0x012A, r26
     46a:	b0 93 2b 01 	sts	0x012B, r27
     46e:	e2 c0       	rjmp	.+452    	; 0x634 <_Z3pidv+0x32c>
  else if(now_diff<-320)power=-max_pow;
     470:	8f 2d       	mov	r24, r15
     472:	90 2f       	mov	r25, r16
     474:	ad 2d       	mov	r26, r13
     476:	be 2d       	mov	r27, r14
     478:	bc 01       	movw	r22, r24
     47a:	cd 01       	movw	r24, r26
     47c:	20 e0       	ldi	r18, 0x00	; 0
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	40 ea       	ldi	r20, 0xA0	; 160
     482:	53 ec       	ldi	r21, 0xC3	; 195
     484:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__cmpsf2>
     488:	88 23       	and	r24, r24
     48a:	6c f4       	brge	.+26     	; 0x4a6 <_Z3pidv+0x19e>
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	a8 e4       	ldi	r26, 0x48	; 72
     492:	b2 ec       	ldi	r27, 0xC2	; 194
     494:	80 93 28 01 	sts	0x0128, r24
     498:	90 93 29 01 	sts	0x0129, r25
     49c:	a0 93 2a 01 	sts	0x012A, r26
     4a0:	b0 93 2b 01 	sts	0x012B, r27
     4a4:	c7 c0       	rjmp	.+398    	; 0x634 <_Z3pidv+0x32c>
  else{
  integral += now_diff * dt;
     4a6:	8f 2d       	mov	r24, r15
     4a8:	90 2f       	mov	r25, r16
     4aa:	ad 2d       	mov	r26, r13
     4ac:	be 2d       	mov	r27, r14
     4ae:	bc 01       	movw	r22, r24
     4b0:	cd 01       	movw	r24, r26
     4b2:	27 e1       	ldi	r18, 0x17	; 23
     4b4:	37 eb       	ldi	r19, 0xB7	; 183
     4b6:	41 ed       	ldi	r20, 0xD1	; 209
     4b8:	58 e3       	ldi	r21, 0x38	; 56
     4ba:	0e 94 46 06 	call	0xc8c	; 0xc8c <__mulsf3>
     4be:	20 91 2c 01 	lds	r18, 0x012C
     4c2:	30 91 2d 01 	lds	r19, 0x012D
     4c6:	40 91 2e 01 	lds	r20, 0x012E
     4ca:	50 91 2f 01 	lds	r21, 0x012F
     4ce:	0e 94 8f 04 	call	0x91e	; 0x91e <__addsf3>
     4d2:	26 2f       	mov	r18, r22
     4d4:	37 2f       	mov	r19, r23
     4d6:	f8 2f       	mov	r31, r24
     4d8:	e9 2f       	mov	r30, r25
     4da:	46 2f       	mov	r20, r22
     4dc:	57 2f       	mov	r21, r23
     4de:	68 2f       	mov	r22, r24
     4e0:	79 2f       	mov	r23, r25
     4e2:	40 93 2c 01 	sts	0x012C, r20
     4e6:	50 93 2d 01 	sts	0x012D, r21
     4ea:	60 93 2e 01 	sts	0x012E, r22
     4ee:	70 93 2f 01 	sts	0x012F, r23

  p = KP * now_diff;
  i = KI * integral ;
     4f2:	82 2f       	mov	r24, r18
     4f4:	93 2f       	mov	r25, r19
     4f6:	af 2f       	mov	r26, r31
     4f8:	be 2f       	mov	r27, r30
     4fa:	bc 01       	movw	r22, r24
     4fc:	cd 01       	movw	r24, r26
     4fe:	2a e0       	ldi	r18, 0x0A	; 10
     500:	37 ed       	ldi	r19, 0xD7	; 215
     502:	43 e2       	ldi	r20, 0x23	; 35
     504:	5c e3       	ldi	r21, 0x3C	; 60
     506:	0e 94 46 06 	call	0xc8c	; 0xc8c <__mulsf3>
     50a:	9b 01       	movw	r18, r22
     50c:	ac 01       	movw	r20, r24
  d = KD * (now_diff - pre_diff) /dt;
  
  //power = power+ p + i + d;
  power = p + i + d;
     50e:	8f 2d       	mov	r24, r15
     510:	90 2f       	mov	r25, r16
     512:	ad 2d       	mov	r26, r13
     514:	be 2d       	mov	r27, r14
     516:	bc 01       	movw	r22, r24
     518:	cd 01       	movw	r24, r26
     51a:	0e 94 8f 04 	call	0x91e	; 0x91e <__addsf3>
     51e:	2b 01       	movw	r4, r22
     520:	3c 01       	movw	r6, r24
  else{
  integral += now_diff * dt;

  p = KP * now_diff;
  i = KI * integral ;
  d = KD * (now_diff - pre_diff) /dt;
     522:	8f 2d       	mov	r24, r15
     524:	90 2f       	mov	r25, r16
     526:	ad 2d       	mov	r26, r13
     528:	be 2d       	mov	r27, r14
     52a:	bc 01       	movw	r22, r24
     52c:	cd 01       	movw	r24, r26
     52e:	a5 01       	movw	r20, r10
     530:	94 01       	movw	r18, r8
     532:	0e 94 8e 04 	call	0x91c	; 0x91c <__subsf3>
     536:	2a e0       	ldi	r18, 0x0A	; 10
     538:	37 ed       	ldi	r19, 0xD7	; 215
     53a:	43 e2       	ldi	r20, 0x23	; 35
     53c:	5c e3       	ldi	r21, 0x3C	; 60
     53e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__mulsf3>
     542:	27 e1       	ldi	r18, 0x17	; 23
     544:	37 eb       	ldi	r19, 0xB7	; 183
     546:	41 ed       	ldi	r20, 0xD1	; 209
     548:	58 e3       	ldi	r21, 0x38	; 56
     54a:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__divsf3>
     54e:	9b 01       	movw	r18, r22
     550:	ac 01       	movw	r20, r24
  
  //power = power+ p + i + d;
  power = p + i + d;
     552:	c3 01       	movw	r24, r6
     554:	b2 01       	movw	r22, r4
     556:	0e 94 8f 04 	call	0x91e	; 0x91e <__addsf3>
     55a:	f6 2e       	mov	r15, r22
     55c:	07 2f       	mov	r16, r23
     55e:	d8 2e       	mov	r13, r24
     560:	e9 2e       	mov	r14, r25
     562:	86 2f       	mov	r24, r22
     564:	90 2f       	mov	r25, r16
     566:	ad 2d       	mov	r26, r13
     568:	be 2d       	mov	r27, r14
     56a:	80 93 28 01 	sts	0x0128, r24
     56e:	90 93 29 01 	sts	0x0129, r25
     572:	a0 93 2a 01 	sts	0x012A, r26
     576:	b0 93 2b 01 	sts	0x012B, r27
  if(fabs(target_vel)<0.05 && fabs(now_vel)<0.01 /*&&fabs(power) < 10*/)
     57a:	60 91 0c 01 	lds	r22, 0x010C
     57e:	70 91 0d 01 	lds	r23, 0x010D
     582:	88 27       	eor	r24, r24
     584:	77 fd       	sbrc	r23, 7
     586:	80 95       	com	r24
     588:	98 2f       	mov	r25, r24
     58a:	0e 94 92 05 	call	0xb24	; 0xb24 <__floatsisf>
     58e:	9f 77       	andi	r25, 0x7F	; 127
     590:	2d ec       	ldi	r18, 0xCD	; 205
     592:	3c ec       	ldi	r19, 0xCC	; 204
     594:	4c e4       	ldi	r20, 0x4C	; 76
     596:	5d e3       	ldi	r21, 0x3D	; 61
     598:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__cmpsf2>
     59c:	88 23       	and	r24, r24
     59e:	0c f0       	brlt	.+2      	; 0x5a2 <_Z3pidv+0x29a>
     5a0:	6b c0       	rjmp	.+214    	; 0x678 <_Z3pidv+0x370>
     5a2:	69 81       	ldd	r22, Y+1	; 0x01
     5a4:	7a 81       	ldd	r23, Y+2	; 0x02
     5a6:	8b 81       	ldd	r24, Y+3	; 0x03
     5a8:	9c 81       	ldd	r25, Y+4	; 0x04
     5aa:	9f 77       	andi	r25, 0x7F	; 127
     5ac:	2a e0       	ldi	r18, 0x0A	; 10
     5ae:	37 ed       	ldi	r19, 0xD7	; 215
     5b0:	43 e2       	ldi	r20, 0x23	; 35
     5b2:	5c e3       	ldi	r21, 0x3C	; 60
     5b4:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__cmpsf2>
     5b8:	88 23       	and	r24, r24
     5ba:	0c f0       	brlt	.+2      	; 0x5be <_Z3pidv+0x2b6>
     5bc:	5d c0       	rjmp	.+186    	; 0x678 <_Z3pidv+0x370>
  {
    integral = 0;
     5be:	80 e0       	ldi	r24, 0x00	; 0
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	dc 01       	movw	r26, r24
     5c4:	80 93 2c 01 	sts	0x012C, r24
     5c8:	90 93 2d 01 	sts	0x012D, r25
     5cc:	a0 93 2e 01 	sts	0x012E, r26
     5d0:	b0 93 2f 01 	sts	0x012F, r27
    power = 0;
     5d4:	80 93 28 01 	sts	0x0128, r24
     5d8:	90 93 29 01 	sts	0x0129, r25
     5dc:	a0 93 2a 01 	sts	0x012A, r26
     5e0:	b0 93 2b 01 	sts	0x012B, r27
     5e4:	27 c0       	rjmp	.+78     	; 0x634 <_Z3pidv+0x32c>

  }
  else if(max_pow < power )
    power = max_pow;
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	a8 e4       	ldi	r26, 0x48	; 72
     5ec:	b2 e4       	ldi	r27, 0x42	; 66
     5ee:	80 93 28 01 	sts	0x0128, r24
     5f2:	90 93 29 01 	sts	0x0129, r25
     5f6:	a0 93 2a 01 	sts	0x012A, r26
     5fa:	b0 93 2b 01 	sts	0x012B, r27
     5fe:	1a c0       	rjmp	.+52     	; 0x634 <_Z3pidv+0x32c>
  else if(power < -max_pow)
     600:	8f 2d       	mov	r24, r15
     602:	90 2f       	mov	r25, r16
     604:	ad 2d       	mov	r26, r13
     606:	be 2d       	mov	r27, r14
     608:	bc 01       	movw	r22, r24
     60a:	cd 01       	movw	r24, r26
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	48 e4       	ldi	r20, 0x48	; 72
     612:	52 ec       	ldi	r21, 0xC2	; 194
     614:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__cmpsf2>
     618:	88 23       	and	r24, r24
     61a:	64 f4       	brge	.+24     	; 0x634 <_Z3pidv+0x32c>
    power = -max_pow;
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	a8 e4       	ldi	r26, 0x48	; 72
     622:	b2 ec       	ldi	r27, 0xC2	; 194
     624:	80 93 28 01 	sts	0x0128, r24
     628:	90 93 29 01 	sts	0x0129, r25
     62c:	a0 93 2a 01 	sts	0x012A, r26
     630:	b0 93 2b 01 	sts	0x012B, r27
  }
 //return power;  
	motor_set_speed(power);
     634:	60 91 28 01 	lds	r22, 0x0128
     638:	70 91 29 01 	lds	r23, 0x0129
     63c:	80 91 2a 01 	lds	r24, 0x012A
     640:	90 91 2b 01 	lds	r25, 0x012B
     644:	0e 94 5f 05 	call	0xabe	; 0xabe <__fixsfsi>
     648:	dc 01       	movw	r26, r24
     64a:	cb 01       	movw	r24, r22
     64c:	0e 94 09 04 	call	0x812	; 0x812 <_Z15motor_set_speedi>
}
     650:	0f 90       	pop	r0
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
     656:	0f 90       	pop	r0
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	1f 91       	pop	r17
     65e:	0f 91       	pop	r16
     660:	ff 90       	pop	r15
     662:	ef 90       	pop	r14
     664:	df 90       	pop	r13
     666:	bf 90       	pop	r11
     668:	af 90       	pop	r10
     66a:	9f 90       	pop	r9
     66c:	8f 90       	pop	r8
     66e:	7f 90       	pop	r7
     670:	6f 90       	pop	r6
     672:	5f 90       	pop	r5
     674:	4f 90       	pop	r4
     676:	08 95       	ret
  {
    integral = 0;
    power = 0;

  }
  else if(max_pow < power )
     678:	8f 2d       	mov	r24, r15
     67a:	90 2f       	mov	r25, r16
     67c:	ad 2d       	mov	r26, r13
     67e:	be 2d       	mov	r27, r14
     680:	bc 01       	movw	r22, r24
     682:	cd 01       	movw	r24, r26
     684:	20 e0       	ldi	r18, 0x00	; 0
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	48 e4       	ldi	r20, 0x48	; 72
     68a:	52 e4       	ldi	r21, 0x42	; 66
     68c:	0e 94 42 06 	call	0xc84	; 0xc84 <__gesf2>
     690:	18 16       	cp	r1, r24
     692:	0c f0       	brlt	.+2      	; 0x696 <_Z3pidv+0x38e>
     694:	b5 cf       	rjmp	.-150    	; 0x600 <_Z3pidv+0x2f8>
     696:	a7 cf       	rjmp	.-178    	; 0x5e6 <_Z3pidv+0x2de>

00000698 <__vector_4>:
  }
 //return power;  
	motor_set_speed(power);
}

ISR(PCINT1_vect, ISR_NOBLOCK){//encorder
     698:	78 94       	sei
     69a:	1f 92       	push	r1
     69c:	0f 92       	push	r0
     69e:	0f b6       	in	r0, 0x3f	; 63
     6a0:	0f 92       	push	r0
     6a2:	11 24       	eor	r1, r1
     6a4:	2f 93       	push	r18
     6a6:	3f 93       	push	r19
     6a8:	8f 93       	push	r24
     6aa:	9f 93       	push	r25
     6ac:	af 93       	push	r26
     6ae:	bf 93       	push	r27
	if((PINC & (1 << PINC0)) ^ ((PINC & (1 << PINC1))>> 1))--count;
     6b0:	26 b1       	in	r18, 0x06	; 6
     6b2:	86 b1       	in	r24, 0x06	; 6
     6b4:	30 e0       	ldi	r19, 0x00	; 0
     6b6:	21 70       	andi	r18, 0x01	; 1
     6b8:	30 70       	andi	r19, 0x00	; 0
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	82 70       	andi	r24, 0x02	; 2
     6be:	90 70       	andi	r25, 0x00	; 0
     6c0:	95 95       	asr	r25
     6c2:	87 95       	ror	r24
     6c4:	28 17       	cp	r18, r24
     6c6:	39 07       	cpc	r19, r25
     6c8:	a1 f0       	breq	.+40     	; 0x6f2 <__vector_4+0x5a>
     6ca:	80 91 10 01 	lds	r24, 0x0110
     6ce:	90 91 11 01 	lds	r25, 0x0111
     6d2:	a0 91 12 01 	lds	r26, 0x0112
     6d6:	b0 91 13 01 	lds	r27, 0x0113
     6da:	01 97       	sbiw	r24, 0x01	; 1
     6dc:	a1 09       	sbc	r26, r1
     6de:	b1 09       	sbc	r27, r1
     6e0:	80 93 10 01 	sts	0x0110, r24
     6e4:	90 93 11 01 	sts	0x0111, r25
     6e8:	a0 93 12 01 	sts	0x0112, r26
     6ec:	b0 93 13 01 	sts	0x0113, r27
     6f0:	13 c0       	rjmp	.+38     	; 0x718 <__vector_4+0x80>
	else ++count;	
     6f2:	80 91 10 01 	lds	r24, 0x0110
     6f6:	90 91 11 01 	lds	r25, 0x0111
     6fa:	a0 91 12 01 	lds	r26, 0x0112
     6fe:	b0 91 13 01 	lds	r27, 0x0113
     702:	01 96       	adiw	r24, 0x01	; 1
     704:	a1 1d       	adc	r26, r1
     706:	b1 1d       	adc	r27, r1
     708:	80 93 10 01 	sts	0x0110, r24
     70c:	90 93 11 01 	sts	0x0111, r25
     710:	a0 93 12 01 	sts	0x0112, r26
     714:	b0 93 13 01 	sts	0x0113, r27
}
     718:	bf 91       	pop	r27
     71a:	af 91       	pop	r26
     71c:	9f 91       	pop	r25
     71e:	8f 91       	pop	r24
     720:	3f 91       	pop	r19
     722:	2f 91       	pop	r18
     724:	0f 90       	pop	r0
     726:	0f be       	out	0x3f, r0	; 63
     728:	0f 90       	pop	r0
     72a:	1f 90       	pop	r1
     72c:	18 95       	reti

0000072e <__vector_11>:


ISR(TIMER1_COMPA_vect){//PID
     72e:	1f 92       	push	r1
     730:	0f 92       	push	r0
     732:	0f b6       	in	r0, 0x3f	; 63
     734:	0f 92       	push	r0
     736:	11 24       	eor	r1, r1
	if (timer_count > (0.1 / 0.00325)) {
		pid();	
		timer_count = 0;
	} 
	timer_count ++;		
}
     738:	0f 90       	pop	r0
     73a:	0f be       	out	0x3f, r0	; 63
     73c:	0f 90       	pop	r0
     73e:	1f 90       	pop	r1
     740:	18 95       	reti

00000742 <_Z5setupv>:


void setup (){
	
	//ÉsÉìïœâªäÑÇËçûÇ›ãñâ¬ÅiPCINT8~15Åj
	PCICR |= (1<<PCIE1);
     742:	e8 e6       	ldi	r30, 0x68	; 104
     744:	f0 e0       	ldi	r31, 0x00	; 0
     746:	80 81       	ld	r24, Z
     748:	82 60       	ori	r24, 0x02	; 2
     74a:	80 83       	st	Z, r24
	//ÉsÉìïœâªäÑÇËçûÇ›ãñâ¬ÅiPCINT8Åj
	PCMSK1 |= (1<<PCINT8);
     74c:	ec e6       	ldi	r30, 0x6C	; 108
     74e:	f0 e0       	ldi	r31, 0x00	; 0
     750:	80 81       	ld	r24, Z
     752:	81 60       	ori	r24, 0x01	; 1
     754:	80 83       	st	Z, r24
	motor_init();
     756:	0e 94 fe 03 	call	0x7fc	; 0x7fc <_Z10motor_initv>
	motor_set_speed(pw);
     75a:	80 91 0e 01 	lds	r24, 0x010E
     75e:	90 91 0f 01 	lds	r25, 0x010F
     762:	0e 94 09 04 	call	0x812	; 0x812 <_Z15motor_set_speedi>
	
	DDRC = 0x00;
     766:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x00;
     768:	18 b8       	out	0x08, r1	; 8
	
	// LED of addresses 0x10~ 0x1F 0~F -> 0~15
	PORTD |= (0b00001111 & I2C_ADDR);
     76a:	58 9a       	sbi	0x0b, 0	; 11
	//TIMSK1 = 0b00100000;
	//ICR1 = 64999; // 3.25ms // 20MHz

	//sei();
	//motor_set_speed(30);
	motor_set_speed(-30);
     76c:	82 ee       	ldi	r24, 0xE2	; 226
     76e:	9f ef       	ldi	r25, 0xFF	; 255
     770:	0e 94 09 04 	call	0x812	; 0x812 <_Z15motor_set_speedi>
	TI2C_init_sync(I2C_ADDR,i2c_received_cb, i2c_request_cb);
     774:	81 e2       	ldi	r24, 0x21	; 33
     776:	6d e7       	ldi	r22, 0x7D	; 125
     778:	71 e0       	ldi	r23, 0x01	; 1
     77a:	4f e4       	ldi	r20, 0x4F	; 79
     77c:	51 e0       	ldi	r21, 0x01	; 1
     77e:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <_Z14TI2C_init_synchPFvPcES1_>
}
     782:	08 95       	ret

00000784 <main>:


int main(void)
{
	setup();
     784:	0e 94 a1 03 	call	0x742	; 0x742 <_Z5setupv>
	double i = 0;
     788:	00 e0       	ldi	r16, 0x00	; 0
     78a:	10 e0       	ldi	r17, 0x00	; 0
     78c:	d0 e0       	ldi	r29, 0x00	; 0
     78e:	c0 e0       	ldi	r28, 0x00	; 0
	
    /* Replace with your application code */
    while (1) 
    {
		while( !(TWCR & (1 << TWINT))){
     790:	0f 2e       	mov	r0, r31
     792:	fc eb       	ldi	r31, 0xBC	; 188
     794:	cf 2e       	mov	r12, r31
     796:	dd 24       	eor	r13, r13
     798:	f0 2d       	mov	r31, r0
			if (i > 10){
				pid();
				i = 0;
     79a:	ff 24       	eor	r15, r15
     79c:	28 c0       	rjmp	.+80     	; 0x7ee <main+0x6a>
	
    /* Replace with your application code */
    while (1) 
    {
		while( !(TWCR & (1 << TWINT))){
			if (i > 10){
     79e:	80 2f       	mov	r24, r16
     7a0:	91 2f       	mov	r25, r17
     7a2:	ad 2f       	mov	r26, r29
     7a4:	bc 2f       	mov	r27, r28
     7a6:	bc 01       	movw	r22, r24
     7a8:	cd 01       	movw	r24, r26
     7aa:	20 e0       	ldi	r18, 0x00	; 0
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	40 e2       	ldi	r20, 0x20	; 32
     7b0:	51 e4       	ldi	r21, 0x41	; 65
     7b2:	0e 94 42 06 	call	0xc84	; 0xc84 <__gesf2>
     7b6:	18 16       	cp	r1, r24
     7b8:	34 f4       	brge	.+12     	; 0x7c6 <main+0x42>
				pid();
     7ba:	0e 94 84 01 	call	0x308	; 0x308 <_Z3pidv>
				i = 0;
     7be:	0f 2d       	mov	r16, r15
     7c0:	1f 2d       	mov	r17, r15
     7c2:	df 2d       	mov	r29, r15
     7c4:	cf 2d       	mov	r28, r15
			}
			i++;
     7c6:	80 2f       	mov	r24, r16
     7c8:	91 2f       	mov	r25, r17
     7ca:	ad 2f       	mov	r26, r29
     7cc:	bc 2f       	mov	r27, r28
     7ce:	bc 01       	movw	r22, r24
     7d0:	cd 01       	movw	r24, r26
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e8       	ldi	r20, 0x80	; 128
     7d8:	5f e3       	ldi	r21, 0x3F	; 63
     7da:	0e 94 8f 04 	call	0x91e	; 0x91e <__addsf3>
     7de:	06 2f       	mov	r16, r22
     7e0:	17 2f       	mov	r17, r23
     7e2:	d8 2f       	mov	r29, r24
     7e4:	c9 2f       	mov	r28, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7e6:	82 e4       	ldi	r24, 0x42	; 66
     7e8:	8a 95       	dec	r24
     7ea:	f1 f7       	brne	.-4      	; 0x7e8 <main+0x64>
     7ec:	00 c0       	rjmp	.+0      	; 0x7ee <main+0x6a>
	double i = 0;
	
    /* Replace with your application code */
    while (1) 
    {
		while( !(TWCR & (1 << TWINT))){
     7ee:	f6 01       	movw	r30, r12
     7f0:	80 81       	ld	r24, Z
     7f2:	88 23       	and	r24, r24
     7f4:	a4 f6       	brge	.-88     	; 0x79e <main+0x1a>
				i = 0;
			}
			i++;
			_delay_us(10);
		}
		I2C_body();
     7f6:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z8I2C_bodyv>
{
	setup();
	double i = 0;
	
    /* Replace with your application code */
    while (1) 
     7fa:	f9 cf       	rjmp	.-14     	; 0x7ee <main+0x6a>

000007fc <_Z10motor_initv>:
};

int motor_init(void)
{
	//setup
	DDRD |= 0b11100000;
     7fc:	8a b1       	in	r24, 0x0a	; 10
     7fe:	80 6e       	ori	r24, 0xE0	; 224
     800:	8a b9       	out	0x0a, r24	; 10
	
	TCCR0A = 0b10100011;  //highspeedPWM
     802:	83 ea       	ldi	r24, 0xA3	; 163
     804:	84 bd       	out	0x24, r24	; 36
	
	//TCCR0B = 0b00000010;  //1/8,Top=OVF
     806:	82 e0       	ldi	r24, 0x02	; 2
     808:	85 bd       	out	0x25, r24	; 37
	TCCR0B = 0b00000100;  // 1/256
     80a:	08 95       	ret

0000080c <_Z7pwm_mapi>:
}

int pwm_map (int duty){
     80c:	88 0f       	add	r24, r24
     80e:	99 1f       	adc	r25, r25
	return TMR0INI + (int)(TOP/100*duty); //duty=0~100
     810:	08 95       	ret

00000812 <_Z15motor_set_speedi>:
}
	
	
	
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	ec 01       	movw	r28, r24
int motor_set_speed (int power) {
	
     818:	dd 23       	and	r29, r29
     81a:	24 f4       	brge	.+8      	; 0x824 <_Z15motor_set_speedi+0x12>
     81c:	88 27       	eor	r24, r24
     81e:	99 27       	eor	r25, r25
     820:	8c 1b       	sub	r24, r28
     822:	9d 0b       	sbc	r25, r29
     824:	0e 94 06 04 	call	0x80c	; 0x80c <_Z7pwm_mapi>
     828:	87 bd       	out	0x27, r24	; 39
     	OCR0A = pwm_map(abs(power));
     82a:	88 bd       	out	0x28, r24	; 40
	    OCR0B = pwm_map(abs(power));

     82c:	dd 23       	and	r29, r29
     82e:	14 f4       	brge	.+4      	; 0x834 <_Z15motor_set_speedi+0x22>
		if (power < 0){
			//PORTD = 0b01100000;	  //PHASE=high
     830:	5f 98       	cbi	0x0b, 7	; 11
     832:	04 c0       	rjmp	.+8      	; 0x83c <_Z15motor_set_speedi+0x2a>
			PORTD &= 0b01111111;
		}
		
     834:	1c 16       	cp	r1, r28
     836:	1d 06       	cpc	r1, r29
     838:	0c f4       	brge	.+2      	; 0x83c <_Z15motor_set_speedi+0x2a>
		else if(power > 0){
			//PORTD = 0b11100000;   //PHASE=low
     83a:	5f 9a       	sbi	0x0b, 7	; 11
			PORTD |= 0b10000000;
		}
				
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	08 95       	ret

00000842 <_Z14TI2C_requestedv>:

void TI2C_requested() //Å®master
{
	static int i = 0;
	
	if (i == 0){
     842:	80 91 34 05 	lds	r24, 0x0534
     846:	90 91 35 05 	lds	r25, 0x0535
     84a:	00 97       	sbiw	r24, 0x00	; 0
     84c:	39 f4       	brne	.+14     	; 0x85c <_Z14TI2C_requestedv+0x1a>
		// initialize
		TI2C_req_cb(TI2C_buf_send.str_buf);
     84e:	e0 91 30 01 	lds	r30, 0x0130
     852:	f0 91 31 01 	lds	r31, 0x0131
     856:	84 e3       	ldi	r24, 0x34	; 52
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	09 95       	icall
	}
	// send data
	if (TI2C_buf_send.uint_buf[i] == '\0') { 
     85c:	e0 91 34 05 	lds	r30, 0x0534
     860:	f0 91 35 05 	lds	r31, 0x0535
     864:	ec 5c       	subi	r30, 0xCC	; 204
     866:	fe 4f       	sbci	r31, 0xFE	; 254
     868:	80 81       	ld	r24, Z
     86a:	88 23       	and	r24, r24
     86c:	41 f4       	brne	.+16     	; 0x87e <_Z14TI2C_requestedv+0x3c>
void I2C_main();
void I2C_body();

inline void __attribute__((always_inline)) I2C_transmitByte(uint8_t data)
{
	TWDR = data;
     86e:	84 e2       	ldi	r24, 0x24	; 36
     870:	80 93 bb 00 	sts	0x00BB, r24
		I2C_transmitByte(postfix);
		i = 0;
     874:	10 92 35 05 	sts	0x0535, r1
     878:	10 92 34 05 	sts	0x0534, r1
     87c:	08 95       	ret
     87e:	80 93 bb 00 	sts	0x00BB, r24
	} else {
		I2C_transmitByte(TI2C_buf_send.uint_buf[i]);
		i++;
     882:	80 91 34 05 	lds	r24, 0x0534
     886:	90 91 35 05 	lds	r25, 0x0535
     88a:	01 96       	adiw	r24, 0x01	; 1
     88c:	90 93 35 05 	sts	0x0535, r25
     890:	80 93 34 05 	sts	0x0534, r24
     894:	08 95       	ret

00000896 <_Z9TI2C_inithPFvPcES1_>:
void (*TI2C_recv_cb)(char*);
void (*TI2C_req_cb)(char*);


void TI2C_init(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
     896:	70 93 33 01 	sts	0x0133, r23
     89a:	60 93 32 01 	sts	0x0132, r22
	TI2C_req_cb = req;
     89e:	50 93 31 01 	sts	0x0131, r21
     8a2:	40 93 30 01 	sts	0x0130, r20
	I2C_init(address);
     8a6:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z8I2C_inith>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
     8aa:	83 e7       	ldi	r24, 0x73	; 115
     8ac:	94 e0       	ldi	r25, 0x04	; 4
     8ae:	61 e2       	ldi	r22, 0x21	; 33
     8b0:	74 e0       	ldi	r23, 0x04	; 4
     8b2:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
     8b6:	08 95       	ret

000008b8 <_Z14TI2C_init_synchPFvPcES1_>:

void TI2C_init_sync(uint8_t address, void (*recv)(char*), void (*req)(char*)){
	TI2C_recv_cb = recv;
     8b8:	70 93 33 01 	sts	0x0133, r23
     8bc:	60 93 32 01 	sts	0x0132, r22
	TI2C_req_cb = req;
     8c0:	50 93 31 01 	sts	0x0131, r21
     8c4:	40 93 30 01 	sts	0x0130, r20
	I2C_init_sync(address);
     8c8:	0e 94 65 00 	call	0xca	; 0xca <_Z13I2C_init_synch>
	I2C_setCallbacks(TI2C_char_received, TI2C_requested);
     8cc:	83 e7       	ldi	r24, 0x73	; 115
     8ce:	94 e0       	ldi	r25, 0x04	; 4
     8d0:	61 e2       	ldi	r22, 0x21	; 33
     8d2:	74 e0       	ldi	r23, 0x04	; 4
     8d4:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z16I2C_setCallbacksPFvhEPFvvE>
}
     8d8:	08 95       	ret

000008da <_Z13TI2C_receivedPc>:


void TI2C_received(char *str) //slave <-
{
	TI2C_recv_cb(str);
     8da:	e0 91 32 01 	lds	r30, 0x0132
     8de:	f0 91 33 01 	lds	r31, 0x0133
     8e2:	09 95       	icall
}
     8e4:	08 95       	ret

000008e6 <_Z18TI2C_char_receivedh>:

void TI2C_char_received(uint8_t received_data) {
	//DDRC = 0b00000010;
	static int i = 0;
	// ÉfÅ[É^Ç…í«â¡
	TI2C_buf.uint_buf[i] = received_data;
     8e6:	20 91 36 05 	lds	r18, 0x0536
     8ea:	30 91 37 05 	lds	r19, 0x0537
     8ee:	f9 01       	movw	r30, r18
     8f0:	ec 5c       	subi	r30, 0xCC	; 204
     8f2:	fc 4f       	sbci	r31, 0xFC	; 252
     8f4:	80 83       	st	Z, r24
	// postfixÇ™óàÇΩèÍçáÇ…ÉRÅ[ÉãÉoÉbÉNÇåƒÇÒÇ≈èâä˙âª
	if (TI2C_buf.str_buf[i] == postfix) {
     8f6:	84 32       	cpi	r24, 0x24	; 36
     8f8:	51 f4       	brne	.+20     	; 0x90e <__stack+0xf>
		TI2C_buf.str_buf[i] = '\0';
     8fa:	84 e3       	ldi	r24, 0x34	; 52
     8fc:	93 e0       	ldi	r25, 0x03	; 3
     8fe:	10 82       	st	Z, r1
		TI2C_received(TI2C_buf.str_buf);
     900:	0e 94 6d 04 	call	0x8da	; 0x8da <_Z13TI2C_receivedPc>
		i = 0;
     904:	10 92 37 05 	sts	0x0537, r1
     908:	10 92 36 05 	sts	0x0536, r1
     90c:	08 95       	ret
	} else {
		i++;
     90e:	2f 5f       	subi	r18, 0xFF	; 255
     910:	3f 4f       	sbci	r19, 0xFF	; 255
     912:	30 93 37 05 	sts	0x0537, r19
     916:	20 93 36 05 	sts	0x0536, r18
     91a:	08 95       	ret

0000091c <__subsf3>:
     91c:	50 58       	subi	r21, 0x80	; 128

0000091e <__addsf3>:
     91e:	bb 27       	eor	r27, r27
     920:	aa 27       	eor	r26, r26
     922:	0e d0       	rcall	.+28     	; 0x940 <__addsf3x>
     924:	75 c1       	rjmp	.+746    	; 0xc10 <__fp_round>
     926:	66 d1       	rcall	.+716    	; 0xbf4 <__fp_pscA>
     928:	30 f0       	brcs	.+12     	; 0x936 <__addsf3+0x18>
     92a:	6b d1       	rcall	.+726    	; 0xc02 <__fp_pscB>
     92c:	20 f0       	brcs	.+8      	; 0x936 <__addsf3+0x18>
     92e:	31 f4       	brne	.+12     	; 0x93c <__addsf3+0x1e>
     930:	9f 3f       	cpi	r25, 0xFF	; 255
     932:	11 f4       	brne	.+4      	; 0x938 <__addsf3+0x1a>
     934:	1e f4       	brtc	.+6      	; 0x93c <__addsf3+0x1e>
     936:	5b c1       	rjmp	.+694    	; 0xbee <__fp_nan>
     938:	0e f4       	brtc	.+2      	; 0x93c <__addsf3+0x1e>
     93a:	e0 95       	com	r30
     93c:	e7 fb       	bst	r30, 7
     93e:	51 c1       	rjmp	.+674    	; 0xbe2 <__fp_inf>

00000940 <__addsf3x>:
     940:	e9 2f       	mov	r30, r25
     942:	77 d1       	rcall	.+750    	; 0xc32 <__fp_split3>
     944:	80 f3       	brcs	.-32     	; 0x926 <__addsf3+0x8>
     946:	ba 17       	cp	r27, r26
     948:	62 07       	cpc	r22, r18
     94a:	73 07       	cpc	r23, r19
     94c:	84 07       	cpc	r24, r20
     94e:	95 07       	cpc	r25, r21
     950:	18 f0       	brcs	.+6      	; 0x958 <__addsf3x+0x18>
     952:	71 f4       	brne	.+28     	; 0x970 <__addsf3x+0x30>
     954:	9e f5       	brtc	.+102    	; 0x9bc <__addsf3x+0x7c>
     956:	8f c1       	rjmp	.+798    	; 0xc76 <__fp_zero>
     958:	0e f4       	brtc	.+2      	; 0x95c <__addsf3x+0x1c>
     95a:	e0 95       	com	r30
     95c:	0b 2e       	mov	r0, r27
     95e:	ba 2f       	mov	r27, r26
     960:	a0 2d       	mov	r26, r0
     962:	0b 01       	movw	r0, r22
     964:	b9 01       	movw	r22, r18
     966:	90 01       	movw	r18, r0
     968:	0c 01       	movw	r0, r24
     96a:	ca 01       	movw	r24, r20
     96c:	a0 01       	movw	r20, r0
     96e:	11 24       	eor	r1, r1
     970:	ff 27       	eor	r31, r31
     972:	59 1b       	sub	r21, r25
     974:	99 f0       	breq	.+38     	; 0x99c <__addsf3x+0x5c>
     976:	59 3f       	cpi	r21, 0xF9	; 249
     978:	50 f4       	brcc	.+20     	; 0x98e <__addsf3x+0x4e>
     97a:	50 3e       	cpi	r21, 0xE0	; 224
     97c:	68 f1       	brcs	.+90     	; 0x9d8 <__addsf3x+0x98>
     97e:	1a 16       	cp	r1, r26
     980:	f0 40       	sbci	r31, 0x00	; 0
     982:	a2 2f       	mov	r26, r18
     984:	23 2f       	mov	r18, r19
     986:	34 2f       	mov	r19, r20
     988:	44 27       	eor	r20, r20
     98a:	58 5f       	subi	r21, 0xF8	; 248
     98c:	f3 cf       	rjmp	.-26     	; 0x974 <__addsf3x+0x34>
     98e:	46 95       	lsr	r20
     990:	37 95       	ror	r19
     992:	27 95       	ror	r18
     994:	a7 95       	ror	r26
     996:	f0 40       	sbci	r31, 0x00	; 0
     998:	53 95       	inc	r21
     99a:	c9 f7       	brne	.-14     	; 0x98e <__addsf3x+0x4e>
     99c:	7e f4       	brtc	.+30     	; 0x9bc <__addsf3x+0x7c>
     99e:	1f 16       	cp	r1, r31
     9a0:	ba 0b       	sbc	r27, r26
     9a2:	62 0b       	sbc	r22, r18
     9a4:	73 0b       	sbc	r23, r19
     9a6:	84 0b       	sbc	r24, r20
     9a8:	ba f0       	brmi	.+46     	; 0x9d8 <__addsf3x+0x98>
     9aa:	91 50       	subi	r25, 0x01	; 1
     9ac:	a1 f0       	breq	.+40     	; 0x9d6 <__addsf3x+0x96>
     9ae:	ff 0f       	add	r31, r31
     9b0:	bb 1f       	adc	r27, r27
     9b2:	66 1f       	adc	r22, r22
     9b4:	77 1f       	adc	r23, r23
     9b6:	88 1f       	adc	r24, r24
     9b8:	c2 f7       	brpl	.-16     	; 0x9aa <__addsf3x+0x6a>
     9ba:	0e c0       	rjmp	.+28     	; 0x9d8 <__addsf3x+0x98>
     9bc:	ba 0f       	add	r27, r26
     9be:	62 1f       	adc	r22, r18
     9c0:	73 1f       	adc	r23, r19
     9c2:	84 1f       	adc	r24, r20
     9c4:	48 f4       	brcc	.+18     	; 0x9d8 <__addsf3x+0x98>
     9c6:	87 95       	ror	r24
     9c8:	77 95       	ror	r23
     9ca:	67 95       	ror	r22
     9cc:	b7 95       	ror	r27
     9ce:	f7 95       	ror	r31
     9d0:	9e 3f       	cpi	r25, 0xFE	; 254
     9d2:	08 f0       	brcs	.+2      	; 0x9d6 <__addsf3x+0x96>
     9d4:	b3 cf       	rjmp	.-154    	; 0x93c <__addsf3+0x1e>
     9d6:	93 95       	inc	r25
     9d8:	88 0f       	add	r24, r24
     9da:	08 f0       	brcs	.+2      	; 0x9de <__addsf3x+0x9e>
     9dc:	99 27       	eor	r25, r25
     9de:	ee 0f       	add	r30, r30
     9e0:	97 95       	ror	r25
     9e2:	87 95       	ror	r24
     9e4:	08 95       	ret

000009e6 <__cmpsf2>:
     9e6:	d9 d0       	rcall	.+434    	; 0xb9a <__fp_cmp>
     9e8:	08 f4       	brcc	.+2      	; 0x9ec <__cmpsf2+0x6>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	08 95       	ret

000009ee <__divsf3>:
     9ee:	0c d0       	rcall	.+24     	; 0xa08 <__divsf3x>
     9f0:	0f c1       	rjmp	.+542    	; 0xc10 <__fp_round>
     9f2:	07 d1       	rcall	.+526    	; 0xc02 <__fp_pscB>
     9f4:	40 f0       	brcs	.+16     	; 0xa06 <__divsf3+0x18>
     9f6:	fe d0       	rcall	.+508    	; 0xbf4 <__fp_pscA>
     9f8:	30 f0       	brcs	.+12     	; 0xa06 <__divsf3+0x18>
     9fa:	21 f4       	brne	.+8      	; 0xa04 <__divsf3+0x16>
     9fc:	5f 3f       	cpi	r21, 0xFF	; 255
     9fe:	19 f0       	breq	.+6      	; 0xa06 <__divsf3+0x18>
     a00:	f0 c0       	rjmp	.+480    	; 0xbe2 <__fp_inf>
     a02:	51 11       	cpse	r21, r1
     a04:	39 c1       	rjmp	.+626    	; 0xc78 <__fp_szero>
     a06:	f3 c0       	rjmp	.+486    	; 0xbee <__fp_nan>

00000a08 <__divsf3x>:
     a08:	14 d1       	rcall	.+552    	; 0xc32 <__fp_split3>
     a0a:	98 f3       	brcs	.-26     	; 0x9f2 <__divsf3+0x4>

00000a0c <__divsf3_pse>:
     a0c:	99 23       	and	r25, r25
     a0e:	c9 f3       	breq	.-14     	; 0xa02 <__divsf3+0x14>
     a10:	55 23       	and	r21, r21
     a12:	b1 f3       	breq	.-20     	; 0xa00 <__divsf3+0x12>
     a14:	95 1b       	sub	r25, r21
     a16:	55 0b       	sbc	r21, r21
     a18:	bb 27       	eor	r27, r27
     a1a:	aa 27       	eor	r26, r26
     a1c:	62 17       	cp	r22, r18
     a1e:	73 07       	cpc	r23, r19
     a20:	84 07       	cpc	r24, r20
     a22:	38 f0       	brcs	.+14     	; 0xa32 <__divsf3_pse+0x26>
     a24:	9f 5f       	subi	r25, 0xFF	; 255
     a26:	5f 4f       	sbci	r21, 0xFF	; 255
     a28:	22 0f       	add	r18, r18
     a2a:	33 1f       	adc	r19, r19
     a2c:	44 1f       	adc	r20, r20
     a2e:	aa 1f       	adc	r26, r26
     a30:	a9 f3       	breq	.-22     	; 0xa1c <__divsf3_pse+0x10>
     a32:	33 d0       	rcall	.+102    	; 0xa9a <__divsf3_pse+0x8e>
     a34:	0e 2e       	mov	r0, r30
     a36:	3a f0       	brmi	.+14     	; 0xa46 <__divsf3_pse+0x3a>
     a38:	e0 e8       	ldi	r30, 0x80	; 128
     a3a:	30 d0       	rcall	.+96     	; 0xa9c <__divsf3_pse+0x90>
     a3c:	91 50       	subi	r25, 0x01	; 1
     a3e:	50 40       	sbci	r21, 0x00	; 0
     a40:	e6 95       	lsr	r30
     a42:	00 1c       	adc	r0, r0
     a44:	ca f7       	brpl	.-14     	; 0xa38 <__divsf3_pse+0x2c>
     a46:	29 d0       	rcall	.+82     	; 0xa9a <__divsf3_pse+0x8e>
     a48:	fe 2f       	mov	r31, r30
     a4a:	27 d0       	rcall	.+78     	; 0xa9a <__divsf3_pse+0x8e>
     a4c:	66 0f       	add	r22, r22
     a4e:	77 1f       	adc	r23, r23
     a50:	88 1f       	adc	r24, r24
     a52:	bb 1f       	adc	r27, r27
     a54:	26 17       	cp	r18, r22
     a56:	37 07       	cpc	r19, r23
     a58:	48 07       	cpc	r20, r24
     a5a:	ab 07       	cpc	r26, r27
     a5c:	b0 e8       	ldi	r27, 0x80	; 128
     a5e:	09 f0       	breq	.+2      	; 0xa62 <__divsf3_pse+0x56>
     a60:	bb 0b       	sbc	r27, r27
     a62:	80 2d       	mov	r24, r0
     a64:	bf 01       	movw	r22, r30
     a66:	ff 27       	eor	r31, r31
     a68:	93 58       	subi	r25, 0x83	; 131
     a6a:	5f 4f       	sbci	r21, 0xFF	; 255
     a6c:	2a f0       	brmi	.+10     	; 0xa78 <__divsf3_pse+0x6c>
     a6e:	9e 3f       	cpi	r25, 0xFE	; 254
     a70:	51 05       	cpc	r21, r1
     a72:	68 f0       	brcs	.+26     	; 0xa8e <__divsf3_pse+0x82>
     a74:	b6 c0       	rjmp	.+364    	; 0xbe2 <__fp_inf>
     a76:	00 c1       	rjmp	.+512    	; 0xc78 <__fp_szero>
     a78:	5f 3f       	cpi	r21, 0xFF	; 255
     a7a:	ec f3       	brlt	.-6      	; 0xa76 <__divsf3_pse+0x6a>
     a7c:	98 3e       	cpi	r25, 0xE8	; 232
     a7e:	dc f3       	brlt	.-10     	; 0xa76 <__divsf3_pse+0x6a>
     a80:	86 95       	lsr	r24
     a82:	77 95       	ror	r23
     a84:	67 95       	ror	r22
     a86:	b7 95       	ror	r27
     a88:	f7 95       	ror	r31
     a8a:	9f 5f       	subi	r25, 0xFF	; 255
     a8c:	c9 f7       	brne	.-14     	; 0xa80 <__divsf3_pse+0x74>
     a8e:	88 0f       	add	r24, r24
     a90:	91 1d       	adc	r25, r1
     a92:	96 95       	lsr	r25
     a94:	87 95       	ror	r24
     a96:	97 f9       	bld	r25, 7
     a98:	08 95       	ret
     a9a:	e1 e0       	ldi	r30, 0x01	; 1
     a9c:	66 0f       	add	r22, r22
     a9e:	77 1f       	adc	r23, r23
     aa0:	88 1f       	adc	r24, r24
     aa2:	bb 1f       	adc	r27, r27
     aa4:	62 17       	cp	r22, r18
     aa6:	73 07       	cpc	r23, r19
     aa8:	84 07       	cpc	r24, r20
     aaa:	ba 07       	cpc	r27, r26
     aac:	20 f0       	brcs	.+8      	; 0xab6 <__divsf3_pse+0xaa>
     aae:	62 1b       	sub	r22, r18
     ab0:	73 0b       	sbc	r23, r19
     ab2:	84 0b       	sbc	r24, r20
     ab4:	ba 0b       	sbc	r27, r26
     ab6:	ee 1f       	adc	r30, r30
     ab8:	88 f7       	brcc	.-30     	; 0xa9c <__divsf3_pse+0x90>
     aba:	e0 95       	com	r30
     abc:	08 95       	ret

00000abe <__fixsfsi>:
     abe:	04 d0       	rcall	.+8      	; 0xac8 <__fixunssfsi>
     ac0:	68 94       	set
     ac2:	b1 11       	cpse	r27, r1
     ac4:	d9 c0       	rjmp	.+434    	; 0xc78 <__fp_szero>
     ac6:	08 95       	ret

00000ac8 <__fixunssfsi>:
     ac8:	bc d0       	rcall	.+376    	; 0xc42 <__fp_splitA>
     aca:	88 f0       	brcs	.+34     	; 0xaee <__fixunssfsi+0x26>
     acc:	9f 57       	subi	r25, 0x7F	; 127
     ace:	90 f0       	brcs	.+36     	; 0xaf4 <__fixunssfsi+0x2c>
     ad0:	b9 2f       	mov	r27, r25
     ad2:	99 27       	eor	r25, r25
     ad4:	b7 51       	subi	r27, 0x17	; 23
     ad6:	a0 f0       	brcs	.+40     	; 0xb00 <__fixunssfsi+0x38>
     ad8:	d1 f0       	breq	.+52     	; 0xb0e <__fixunssfsi+0x46>
     ada:	66 0f       	add	r22, r22
     adc:	77 1f       	adc	r23, r23
     ade:	88 1f       	adc	r24, r24
     ae0:	99 1f       	adc	r25, r25
     ae2:	1a f0       	brmi	.+6      	; 0xaea <__fixunssfsi+0x22>
     ae4:	ba 95       	dec	r27
     ae6:	c9 f7       	brne	.-14     	; 0xada <__fixunssfsi+0x12>
     ae8:	12 c0       	rjmp	.+36     	; 0xb0e <__fixunssfsi+0x46>
     aea:	b1 30       	cpi	r27, 0x01	; 1
     aec:	81 f0       	breq	.+32     	; 0xb0e <__fixunssfsi+0x46>
     aee:	c3 d0       	rcall	.+390    	; 0xc76 <__fp_zero>
     af0:	b1 e0       	ldi	r27, 0x01	; 1
     af2:	08 95       	ret
     af4:	c0 c0       	rjmp	.+384    	; 0xc76 <__fp_zero>
     af6:	67 2f       	mov	r22, r23
     af8:	78 2f       	mov	r23, r24
     afa:	88 27       	eor	r24, r24
     afc:	b8 5f       	subi	r27, 0xF8	; 248
     afe:	39 f0       	breq	.+14     	; 0xb0e <__fixunssfsi+0x46>
     b00:	b9 3f       	cpi	r27, 0xF9	; 249
     b02:	cc f3       	brlt	.-14     	; 0xaf6 <__fixunssfsi+0x2e>
     b04:	86 95       	lsr	r24
     b06:	77 95       	ror	r23
     b08:	67 95       	ror	r22
     b0a:	b3 95       	inc	r27
     b0c:	d9 f7       	brne	.-10     	; 0xb04 <__fixunssfsi+0x3c>
     b0e:	3e f4       	brtc	.+14     	; 0xb1e <__fixunssfsi+0x56>
     b10:	90 95       	com	r25
     b12:	80 95       	com	r24
     b14:	70 95       	com	r23
     b16:	61 95       	neg	r22
     b18:	7f 4f       	sbci	r23, 0xFF	; 255
     b1a:	8f 4f       	sbci	r24, 0xFF	; 255
     b1c:	9f 4f       	sbci	r25, 0xFF	; 255
     b1e:	08 95       	ret

00000b20 <__floatunsisf>:
     b20:	e8 94       	clt
     b22:	09 c0       	rjmp	.+18     	; 0xb36 <__floatsisf+0x12>

00000b24 <__floatsisf>:
     b24:	97 fb       	bst	r25, 7
     b26:	3e f4       	brtc	.+14     	; 0xb36 <__floatsisf+0x12>
     b28:	90 95       	com	r25
     b2a:	80 95       	com	r24
     b2c:	70 95       	com	r23
     b2e:	61 95       	neg	r22
     b30:	7f 4f       	sbci	r23, 0xFF	; 255
     b32:	8f 4f       	sbci	r24, 0xFF	; 255
     b34:	9f 4f       	sbci	r25, 0xFF	; 255
     b36:	99 23       	and	r25, r25
     b38:	a9 f0       	breq	.+42     	; 0xb64 <__floatsisf+0x40>
     b3a:	f9 2f       	mov	r31, r25
     b3c:	96 e9       	ldi	r25, 0x96	; 150
     b3e:	bb 27       	eor	r27, r27
     b40:	93 95       	inc	r25
     b42:	f6 95       	lsr	r31
     b44:	87 95       	ror	r24
     b46:	77 95       	ror	r23
     b48:	67 95       	ror	r22
     b4a:	b7 95       	ror	r27
     b4c:	f1 11       	cpse	r31, r1
     b4e:	f8 cf       	rjmp	.-16     	; 0xb40 <__floatsisf+0x1c>
     b50:	fa f4       	brpl	.+62     	; 0xb90 <__floatsisf+0x6c>
     b52:	bb 0f       	add	r27, r27
     b54:	11 f4       	brne	.+4      	; 0xb5a <__floatsisf+0x36>
     b56:	60 ff       	sbrs	r22, 0
     b58:	1b c0       	rjmp	.+54     	; 0xb90 <__floatsisf+0x6c>
     b5a:	6f 5f       	subi	r22, 0xFF	; 255
     b5c:	7f 4f       	sbci	r23, 0xFF	; 255
     b5e:	8f 4f       	sbci	r24, 0xFF	; 255
     b60:	9f 4f       	sbci	r25, 0xFF	; 255
     b62:	16 c0       	rjmp	.+44     	; 0xb90 <__floatsisf+0x6c>
     b64:	88 23       	and	r24, r24
     b66:	11 f0       	breq	.+4      	; 0xb6c <__floatsisf+0x48>
     b68:	96 e9       	ldi	r25, 0x96	; 150
     b6a:	11 c0       	rjmp	.+34     	; 0xb8e <__floatsisf+0x6a>
     b6c:	77 23       	and	r23, r23
     b6e:	21 f0       	breq	.+8      	; 0xb78 <__floatsisf+0x54>
     b70:	9e e8       	ldi	r25, 0x8E	; 142
     b72:	87 2f       	mov	r24, r23
     b74:	76 2f       	mov	r23, r22
     b76:	05 c0       	rjmp	.+10     	; 0xb82 <__floatsisf+0x5e>
     b78:	66 23       	and	r22, r22
     b7a:	71 f0       	breq	.+28     	; 0xb98 <__floatsisf+0x74>
     b7c:	96 e8       	ldi	r25, 0x86	; 134
     b7e:	86 2f       	mov	r24, r22
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	60 e0       	ldi	r22, 0x00	; 0
     b84:	2a f0       	brmi	.+10     	; 0xb90 <__floatsisf+0x6c>
     b86:	9a 95       	dec	r25
     b88:	66 0f       	add	r22, r22
     b8a:	77 1f       	adc	r23, r23
     b8c:	88 1f       	adc	r24, r24
     b8e:	da f7       	brpl	.-10     	; 0xb86 <__floatsisf+0x62>
     b90:	88 0f       	add	r24, r24
     b92:	96 95       	lsr	r25
     b94:	87 95       	ror	r24
     b96:	97 f9       	bld	r25, 7
     b98:	08 95       	ret

00000b9a <__fp_cmp>:
     b9a:	99 0f       	add	r25, r25
     b9c:	00 08       	sbc	r0, r0
     b9e:	55 0f       	add	r21, r21
     ba0:	aa 0b       	sbc	r26, r26
     ba2:	e0 e8       	ldi	r30, 0x80	; 128
     ba4:	fe ef       	ldi	r31, 0xFE	; 254
     ba6:	16 16       	cp	r1, r22
     ba8:	17 06       	cpc	r1, r23
     baa:	e8 07       	cpc	r30, r24
     bac:	f9 07       	cpc	r31, r25
     bae:	c0 f0       	brcs	.+48     	; 0xbe0 <__fp_cmp+0x46>
     bb0:	12 16       	cp	r1, r18
     bb2:	13 06       	cpc	r1, r19
     bb4:	e4 07       	cpc	r30, r20
     bb6:	f5 07       	cpc	r31, r21
     bb8:	98 f0       	brcs	.+38     	; 0xbe0 <__fp_cmp+0x46>
     bba:	62 1b       	sub	r22, r18
     bbc:	73 0b       	sbc	r23, r19
     bbe:	84 0b       	sbc	r24, r20
     bc0:	95 0b       	sbc	r25, r21
     bc2:	39 f4       	brne	.+14     	; 0xbd2 <__fp_cmp+0x38>
     bc4:	0a 26       	eor	r0, r26
     bc6:	61 f0       	breq	.+24     	; 0xbe0 <__fp_cmp+0x46>
     bc8:	23 2b       	or	r18, r19
     bca:	24 2b       	or	r18, r20
     bcc:	25 2b       	or	r18, r21
     bce:	21 f4       	brne	.+8      	; 0xbd8 <__fp_cmp+0x3e>
     bd0:	08 95       	ret
     bd2:	0a 26       	eor	r0, r26
     bd4:	09 f4       	brne	.+2      	; 0xbd8 <__fp_cmp+0x3e>
     bd6:	a1 40       	sbci	r26, 0x01	; 1
     bd8:	a6 95       	lsr	r26
     bda:	8f ef       	ldi	r24, 0xFF	; 255
     bdc:	81 1d       	adc	r24, r1
     bde:	81 1d       	adc	r24, r1
     be0:	08 95       	ret

00000be2 <__fp_inf>:
     be2:	97 f9       	bld	r25, 7
     be4:	9f 67       	ori	r25, 0x7F	; 127
     be6:	80 e8       	ldi	r24, 0x80	; 128
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	60 e0       	ldi	r22, 0x00	; 0
     bec:	08 95       	ret

00000bee <__fp_nan>:
     bee:	9f ef       	ldi	r25, 0xFF	; 255
     bf0:	80 ec       	ldi	r24, 0xC0	; 192
     bf2:	08 95       	ret

00000bf4 <__fp_pscA>:
     bf4:	00 24       	eor	r0, r0
     bf6:	0a 94       	dec	r0
     bf8:	16 16       	cp	r1, r22
     bfa:	17 06       	cpc	r1, r23
     bfc:	18 06       	cpc	r1, r24
     bfe:	09 06       	cpc	r0, r25
     c00:	08 95       	ret

00000c02 <__fp_pscB>:
     c02:	00 24       	eor	r0, r0
     c04:	0a 94       	dec	r0
     c06:	12 16       	cp	r1, r18
     c08:	13 06       	cpc	r1, r19
     c0a:	14 06       	cpc	r1, r20
     c0c:	05 06       	cpc	r0, r21
     c0e:	08 95       	ret

00000c10 <__fp_round>:
     c10:	09 2e       	mov	r0, r25
     c12:	03 94       	inc	r0
     c14:	00 0c       	add	r0, r0
     c16:	11 f4       	brne	.+4      	; 0xc1c <__fp_round+0xc>
     c18:	88 23       	and	r24, r24
     c1a:	52 f0       	brmi	.+20     	; 0xc30 <__fp_round+0x20>
     c1c:	bb 0f       	add	r27, r27
     c1e:	40 f4       	brcc	.+16     	; 0xc30 <__fp_round+0x20>
     c20:	bf 2b       	or	r27, r31
     c22:	11 f4       	brne	.+4      	; 0xc28 <__fp_round+0x18>
     c24:	60 ff       	sbrs	r22, 0
     c26:	04 c0       	rjmp	.+8      	; 0xc30 <__fp_round+0x20>
     c28:	6f 5f       	subi	r22, 0xFF	; 255
     c2a:	7f 4f       	sbci	r23, 0xFF	; 255
     c2c:	8f 4f       	sbci	r24, 0xFF	; 255
     c2e:	9f 4f       	sbci	r25, 0xFF	; 255
     c30:	08 95       	ret

00000c32 <__fp_split3>:
     c32:	57 fd       	sbrc	r21, 7
     c34:	90 58       	subi	r25, 0x80	; 128
     c36:	44 0f       	add	r20, r20
     c38:	55 1f       	adc	r21, r21
     c3a:	59 f0       	breq	.+22     	; 0xc52 <__fp_splitA+0x10>
     c3c:	5f 3f       	cpi	r21, 0xFF	; 255
     c3e:	71 f0       	breq	.+28     	; 0xc5c <__fp_splitA+0x1a>
     c40:	47 95       	ror	r20

00000c42 <__fp_splitA>:
     c42:	88 0f       	add	r24, r24
     c44:	97 fb       	bst	r25, 7
     c46:	99 1f       	adc	r25, r25
     c48:	61 f0       	breq	.+24     	; 0xc62 <__fp_splitA+0x20>
     c4a:	9f 3f       	cpi	r25, 0xFF	; 255
     c4c:	79 f0       	breq	.+30     	; 0xc6c <__fp_splitA+0x2a>
     c4e:	87 95       	ror	r24
     c50:	08 95       	ret
     c52:	12 16       	cp	r1, r18
     c54:	13 06       	cpc	r1, r19
     c56:	14 06       	cpc	r1, r20
     c58:	55 1f       	adc	r21, r21
     c5a:	f2 cf       	rjmp	.-28     	; 0xc40 <__fp_split3+0xe>
     c5c:	46 95       	lsr	r20
     c5e:	f1 df       	rcall	.-30     	; 0xc42 <__fp_splitA>
     c60:	08 c0       	rjmp	.+16     	; 0xc72 <__fp_splitA+0x30>
     c62:	16 16       	cp	r1, r22
     c64:	17 06       	cpc	r1, r23
     c66:	18 06       	cpc	r1, r24
     c68:	99 1f       	adc	r25, r25
     c6a:	f1 cf       	rjmp	.-30     	; 0xc4e <__fp_splitA+0xc>
     c6c:	86 95       	lsr	r24
     c6e:	71 05       	cpc	r23, r1
     c70:	61 05       	cpc	r22, r1
     c72:	08 94       	sec
     c74:	08 95       	ret

00000c76 <__fp_zero>:
     c76:	e8 94       	clt

00000c78 <__fp_szero>:
     c78:	bb 27       	eor	r27, r27
     c7a:	66 27       	eor	r22, r22
     c7c:	77 27       	eor	r23, r23
     c7e:	cb 01       	movw	r24, r22
     c80:	97 f9       	bld	r25, 7
     c82:	08 95       	ret

00000c84 <__gesf2>:
     c84:	8a df       	rcall	.-236    	; 0xb9a <__fp_cmp>
     c86:	08 f4       	brcc	.+2      	; 0xc8a <__gesf2+0x6>
     c88:	8f ef       	ldi	r24, 0xFF	; 255
     c8a:	08 95       	ret

00000c8c <__mulsf3>:
     c8c:	0b d0       	rcall	.+22     	; 0xca4 <__mulsf3x>
     c8e:	c0 cf       	rjmp	.-128    	; 0xc10 <__fp_round>
     c90:	b1 df       	rcall	.-158    	; 0xbf4 <__fp_pscA>
     c92:	28 f0       	brcs	.+10     	; 0xc9e <__mulsf3+0x12>
     c94:	b6 df       	rcall	.-148    	; 0xc02 <__fp_pscB>
     c96:	18 f0       	brcs	.+6      	; 0xc9e <__mulsf3+0x12>
     c98:	95 23       	and	r25, r21
     c9a:	09 f0       	breq	.+2      	; 0xc9e <__mulsf3+0x12>
     c9c:	a2 cf       	rjmp	.-188    	; 0xbe2 <__fp_inf>
     c9e:	a7 cf       	rjmp	.-178    	; 0xbee <__fp_nan>
     ca0:	11 24       	eor	r1, r1
     ca2:	ea cf       	rjmp	.-44     	; 0xc78 <__fp_szero>

00000ca4 <__mulsf3x>:
     ca4:	c6 df       	rcall	.-116    	; 0xc32 <__fp_split3>
     ca6:	a0 f3       	brcs	.-24     	; 0xc90 <__mulsf3+0x4>

00000ca8 <__mulsf3_pse>:
     ca8:	95 9f       	mul	r25, r21
     caa:	d1 f3       	breq	.-12     	; 0xca0 <__mulsf3+0x14>
     cac:	95 0f       	add	r25, r21
     cae:	50 e0       	ldi	r21, 0x00	; 0
     cb0:	55 1f       	adc	r21, r21
     cb2:	62 9f       	mul	r22, r18
     cb4:	f0 01       	movw	r30, r0
     cb6:	72 9f       	mul	r23, r18
     cb8:	bb 27       	eor	r27, r27
     cba:	f0 0d       	add	r31, r0
     cbc:	b1 1d       	adc	r27, r1
     cbe:	63 9f       	mul	r22, r19
     cc0:	aa 27       	eor	r26, r26
     cc2:	f0 0d       	add	r31, r0
     cc4:	b1 1d       	adc	r27, r1
     cc6:	aa 1f       	adc	r26, r26
     cc8:	64 9f       	mul	r22, r20
     cca:	66 27       	eor	r22, r22
     ccc:	b0 0d       	add	r27, r0
     cce:	a1 1d       	adc	r26, r1
     cd0:	66 1f       	adc	r22, r22
     cd2:	82 9f       	mul	r24, r18
     cd4:	22 27       	eor	r18, r18
     cd6:	b0 0d       	add	r27, r0
     cd8:	a1 1d       	adc	r26, r1
     cda:	62 1f       	adc	r22, r18
     cdc:	73 9f       	mul	r23, r19
     cde:	b0 0d       	add	r27, r0
     ce0:	a1 1d       	adc	r26, r1
     ce2:	62 1f       	adc	r22, r18
     ce4:	83 9f       	mul	r24, r19
     ce6:	a0 0d       	add	r26, r0
     ce8:	61 1d       	adc	r22, r1
     cea:	22 1f       	adc	r18, r18
     cec:	74 9f       	mul	r23, r20
     cee:	33 27       	eor	r19, r19
     cf0:	a0 0d       	add	r26, r0
     cf2:	61 1d       	adc	r22, r1
     cf4:	23 1f       	adc	r18, r19
     cf6:	84 9f       	mul	r24, r20
     cf8:	60 0d       	add	r22, r0
     cfa:	21 1d       	adc	r18, r1
     cfc:	82 2f       	mov	r24, r18
     cfe:	76 2f       	mov	r23, r22
     d00:	6a 2f       	mov	r22, r26
     d02:	11 24       	eor	r1, r1
     d04:	9f 57       	subi	r25, 0x7F	; 127
     d06:	50 40       	sbci	r21, 0x00	; 0
     d08:	8a f0       	brmi	.+34     	; 0xd2c <__mulsf3_pse+0x84>
     d0a:	e1 f0       	breq	.+56     	; 0xd44 <__mulsf3_pse+0x9c>
     d0c:	88 23       	and	r24, r24
     d0e:	4a f0       	brmi	.+18     	; 0xd22 <__mulsf3_pse+0x7a>
     d10:	ee 0f       	add	r30, r30
     d12:	ff 1f       	adc	r31, r31
     d14:	bb 1f       	adc	r27, r27
     d16:	66 1f       	adc	r22, r22
     d18:	77 1f       	adc	r23, r23
     d1a:	88 1f       	adc	r24, r24
     d1c:	91 50       	subi	r25, 0x01	; 1
     d1e:	50 40       	sbci	r21, 0x00	; 0
     d20:	a9 f7       	brne	.-22     	; 0xd0c <__mulsf3_pse+0x64>
     d22:	9e 3f       	cpi	r25, 0xFE	; 254
     d24:	51 05       	cpc	r21, r1
     d26:	70 f0       	brcs	.+28     	; 0xd44 <__mulsf3_pse+0x9c>
     d28:	5c cf       	rjmp	.-328    	; 0xbe2 <__fp_inf>
     d2a:	a6 cf       	rjmp	.-180    	; 0xc78 <__fp_szero>
     d2c:	5f 3f       	cpi	r21, 0xFF	; 255
     d2e:	ec f3       	brlt	.-6      	; 0xd2a <__mulsf3_pse+0x82>
     d30:	98 3e       	cpi	r25, 0xE8	; 232
     d32:	dc f3       	brlt	.-10     	; 0xd2a <__mulsf3_pse+0x82>
     d34:	86 95       	lsr	r24
     d36:	77 95       	ror	r23
     d38:	67 95       	ror	r22
     d3a:	b7 95       	ror	r27
     d3c:	f7 95       	ror	r31
     d3e:	e7 95       	ror	r30
     d40:	9f 5f       	subi	r25, 0xFF	; 255
     d42:	c1 f7       	brne	.-16     	; 0xd34 <__mulsf3_pse+0x8c>
     d44:	fe 2b       	or	r31, r30
     d46:	88 0f       	add	r24, r24
     d48:	91 1d       	adc	r25, r1
     d4a:	96 95       	lsr	r25
     d4c:	87 95       	ror	r24
     d4e:	97 f9       	bld	r25, 7
     d50:	08 95       	ret

00000d52 <atoi>:
     d52:	fc 01       	movw	r30, r24
     d54:	88 27       	eor	r24, r24
     d56:	99 27       	eor	r25, r25
     d58:	e8 94       	clt
     d5a:	21 91       	ld	r18, Z+
     d5c:	20 32       	cpi	r18, 0x20	; 32
     d5e:	e9 f3       	breq	.-6      	; 0xd5a <atoi+0x8>
     d60:	29 30       	cpi	r18, 0x09	; 9
     d62:	10 f0       	brcs	.+4      	; 0xd68 <atoi+0x16>
     d64:	2e 30       	cpi	r18, 0x0E	; 14
     d66:	c8 f3       	brcs	.-14     	; 0xd5a <atoi+0x8>
     d68:	2b 32       	cpi	r18, 0x2B	; 43
     d6a:	41 f0       	breq	.+16     	; 0xd7c <atoi+0x2a>
     d6c:	2d 32       	cpi	r18, 0x2D	; 45
     d6e:	39 f4       	brne	.+14     	; 0xd7e <atoi+0x2c>
     d70:	68 94       	set
     d72:	04 c0       	rjmp	.+8      	; 0xd7c <atoi+0x2a>
     d74:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__mulhi_const_10>
     d78:	82 0f       	add	r24, r18
     d7a:	91 1d       	adc	r25, r1
     d7c:	21 91       	ld	r18, Z+
     d7e:	20 53       	subi	r18, 0x30	; 48
     d80:	2a 30       	cpi	r18, 0x0A	; 10
     d82:	c0 f3       	brcs	.-16     	; 0xd74 <atoi+0x22>
     d84:	1e f4       	brtc	.+6      	; 0xd8c <atoi+0x3a>
     d86:	90 95       	com	r25
     d88:	81 95       	neg	r24
     d8a:	9f 4f       	sbci	r25, 0xFF	; 255
     d8c:	08 95       	ret

00000d8e <__mulhi_const_10>:
     d8e:	7a e0       	ldi	r23, 0x0A	; 10
     d90:	97 9f       	mul	r25, r23
     d92:	90 2d       	mov	r25, r0
     d94:	87 9f       	mul	r24, r23
     d96:	80 2d       	mov	r24, r0
     d98:	91 0d       	add	r25, r1
     d9a:	11 24       	eor	r1, r1
     d9c:	08 95       	ret

00000d9e <sprintf>:
     d9e:	ae e0       	ldi	r26, 0x0E	; 14
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e5 ed       	ldi	r30, 0xD5	; 213
     da4:	f6 e0       	ldi	r31, 0x06	; 6
     da6:	0c 94 7d 09 	jmp	0x12fa	; 0x12fa <__prologue_saves__+0x1c>
     daa:	0d 89       	ldd	r16, Y+21	; 0x15
     dac:	1e 89       	ldd	r17, Y+22	; 0x16
     dae:	86 e0       	ldi	r24, 0x06	; 6
     db0:	8c 83       	std	Y+4, r24	; 0x04
     db2:	1a 83       	std	Y+2, r17	; 0x02
     db4:	09 83       	std	Y+1, r16	; 0x01
     db6:	8f ef       	ldi	r24, 0xFF	; 255
     db8:	9f e7       	ldi	r25, 0x7F	; 127
     dba:	9e 83       	std	Y+6, r25	; 0x06
     dbc:	8d 83       	std	Y+5, r24	; 0x05
     dbe:	ae 01       	movw	r20, r28
     dc0:	47 5e       	subi	r20, 0xE7	; 231
     dc2:	5f 4f       	sbci	r21, 0xFF	; 255
     dc4:	ce 01       	movw	r24, r28
     dc6:	01 96       	adiw	r24, 0x01	; 1
     dc8:	6f 89       	ldd	r22, Y+23	; 0x17
     dca:	78 8d       	ldd	r23, Y+24	; 0x18
     dcc:	0e 94 f1 06 	call	0xde2	; 0xde2 <vfprintf>
     dd0:	ef 81       	ldd	r30, Y+7	; 0x07
     dd2:	f8 85       	ldd	r31, Y+8	; 0x08
     dd4:	e0 0f       	add	r30, r16
     dd6:	f1 1f       	adc	r31, r17
     dd8:	10 82       	st	Z, r1
     dda:	2e 96       	adiw	r28, 0x0e	; 14
     ddc:	e4 e0       	ldi	r30, 0x04	; 4
     dde:	0c 94 99 09 	jmp	0x1332	; 0x1332 <__epilogue_restores__+0x1c>

00000de2 <vfprintf>:
     de2:	ad e0       	ldi	r26, 0x0D	; 13
     de4:	b0 e0       	ldi	r27, 0x00	; 0
     de6:	e7 ef       	ldi	r30, 0xF7	; 247
     de8:	f6 e0       	ldi	r31, 0x06	; 6
     dea:	0c 94 6f 09 	jmp	0x12de	; 0x12de <__prologue_saves__>
     dee:	3c 01       	movw	r6, r24
     df0:	7d 87       	std	Y+13, r23	; 0x0d
     df2:	6c 87       	std	Y+12, r22	; 0x0c
     df4:	5a 01       	movw	r10, r20
     df6:	fc 01       	movw	r30, r24
     df8:	17 82       	std	Z+7, r1	; 0x07
     dfa:	16 82       	std	Z+6, r1	; 0x06
     dfc:	83 81       	ldd	r24, Z+3	; 0x03
     dfe:	81 ff       	sbrs	r24, 1
     e00:	c8 c1       	rjmp	.+912    	; 0x1192 <vfprintf+0x3b0>
     e02:	2e 01       	movw	r4, r28
     e04:	08 94       	sec
     e06:	41 1c       	adc	r4, r1
     e08:	51 1c       	adc	r5, r1
     e0a:	f3 01       	movw	r30, r6
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	ec 85       	ldd	r30, Y+12	; 0x0c
     e10:	fd 85       	ldd	r31, Y+13	; 0x0d
     e12:	93 fd       	sbrc	r25, 3
     e14:	85 91       	lpm	r24, Z+
     e16:	93 ff       	sbrs	r25, 3
     e18:	81 91       	ld	r24, Z+
     e1a:	fd 87       	std	Y+13, r31	; 0x0d
     e1c:	ec 87       	std	Y+12, r30	; 0x0c
     e1e:	88 23       	and	r24, r24
     e20:	09 f4       	brne	.+2      	; 0xe24 <vfprintf+0x42>
     e22:	b3 c1       	rjmp	.+870    	; 0x118a <vfprintf+0x3a8>
     e24:	85 32       	cpi	r24, 0x25	; 37
     e26:	41 f4       	brne	.+16     	; 0xe38 <vfprintf+0x56>
     e28:	93 fd       	sbrc	r25, 3
     e2a:	85 91       	lpm	r24, Z+
     e2c:	93 ff       	sbrs	r25, 3
     e2e:	81 91       	ld	r24, Z+
     e30:	fd 87       	std	Y+13, r31	; 0x0d
     e32:	ec 87       	std	Y+12, r30	; 0x0c
     e34:	85 32       	cpi	r24, 0x25	; 37
     e36:	29 f4       	brne	.+10     	; 0xe42 <vfprintf+0x60>
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	b3 01       	movw	r22, r6
     e3c:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
     e40:	e4 cf       	rjmp	.-56     	; 0xe0a <vfprintf+0x28>
     e42:	ff 24       	eor	r15, r15
     e44:	ee 24       	eor	r14, r14
     e46:	10 e0       	ldi	r17, 0x00	; 0
     e48:	10 32       	cpi	r17, 0x20	; 32
     e4a:	b0 f4       	brcc	.+44     	; 0xe78 <vfprintf+0x96>
     e4c:	8b 32       	cpi	r24, 0x2B	; 43
     e4e:	69 f0       	breq	.+26     	; 0xe6a <vfprintf+0x88>
     e50:	8c 32       	cpi	r24, 0x2C	; 44
     e52:	28 f4       	brcc	.+10     	; 0xe5e <vfprintf+0x7c>
     e54:	80 32       	cpi	r24, 0x20	; 32
     e56:	51 f0       	breq	.+20     	; 0xe6c <vfprintf+0x8a>
     e58:	83 32       	cpi	r24, 0x23	; 35
     e5a:	71 f4       	brne	.+28     	; 0xe78 <vfprintf+0x96>
     e5c:	0b c0       	rjmp	.+22     	; 0xe74 <vfprintf+0x92>
     e5e:	8d 32       	cpi	r24, 0x2D	; 45
     e60:	39 f0       	breq	.+14     	; 0xe70 <vfprintf+0x8e>
     e62:	80 33       	cpi	r24, 0x30	; 48
     e64:	49 f4       	brne	.+18     	; 0xe78 <vfprintf+0x96>
     e66:	11 60       	ori	r17, 0x01	; 1
     e68:	2c c0       	rjmp	.+88     	; 0xec2 <vfprintf+0xe0>
     e6a:	12 60       	ori	r17, 0x02	; 2
     e6c:	14 60       	ori	r17, 0x04	; 4
     e6e:	29 c0       	rjmp	.+82     	; 0xec2 <vfprintf+0xe0>
     e70:	18 60       	ori	r17, 0x08	; 8
     e72:	27 c0       	rjmp	.+78     	; 0xec2 <vfprintf+0xe0>
     e74:	10 61       	ori	r17, 0x10	; 16
     e76:	25 c0       	rjmp	.+74     	; 0xec2 <vfprintf+0xe0>
     e78:	17 fd       	sbrc	r17, 7
     e7a:	2e c0       	rjmp	.+92     	; 0xed8 <vfprintf+0xf6>
     e7c:	28 2f       	mov	r18, r24
     e7e:	20 53       	subi	r18, 0x30	; 48
     e80:	2a 30       	cpi	r18, 0x0A	; 10
     e82:	98 f4       	brcc	.+38     	; 0xeaa <vfprintf+0xc8>
     e84:	16 ff       	sbrs	r17, 6
     e86:	08 c0       	rjmp	.+16     	; 0xe98 <vfprintf+0xb6>
     e88:	8f 2d       	mov	r24, r15
     e8a:	88 0f       	add	r24, r24
     e8c:	f8 2e       	mov	r15, r24
     e8e:	ff 0c       	add	r15, r15
     e90:	ff 0c       	add	r15, r15
     e92:	f8 0e       	add	r15, r24
     e94:	f2 0e       	add	r15, r18
     e96:	15 c0       	rjmp	.+42     	; 0xec2 <vfprintf+0xe0>
     e98:	8e 2d       	mov	r24, r14
     e9a:	88 0f       	add	r24, r24
     e9c:	e8 2e       	mov	r14, r24
     e9e:	ee 0c       	add	r14, r14
     ea0:	ee 0c       	add	r14, r14
     ea2:	e8 0e       	add	r14, r24
     ea4:	e2 0e       	add	r14, r18
     ea6:	10 62       	ori	r17, 0x20	; 32
     ea8:	0c c0       	rjmp	.+24     	; 0xec2 <vfprintf+0xe0>
     eaa:	8e 32       	cpi	r24, 0x2E	; 46
     eac:	21 f4       	brne	.+8      	; 0xeb6 <vfprintf+0xd4>
     eae:	16 fd       	sbrc	r17, 6
     eb0:	6c c1       	rjmp	.+728    	; 0x118a <vfprintf+0x3a8>
     eb2:	10 64       	ori	r17, 0x40	; 64
     eb4:	06 c0       	rjmp	.+12     	; 0xec2 <vfprintf+0xe0>
     eb6:	8c 36       	cpi	r24, 0x6C	; 108
     eb8:	11 f4       	brne	.+4      	; 0xebe <vfprintf+0xdc>
     eba:	10 68       	ori	r17, 0x80	; 128
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <vfprintf+0xe0>
     ebe:	88 36       	cpi	r24, 0x68	; 104
     ec0:	59 f4       	brne	.+22     	; 0xed8 <vfprintf+0xf6>
     ec2:	ec 85       	ldd	r30, Y+12	; 0x0c
     ec4:	fd 85       	ldd	r31, Y+13	; 0x0d
     ec6:	93 fd       	sbrc	r25, 3
     ec8:	85 91       	lpm	r24, Z+
     eca:	93 ff       	sbrs	r25, 3
     ecc:	81 91       	ld	r24, Z+
     ece:	fd 87       	std	Y+13, r31	; 0x0d
     ed0:	ec 87       	std	Y+12, r30	; 0x0c
     ed2:	88 23       	and	r24, r24
     ed4:	09 f0       	breq	.+2      	; 0xed8 <vfprintf+0xf6>
     ed6:	b8 cf       	rjmp	.-144    	; 0xe48 <vfprintf+0x66>
     ed8:	98 2f       	mov	r25, r24
     eda:	95 54       	subi	r25, 0x45	; 69
     edc:	93 30       	cpi	r25, 0x03	; 3
     ede:	18 f0       	brcs	.+6      	; 0xee6 <vfprintf+0x104>
     ee0:	90 52       	subi	r25, 0x20	; 32
     ee2:	93 30       	cpi	r25, 0x03	; 3
     ee4:	38 f4       	brcc	.+14     	; 0xef4 <vfprintf+0x112>
     ee6:	24 e0       	ldi	r18, 0x04	; 4
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	a2 0e       	add	r10, r18
     eec:	b3 1e       	adc	r11, r19
     eee:	3f e3       	ldi	r19, 0x3F	; 63
     ef0:	39 83       	std	Y+1, r19	; 0x01
     ef2:	0f c0       	rjmp	.+30     	; 0xf12 <vfprintf+0x130>
     ef4:	83 36       	cpi	r24, 0x63	; 99
     ef6:	31 f0       	breq	.+12     	; 0xf04 <vfprintf+0x122>
     ef8:	83 37       	cpi	r24, 0x73	; 115
     efa:	81 f0       	breq	.+32     	; 0xf1c <vfprintf+0x13a>
     efc:	83 35       	cpi	r24, 0x53	; 83
     efe:	09 f0       	breq	.+2      	; 0xf02 <vfprintf+0x120>
     f00:	5a c0       	rjmp	.+180    	; 0xfb6 <vfprintf+0x1d4>
     f02:	22 c0       	rjmp	.+68     	; 0xf48 <vfprintf+0x166>
     f04:	f5 01       	movw	r30, r10
     f06:	80 81       	ld	r24, Z
     f08:	89 83       	std	Y+1, r24	; 0x01
     f0a:	22 e0       	ldi	r18, 0x02	; 2
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	a2 0e       	add	r10, r18
     f10:	b3 1e       	adc	r11, r19
     f12:	21 e0       	ldi	r18, 0x01	; 1
     f14:	c2 2e       	mov	r12, r18
     f16:	d1 2c       	mov	r13, r1
     f18:	42 01       	movw	r8, r4
     f1a:	14 c0       	rjmp	.+40     	; 0xf44 <vfprintf+0x162>
     f1c:	92 e0       	ldi	r25, 0x02	; 2
     f1e:	29 2e       	mov	r2, r25
     f20:	31 2c       	mov	r3, r1
     f22:	2a 0c       	add	r2, r10
     f24:	3b 1c       	adc	r3, r11
     f26:	f5 01       	movw	r30, r10
     f28:	80 80       	ld	r8, Z
     f2a:	91 80       	ldd	r9, Z+1	; 0x01
     f2c:	16 ff       	sbrs	r17, 6
     f2e:	03 c0       	rjmp	.+6      	; 0xf36 <vfprintf+0x154>
     f30:	6f 2d       	mov	r22, r15
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <vfprintf+0x158>
     f36:	6f ef       	ldi	r22, 0xFF	; 255
     f38:	7f ef       	ldi	r23, 0xFF	; 255
     f3a:	c4 01       	movw	r24, r8
     f3c:	0e 94 da 08 	call	0x11b4	; 0x11b4 <strnlen>
     f40:	6c 01       	movw	r12, r24
     f42:	51 01       	movw	r10, r2
     f44:	1f 77       	andi	r17, 0x7F	; 127
     f46:	15 c0       	rjmp	.+42     	; 0xf72 <vfprintf+0x190>
     f48:	82 e0       	ldi	r24, 0x02	; 2
     f4a:	28 2e       	mov	r2, r24
     f4c:	31 2c       	mov	r3, r1
     f4e:	2a 0c       	add	r2, r10
     f50:	3b 1c       	adc	r3, r11
     f52:	f5 01       	movw	r30, r10
     f54:	80 80       	ld	r8, Z
     f56:	91 80       	ldd	r9, Z+1	; 0x01
     f58:	16 ff       	sbrs	r17, 6
     f5a:	03 c0       	rjmp	.+6      	; 0xf62 <vfprintf+0x180>
     f5c:	6f 2d       	mov	r22, r15
     f5e:	70 e0       	ldi	r23, 0x00	; 0
     f60:	02 c0       	rjmp	.+4      	; 0xf66 <vfprintf+0x184>
     f62:	6f ef       	ldi	r22, 0xFF	; 255
     f64:	7f ef       	ldi	r23, 0xFF	; 255
     f66:	c4 01       	movw	r24, r8
     f68:	0e 94 cf 08 	call	0x119e	; 0x119e <strnlen_P>
     f6c:	6c 01       	movw	r12, r24
     f6e:	10 68       	ori	r17, 0x80	; 128
     f70:	51 01       	movw	r10, r2
     f72:	13 fd       	sbrc	r17, 3
     f74:	1c c0       	rjmp	.+56     	; 0xfae <vfprintf+0x1cc>
     f76:	06 c0       	rjmp	.+12     	; 0xf84 <vfprintf+0x1a2>
     f78:	80 e2       	ldi	r24, 0x20	; 32
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	b3 01       	movw	r22, r6
     f7e:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
     f82:	ea 94       	dec	r14
     f84:	8e 2d       	mov	r24, r14
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	c8 16       	cp	r12, r24
     f8a:	d9 06       	cpc	r13, r25
     f8c:	a8 f3       	brcs	.-22     	; 0xf78 <vfprintf+0x196>
     f8e:	0f c0       	rjmp	.+30     	; 0xfae <vfprintf+0x1cc>
     f90:	f4 01       	movw	r30, r8
     f92:	17 fd       	sbrc	r17, 7
     f94:	85 91       	lpm	r24, Z+
     f96:	17 ff       	sbrs	r17, 7
     f98:	81 91       	ld	r24, Z+
     f9a:	4f 01       	movw	r8, r30
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	b3 01       	movw	r22, r6
     fa0:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
     fa4:	e1 10       	cpse	r14, r1
     fa6:	ea 94       	dec	r14
     fa8:	08 94       	sec
     faa:	c1 08       	sbc	r12, r1
     fac:	d1 08       	sbc	r13, r1
     fae:	c1 14       	cp	r12, r1
     fb0:	d1 04       	cpc	r13, r1
     fb2:	71 f7       	brne	.-36     	; 0xf90 <vfprintf+0x1ae>
     fb4:	e7 c0       	rjmp	.+462    	; 0x1184 <vfprintf+0x3a2>
     fb6:	84 36       	cpi	r24, 0x64	; 100
     fb8:	11 f0       	breq	.+4      	; 0xfbe <vfprintf+0x1dc>
     fba:	89 36       	cpi	r24, 0x69	; 105
     fbc:	51 f5       	brne	.+84     	; 0x1012 <vfprintf+0x230>
     fbe:	f5 01       	movw	r30, r10
     fc0:	17 ff       	sbrs	r17, 7
     fc2:	07 c0       	rjmp	.+14     	; 0xfd2 <vfprintf+0x1f0>
     fc4:	80 81       	ld	r24, Z
     fc6:	91 81       	ldd	r25, Z+1	; 0x01
     fc8:	a2 81       	ldd	r26, Z+2	; 0x02
     fca:	b3 81       	ldd	r27, Z+3	; 0x03
     fcc:	24 e0       	ldi	r18, 0x04	; 4
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	08 c0       	rjmp	.+16     	; 0xfe2 <vfprintf+0x200>
     fd2:	80 81       	ld	r24, Z
     fd4:	91 81       	ldd	r25, Z+1	; 0x01
     fd6:	aa 27       	eor	r26, r26
     fd8:	97 fd       	sbrc	r25, 7
     fda:	a0 95       	com	r26
     fdc:	ba 2f       	mov	r27, r26
     fde:	22 e0       	ldi	r18, 0x02	; 2
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	a2 0e       	add	r10, r18
     fe4:	b3 1e       	adc	r11, r19
     fe6:	01 2f       	mov	r16, r17
     fe8:	0f 76       	andi	r16, 0x6F	; 111
     fea:	b7 ff       	sbrs	r27, 7
     fec:	08 c0       	rjmp	.+16     	; 0xffe <vfprintf+0x21c>
     fee:	b0 95       	com	r27
     ff0:	a0 95       	com	r26
     ff2:	90 95       	com	r25
     ff4:	81 95       	neg	r24
     ff6:	9f 4f       	sbci	r25, 0xFF	; 255
     ff8:	af 4f       	sbci	r26, 0xFF	; 255
     ffa:	bf 4f       	sbci	r27, 0xFF	; 255
     ffc:	00 68       	ori	r16, 0x80	; 128
     ffe:	bc 01       	movw	r22, r24
    1000:	cd 01       	movw	r24, r26
    1002:	a2 01       	movw	r20, r4
    1004:	2a e0       	ldi	r18, 0x0A	; 10
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	0e 94 11 09 	call	0x1222	; 0x1222 <__ultoa_invert>
    100c:	d8 2e       	mov	r13, r24
    100e:	d4 18       	sub	r13, r4
    1010:	3f c0       	rjmp	.+126    	; 0x1090 <vfprintf+0x2ae>
    1012:	85 37       	cpi	r24, 0x75	; 117
    1014:	21 f4       	brne	.+8      	; 0x101e <vfprintf+0x23c>
    1016:	1f 7e       	andi	r17, 0xEF	; 239
    1018:	2a e0       	ldi	r18, 0x0A	; 10
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	20 c0       	rjmp	.+64     	; 0x105e <vfprintf+0x27c>
    101e:	19 7f       	andi	r17, 0xF9	; 249
    1020:	8f 36       	cpi	r24, 0x6F	; 111
    1022:	a9 f0       	breq	.+42     	; 0x104e <vfprintf+0x26c>
    1024:	80 37       	cpi	r24, 0x70	; 112
    1026:	20 f4       	brcc	.+8      	; 0x1030 <vfprintf+0x24e>
    1028:	88 35       	cpi	r24, 0x58	; 88
    102a:	09 f0       	breq	.+2      	; 0x102e <vfprintf+0x24c>
    102c:	ae c0       	rjmp	.+348    	; 0x118a <vfprintf+0x3a8>
    102e:	0b c0       	rjmp	.+22     	; 0x1046 <vfprintf+0x264>
    1030:	80 37       	cpi	r24, 0x70	; 112
    1032:	21 f0       	breq	.+8      	; 0x103c <vfprintf+0x25a>
    1034:	88 37       	cpi	r24, 0x78	; 120
    1036:	09 f0       	breq	.+2      	; 0x103a <vfprintf+0x258>
    1038:	a8 c0       	rjmp	.+336    	; 0x118a <vfprintf+0x3a8>
    103a:	01 c0       	rjmp	.+2      	; 0x103e <vfprintf+0x25c>
    103c:	10 61       	ori	r17, 0x10	; 16
    103e:	14 ff       	sbrs	r17, 4
    1040:	09 c0       	rjmp	.+18     	; 0x1054 <vfprintf+0x272>
    1042:	14 60       	ori	r17, 0x04	; 4
    1044:	07 c0       	rjmp	.+14     	; 0x1054 <vfprintf+0x272>
    1046:	14 ff       	sbrs	r17, 4
    1048:	08 c0       	rjmp	.+16     	; 0x105a <vfprintf+0x278>
    104a:	16 60       	ori	r17, 0x06	; 6
    104c:	06 c0       	rjmp	.+12     	; 0x105a <vfprintf+0x278>
    104e:	28 e0       	ldi	r18, 0x08	; 8
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	05 c0       	rjmp	.+10     	; 0x105e <vfprintf+0x27c>
    1054:	20 e1       	ldi	r18, 0x10	; 16
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	02 c0       	rjmp	.+4      	; 0x105e <vfprintf+0x27c>
    105a:	20 e1       	ldi	r18, 0x10	; 16
    105c:	32 e0       	ldi	r19, 0x02	; 2
    105e:	f5 01       	movw	r30, r10
    1060:	17 ff       	sbrs	r17, 7
    1062:	07 c0       	rjmp	.+14     	; 0x1072 <vfprintf+0x290>
    1064:	60 81       	ld	r22, Z
    1066:	71 81       	ldd	r23, Z+1	; 0x01
    1068:	82 81       	ldd	r24, Z+2	; 0x02
    106a:	93 81       	ldd	r25, Z+3	; 0x03
    106c:	44 e0       	ldi	r20, 0x04	; 4
    106e:	50 e0       	ldi	r21, 0x00	; 0
    1070:	06 c0       	rjmp	.+12     	; 0x107e <vfprintf+0x29c>
    1072:	60 81       	ld	r22, Z
    1074:	71 81       	ldd	r23, Z+1	; 0x01
    1076:	80 e0       	ldi	r24, 0x00	; 0
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	42 e0       	ldi	r20, 0x02	; 2
    107c:	50 e0       	ldi	r21, 0x00	; 0
    107e:	a4 0e       	add	r10, r20
    1080:	b5 1e       	adc	r11, r21
    1082:	a2 01       	movw	r20, r4
    1084:	0e 94 11 09 	call	0x1222	; 0x1222 <__ultoa_invert>
    1088:	d8 2e       	mov	r13, r24
    108a:	d4 18       	sub	r13, r4
    108c:	01 2f       	mov	r16, r17
    108e:	0f 77       	andi	r16, 0x7F	; 127
    1090:	06 ff       	sbrs	r16, 6
    1092:	09 c0       	rjmp	.+18     	; 0x10a6 <vfprintf+0x2c4>
    1094:	0e 7f       	andi	r16, 0xFE	; 254
    1096:	df 14       	cp	r13, r15
    1098:	30 f4       	brcc	.+12     	; 0x10a6 <vfprintf+0x2c4>
    109a:	04 ff       	sbrs	r16, 4
    109c:	06 c0       	rjmp	.+12     	; 0x10aa <vfprintf+0x2c8>
    109e:	02 fd       	sbrc	r16, 2
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <vfprintf+0x2c8>
    10a2:	0f 7e       	andi	r16, 0xEF	; 239
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <vfprintf+0x2c8>
    10a6:	1d 2d       	mov	r17, r13
    10a8:	01 c0       	rjmp	.+2      	; 0x10ac <vfprintf+0x2ca>
    10aa:	1f 2d       	mov	r17, r15
    10ac:	80 2f       	mov	r24, r16
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	04 ff       	sbrs	r16, 4
    10b2:	0c c0       	rjmp	.+24     	; 0x10cc <vfprintf+0x2ea>
    10b4:	fe 01       	movw	r30, r28
    10b6:	ed 0d       	add	r30, r13
    10b8:	f1 1d       	adc	r31, r1
    10ba:	20 81       	ld	r18, Z
    10bc:	20 33       	cpi	r18, 0x30	; 48
    10be:	11 f4       	brne	.+4      	; 0x10c4 <vfprintf+0x2e2>
    10c0:	09 7e       	andi	r16, 0xE9	; 233
    10c2:	09 c0       	rjmp	.+18     	; 0x10d6 <vfprintf+0x2f4>
    10c4:	02 ff       	sbrs	r16, 2
    10c6:	06 c0       	rjmp	.+12     	; 0x10d4 <vfprintf+0x2f2>
    10c8:	1e 5f       	subi	r17, 0xFE	; 254
    10ca:	05 c0       	rjmp	.+10     	; 0x10d6 <vfprintf+0x2f4>
    10cc:	86 78       	andi	r24, 0x86	; 134
    10ce:	90 70       	andi	r25, 0x00	; 0
    10d0:	00 97       	sbiw	r24, 0x00	; 0
    10d2:	09 f0       	breq	.+2      	; 0x10d6 <vfprintf+0x2f4>
    10d4:	1f 5f       	subi	r17, 0xFF	; 255
    10d6:	80 2e       	mov	r8, r16
    10d8:	99 24       	eor	r9, r9
    10da:	03 fd       	sbrc	r16, 3
    10dc:	12 c0       	rjmp	.+36     	; 0x1102 <vfprintf+0x320>
    10de:	00 ff       	sbrs	r16, 0
    10e0:	0d c0       	rjmp	.+26     	; 0x10fc <vfprintf+0x31a>
    10e2:	fd 2c       	mov	r15, r13
    10e4:	1e 15       	cp	r17, r14
    10e6:	50 f4       	brcc	.+20     	; 0x10fc <vfprintf+0x31a>
    10e8:	fe 0c       	add	r15, r14
    10ea:	f1 1a       	sub	r15, r17
    10ec:	1e 2d       	mov	r17, r14
    10ee:	06 c0       	rjmp	.+12     	; 0x10fc <vfprintf+0x31a>
    10f0:	80 e2       	ldi	r24, 0x20	; 32
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	b3 01       	movw	r22, r6
    10f6:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
    10fa:	1f 5f       	subi	r17, 0xFF	; 255
    10fc:	1e 15       	cp	r17, r14
    10fe:	c0 f3       	brcs	.-16     	; 0x10f0 <vfprintf+0x30e>
    1100:	04 c0       	rjmp	.+8      	; 0x110a <vfprintf+0x328>
    1102:	1e 15       	cp	r17, r14
    1104:	10 f4       	brcc	.+4      	; 0x110a <vfprintf+0x328>
    1106:	e1 1a       	sub	r14, r17
    1108:	01 c0       	rjmp	.+2      	; 0x110c <vfprintf+0x32a>
    110a:	ee 24       	eor	r14, r14
    110c:	84 fe       	sbrs	r8, 4
    110e:	0f c0       	rjmp	.+30     	; 0x112e <vfprintf+0x34c>
    1110:	80 e3       	ldi	r24, 0x30	; 48
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	b3 01       	movw	r22, r6
    1116:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
    111a:	82 fe       	sbrs	r8, 2
    111c:	1f c0       	rjmp	.+62     	; 0x115c <vfprintf+0x37a>
    111e:	81 fe       	sbrs	r8, 1
    1120:	03 c0       	rjmp	.+6      	; 0x1128 <vfprintf+0x346>
    1122:	88 e5       	ldi	r24, 0x58	; 88
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	10 c0       	rjmp	.+32     	; 0x1148 <vfprintf+0x366>
    1128:	88 e7       	ldi	r24, 0x78	; 120
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0d c0       	rjmp	.+26     	; 0x1148 <vfprintf+0x366>
    112e:	c4 01       	movw	r24, r8
    1130:	86 78       	andi	r24, 0x86	; 134
    1132:	90 70       	andi	r25, 0x00	; 0
    1134:	00 97       	sbiw	r24, 0x00	; 0
    1136:	91 f0       	breq	.+36     	; 0x115c <vfprintf+0x37a>
    1138:	81 fc       	sbrc	r8, 1
    113a:	02 c0       	rjmp	.+4      	; 0x1140 <vfprintf+0x35e>
    113c:	80 e2       	ldi	r24, 0x20	; 32
    113e:	01 c0       	rjmp	.+2      	; 0x1142 <vfprintf+0x360>
    1140:	8b e2       	ldi	r24, 0x2B	; 43
    1142:	07 fd       	sbrc	r16, 7
    1144:	8d e2       	ldi	r24, 0x2D	; 45
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	b3 01       	movw	r22, r6
    114a:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
    114e:	06 c0       	rjmp	.+12     	; 0x115c <vfprintf+0x37a>
    1150:	80 e3       	ldi	r24, 0x30	; 48
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	b3 01       	movw	r22, r6
    1156:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
    115a:	fa 94       	dec	r15
    115c:	df 14       	cp	r13, r15
    115e:	c0 f3       	brcs	.-16     	; 0x1150 <vfprintf+0x36e>
    1160:	da 94       	dec	r13
    1162:	f2 01       	movw	r30, r4
    1164:	ed 0d       	add	r30, r13
    1166:	f1 1d       	adc	r31, r1
    1168:	80 81       	ld	r24, Z
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	b3 01       	movw	r22, r6
    116e:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
    1172:	dd 20       	and	r13, r13
    1174:	a9 f7       	brne	.-22     	; 0x1160 <vfprintf+0x37e>
    1176:	06 c0       	rjmp	.+12     	; 0x1184 <vfprintf+0x3a2>
    1178:	80 e2       	ldi	r24, 0x20	; 32
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	b3 01       	movw	r22, r6
    117e:	0e 94 e5 08 	call	0x11ca	; 0x11ca <fputc>
    1182:	ea 94       	dec	r14
    1184:	ee 20       	and	r14, r14
    1186:	c1 f7       	brne	.-16     	; 0x1178 <vfprintf+0x396>
    1188:	40 ce       	rjmp	.-896    	; 0xe0a <vfprintf+0x28>
    118a:	f3 01       	movw	r30, r6
    118c:	86 81       	ldd	r24, Z+6	; 0x06
    118e:	97 81       	ldd	r25, Z+7	; 0x07
    1190:	02 c0       	rjmp	.+4      	; 0x1196 <vfprintf+0x3b4>
    1192:	8f ef       	ldi	r24, 0xFF	; 255
    1194:	9f ef       	ldi	r25, 0xFF	; 255
    1196:	2d 96       	adiw	r28, 0x0d	; 13
    1198:	e2 e1       	ldi	r30, 0x12	; 18
    119a:	0c 94 8b 09 	jmp	0x1316	; 0x1316 <__epilogue_restores__>

0000119e <strnlen_P>:
    119e:	fc 01       	movw	r30, r24
    11a0:	05 90       	lpm	r0, Z+
    11a2:	61 50       	subi	r22, 0x01	; 1
    11a4:	70 40       	sbci	r23, 0x00	; 0
    11a6:	01 10       	cpse	r0, r1
    11a8:	d8 f7       	brcc	.-10     	; 0x11a0 <strnlen_P+0x2>
    11aa:	80 95       	com	r24
    11ac:	90 95       	com	r25
    11ae:	8e 0f       	add	r24, r30
    11b0:	9f 1f       	adc	r25, r31
    11b2:	08 95       	ret

000011b4 <strnlen>:
    11b4:	fc 01       	movw	r30, r24
    11b6:	61 50       	subi	r22, 0x01	; 1
    11b8:	70 40       	sbci	r23, 0x00	; 0
    11ba:	01 90       	ld	r0, Z+
    11bc:	01 10       	cpse	r0, r1
    11be:	d8 f7       	brcc	.-10     	; 0x11b6 <strnlen+0x2>
    11c0:	80 95       	com	r24
    11c2:	90 95       	com	r25
    11c4:	8e 0f       	add	r24, r30
    11c6:	9f 1f       	adc	r25, r31
    11c8:	08 95       	ret

000011ca <fputc>:
    11ca:	0f 93       	push	r16
    11cc:	1f 93       	push	r17
    11ce:	cf 93       	push	r28
    11d0:	df 93       	push	r29
    11d2:	8c 01       	movw	r16, r24
    11d4:	eb 01       	movw	r28, r22
    11d6:	8b 81       	ldd	r24, Y+3	; 0x03
    11d8:	81 ff       	sbrs	r24, 1
    11da:	1b c0       	rjmp	.+54     	; 0x1212 <fputc+0x48>
    11dc:	82 ff       	sbrs	r24, 2
    11de:	0d c0       	rjmp	.+26     	; 0x11fa <fputc+0x30>
    11e0:	2e 81       	ldd	r18, Y+6	; 0x06
    11e2:	3f 81       	ldd	r19, Y+7	; 0x07
    11e4:	8c 81       	ldd	r24, Y+4	; 0x04
    11e6:	9d 81       	ldd	r25, Y+5	; 0x05
    11e8:	28 17       	cp	r18, r24
    11ea:	39 07       	cpc	r19, r25
    11ec:	64 f4       	brge	.+24     	; 0x1206 <fputc+0x3c>
    11ee:	e8 81       	ld	r30, Y
    11f0:	f9 81       	ldd	r31, Y+1	; 0x01
    11f2:	01 93       	st	Z+, r16
    11f4:	f9 83       	std	Y+1, r31	; 0x01
    11f6:	e8 83       	st	Y, r30
    11f8:	06 c0       	rjmp	.+12     	; 0x1206 <fputc+0x3c>
    11fa:	e8 85       	ldd	r30, Y+8	; 0x08
    11fc:	f9 85       	ldd	r31, Y+9	; 0x09
    11fe:	80 2f       	mov	r24, r16
    1200:	09 95       	icall
    1202:	00 97       	sbiw	r24, 0x00	; 0
    1204:	31 f4       	brne	.+12     	; 0x1212 <fputc+0x48>
    1206:	8e 81       	ldd	r24, Y+6	; 0x06
    1208:	9f 81       	ldd	r25, Y+7	; 0x07
    120a:	01 96       	adiw	r24, 0x01	; 1
    120c:	9f 83       	std	Y+7, r25	; 0x07
    120e:	8e 83       	std	Y+6, r24	; 0x06
    1210:	02 c0       	rjmp	.+4      	; 0x1216 <fputc+0x4c>
    1212:	0f ef       	ldi	r16, 0xFF	; 255
    1214:	1f ef       	ldi	r17, 0xFF	; 255
    1216:	c8 01       	movw	r24, r16
    1218:	df 91       	pop	r29
    121a:	cf 91       	pop	r28
    121c:	1f 91       	pop	r17
    121e:	0f 91       	pop	r16
    1220:	08 95       	ret

00001222 <__ultoa_invert>:
    1222:	fa 01       	movw	r30, r20
    1224:	aa 27       	eor	r26, r26
    1226:	28 30       	cpi	r18, 0x08	; 8
    1228:	51 f1       	breq	.+84     	; 0x127e <__ultoa_invert+0x5c>
    122a:	20 31       	cpi	r18, 0x10	; 16
    122c:	81 f1       	breq	.+96     	; 0x128e <__ultoa_invert+0x6c>
    122e:	e8 94       	clt
    1230:	6f 93       	push	r22
    1232:	6e 7f       	andi	r22, 0xFE	; 254
    1234:	6e 5f       	subi	r22, 0xFE	; 254
    1236:	7f 4f       	sbci	r23, 0xFF	; 255
    1238:	8f 4f       	sbci	r24, 0xFF	; 255
    123a:	9f 4f       	sbci	r25, 0xFF	; 255
    123c:	af 4f       	sbci	r26, 0xFF	; 255
    123e:	b1 e0       	ldi	r27, 0x01	; 1
    1240:	3e d0       	rcall	.+124    	; 0x12be <__ultoa_invert+0x9c>
    1242:	b4 e0       	ldi	r27, 0x04	; 4
    1244:	3c d0       	rcall	.+120    	; 0x12be <__ultoa_invert+0x9c>
    1246:	67 0f       	add	r22, r23
    1248:	78 1f       	adc	r23, r24
    124a:	89 1f       	adc	r24, r25
    124c:	9a 1f       	adc	r25, r26
    124e:	a1 1d       	adc	r26, r1
    1250:	68 0f       	add	r22, r24
    1252:	79 1f       	adc	r23, r25
    1254:	8a 1f       	adc	r24, r26
    1256:	91 1d       	adc	r25, r1
    1258:	a1 1d       	adc	r26, r1
    125a:	6a 0f       	add	r22, r26
    125c:	71 1d       	adc	r23, r1
    125e:	81 1d       	adc	r24, r1
    1260:	91 1d       	adc	r25, r1
    1262:	a1 1d       	adc	r26, r1
    1264:	20 d0       	rcall	.+64     	; 0x12a6 <__ultoa_invert+0x84>
    1266:	09 f4       	brne	.+2      	; 0x126a <__ultoa_invert+0x48>
    1268:	68 94       	set
    126a:	3f 91       	pop	r19
    126c:	2a e0       	ldi	r18, 0x0A	; 10
    126e:	26 9f       	mul	r18, r22
    1270:	11 24       	eor	r1, r1
    1272:	30 19       	sub	r19, r0
    1274:	30 5d       	subi	r19, 0xD0	; 208
    1276:	31 93       	st	Z+, r19
    1278:	de f6       	brtc	.-74     	; 0x1230 <__ultoa_invert+0xe>
    127a:	cf 01       	movw	r24, r30
    127c:	08 95       	ret
    127e:	46 2f       	mov	r20, r22
    1280:	47 70       	andi	r20, 0x07	; 7
    1282:	40 5d       	subi	r20, 0xD0	; 208
    1284:	41 93       	st	Z+, r20
    1286:	b3 e0       	ldi	r27, 0x03	; 3
    1288:	0f d0       	rcall	.+30     	; 0x12a8 <__ultoa_invert+0x86>
    128a:	c9 f7       	brne	.-14     	; 0x127e <__ultoa_invert+0x5c>
    128c:	f6 cf       	rjmp	.-20     	; 0x127a <__ultoa_invert+0x58>
    128e:	46 2f       	mov	r20, r22
    1290:	4f 70       	andi	r20, 0x0F	; 15
    1292:	40 5d       	subi	r20, 0xD0	; 208
    1294:	4a 33       	cpi	r20, 0x3A	; 58
    1296:	18 f0       	brcs	.+6      	; 0x129e <__ultoa_invert+0x7c>
    1298:	49 5d       	subi	r20, 0xD9	; 217
    129a:	31 fd       	sbrc	r19, 1
    129c:	40 52       	subi	r20, 0x20	; 32
    129e:	41 93       	st	Z+, r20
    12a0:	02 d0       	rcall	.+4      	; 0x12a6 <__ultoa_invert+0x84>
    12a2:	a9 f7       	brne	.-22     	; 0x128e <__ultoa_invert+0x6c>
    12a4:	ea cf       	rjmp	.-44     	; 0x127a <__ultoa_invert+0x58>
    12a6:	b4 e0       	ldi	r27, 0x04	; 4
    12a8:	a6 95       	lsr	r26
    12aa:	97 95       	ror	r25
    12ac:	87 95       	ror	r24
    12ae:	77 95       	ror	r23
    12b0:	67 95       	ror	r22
    12b2:	ba 95       	dec	r27
    12b4:	c9 f7       	brne	.-14     	; 0x12a8 <__ultoa_invert+0x86>
    12b6:	00 97       	sbiw	r24, 0x00	; 0
    12b8:	61 05       	cpc	r22, r1
    12ba:	71 05       	cpc	r23, r1
    12bc:	08 95       	ret
    12be:	9b 01       	movw	r18, r22
    12c0:	ac 01       	movw	r20, r24
    12c2:	0a 2e       	mov	r0, r26
    12c4:	06 94       	lsr	r0
    12c6:	57 95       	ror	r21
    12c8:	47 95       	ror	r20
    12ca:	37 95       	ror	r19
    12cc:	27 95       	ror	r18
    12ce:	ba 95       	dec	r27
    12d0:	c9 f7       	brne	.-14     	; 0x12c4 <__ultoa_invert+0xa2>
    12d2:	62 0f       	add	r22, r18
    12d4:	73 1f       	adc	r23, r19
    12d6:	84 1f       	adc	r24, r20
    12d8:	95 1f       	adc	r25, r21
    12da:	a0 1d       	adc	r26, r0
    12dc:	08 95       	ret

000012de <__prologue_saves__>:
    12de:	2f 92       	push	r2
    12e0:	3f 92       	push	r3
    12e2:	4f 92       	push	r4
    12e4:	5f 92       	push	r5
    12e6:	6f 92       	push	r6
    12e8:	7f 92       	push	r7
    12ea:	8f 92       	push	r8
    12ec:	9f 92       	push	r9
    12ee:	af 92       	push	r10
    12f0:	bf 92       	push	r11
    12f2:	cf 92       	push	r12
    12f4:	df 92       	push	r13
    12f6:	ef 92       	push	r14
    12f8:	ff 92       	push	r15
    12fa:	0f 93       	push	r16
    12fc:	1f 93       	push	r17
    12fe:	cf 93       	push	r28
    1300:	df 93       	push	r29
    1302:	cd b7       	in	r28, 0x3d	; 61
    1304:	de b7       	in	r29, 0x3e	; 62
    1306:	ca 1b       	sub	r28, r26
    1308:	db 0b       	sbc	r29, r27
    130a:	0f b6       	in	r0, 0x3f	; 63
    130c:	f8 94       	cli
    130e:	de bf       	out	0x3e, r29	; 62
    1310:	0f be       	out	0x3f, r0	; 63
    1312:	cd bf       	out	0x3d, r28	; 61
    1314:	09 94       	ijmp

00001316 <__epilogue_restores__>:
    1316:	2a 88       	ldd	r2, Y+18	; 0x12
    1318:	39 88       	ldd	r3, Y+17	; 0x11
    131a:	48 88       	ldd	r4, Y+16	; 0x10
    131c:	5f 84       	ldd	r5, Y+15	; 0x0f
    131e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1320:	7d 84       	ldd	r7, Y+13	; 0x0d
    1322:	8c 84       	ldd	r8, Y+12	; 0x0c
    1324:	9b 84       	ldd	r9, Y+11	; 0x0b
    1326:	aa 84       	ldd	r10, Y+10	; 0x0a
    1328:	b9 84       	ldd	r11, Y+9	; 0x09
    132a:	c8 84       	ldd	r12, Y+8	; 0x08
    132c:	df 80       	ldd	r13, Y+7	; 0x07
    132e:	ee 80       	ldd	r14, Y+6	; 0x06
    1330:	fd 80       	ldd	r15, Y+5	; 0x05
    1332:	0c 81       	ldd	r16, Y+4	; 0x04
    1334:	1b 81       	ldd	r17, Y+3	; 0x03
    1336:	aa 81       	ldd	r26, Y+2	; 0x02
    1338:	b9 81       	ldd	r27, Y+1	; 0x01
    133a:	ce 0f       	add	r28, r30
    133c:	d1 1d       	adc	r29, r1
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	f8 94       	cli
    1342:	de bf       	out	0x3e, r29	; 62
    1344:	0f be       	out	0x3f, r0	; 63
    1346:	cd bf       	out	0x3d, r28	; 61
    1348:	ed 01       	movw	r28, r26
    134a:	08 95       	ret

0000134c <_exit>:
    134c:	f8 94       	cli

0000134e <__stop_program>:
    134e:	ff cf       	rjmp	.-2      	; 0x134e <__stop_program>
