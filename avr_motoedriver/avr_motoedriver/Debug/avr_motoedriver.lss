
avr_motoedriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000384  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000003f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000428  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006f8  00000000  00000000  00000490  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000664  00000000  00000000  00000b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001d9  00000000  00000000  000011ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000013c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000039b  00000000  00000000  000013fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000026  00000000  00000000  00001797  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000017bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 c0 01 	jmp	0x380	; 0x380 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
int pwm_map (int duty);

int main(void)
{
	//setup
	DDRD = 0b11100000;    //port7,6,5=output
  90:	80 ee       	ldi	r24, 0xE0	; 224
  92:	8a b9       	out	0x0a, r24	; 10
	
	DDRC = 0b00001000;
  94:	88 e0       	ldi	r24, 0x08	; 8
  96:	87 b9       	out	0x07, r24	; 7
	
	TCCR0A = 0b10100011;  //highspeedPWM
  98:	83 ea       	ldi	r24, 0xA3	; 163
  9a:	84 bd       	out	0x24, r24	; 36
	
	TCCR0B = 0b00000010;  //1/8,Top=OVF
  9c:	82 e0       	ldi	r24, 0x02	; 2
  9e:	85 bd       	out	0x25, r24	; 37
    while (1) {
		if (power < 0){
			PORTD = 0b01100000;	  //PHASE=high
		}
		else if(power > 0){
			PORTD = 0b11100000;   //PHASE=low
  a0:	c0 ee       	ldi	r28, 0xE0	; 224
	
	
    
    while (1) {
		if (power < 0){
			PORTD = 0b01100000;	  //PHASE=high
  a2:	d0 e6       	ldi	r29, 0x60	; 96
	TCCR0B = 0b00000010;  //1/8,Top=OVF
	
	
    
    while (1) {
		if (power < 0){
  a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  a8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ac:	99 23       	and	r25, r25
  ae:	14 f4       	brge	.+4      	; 0xb4 <main+0x24>
			PORTD = 0b01100000;	  //PHASE=high
  b0:	db b9       	out	0x0b, r29	; 11
  b2:	04 c0       	rjmp	.+8      	; 0xbc <main+0x2c>
		}
		else if(power > 0){
  b4:	18 16       	cp	r1, r24
  b6:	19 06       	cpc	r1, r25
  b8:	0c f4       	brge	.+2      	; 0xbc <main+0x2c>
			PORTD = 0b11100000;   //PHASE=low
  ba:	cb b9       	out	0x0b, r28	; 11
			_delay_ms (1);
			PORTD = 0b11100000;   //PHASE=low
			
			
		}*/
	OCR0A = pwm_map(abs(power));
  bc:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
  c0:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
  c4:	77 23       	and	r23, r23
  c6:	1c f4       	brge	.+6      	; 0xce <main+0x3e>
  c8:	71 95       	neg	r23
  ca:	61 95       	neg	r22
  cc:	71 09       	sbc	r23, r1
  ce:	07 2e       	mov	r0, r23
  d0:	00 0c       	add	r0, r0
  d2:	88 0b       	sbc	r24, r24
  d4:	99 0b       	sbc	r25, r25
  d6:	0e 94 c7 00 	call	0x18e	; 0x18e <__floatsisf>
  da:	2a e9       	ldi	r18, 0x9A	; 154
  dc:	39 e9       	ldi	r19, 0x99	; 153
  de:	49 e9       	ldi	r20, 0x99	; 153
  e0:	5f e3       	ldi	r21, 0x3F	; 63
  e2:	0e 94 2b 01 	call	0x256	; 0x256 <__mulsf3>
  e6:	0e 94 8f 00 	call	0x11e	; 0x11e <__fixsfsi>
  ea:	67 bd       	out	0x27, r22	; 39
	OCR0B = pwm_map(abs(power));
  ec:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
  f0:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
  f4:	77 23       	and	r23, r23
  f6:	1c f4       	brge	.+6      	; 0xfe <main+0x6e>
  f8:	71 95       	neg	r23
  fa:	61 95       	neg	r22
  fc:	71 09       	sbc	r23, r1
  fe:	07 2e       	mov	r0, r23
 100:	00 0c       	add	r0, r0
 102:	88 0b       	sbc	r24, r24
 104:	99 0b       	sbc	r25, r25
 106:	0e 94 c7 00 	call	0x18e	; 0x18e <__floatsisf>
 10a:	2a e9       	ldi	r18, 0x9A	; 154
 10c:	39 e9       	ldi	r19, 0x99	; 153
 10e:	49 e9       	ldi	r20, 0x99	; 153
 110:	5f e3       	ldi	r21, 0x3F	; 63
 112:	0e 94 2b 01 	call	0x256	; 0x256 <__mulsf3>
 116:	0e 94 8f 00 	call	0x11e	; 0x11e <__fixsfsi>
 11a:	68 bd       	out	0x28, r22	; 40
	
	TCCR0B = 0b00000010;  //1/8,Top=OVF
	
	
    
    while (1) {
 11c:	c3 cf       	rjmp	.-122    	; 0xa4 <main+0x14>

0000011e <__fixsfsi>:
 11e:	0e 94 96 00 	call	0x12c	; 0x12c <__fixunssfsi>
 122:	68 94       	set
 124:	b1 11       	cpse	r27, r1
 126:	0c 94 25 01 	jmp	0x24a	; 0x24a <__fp_szero>
 12a:	08 95       	ret

0000012c <__fixunssfsi>:
 12c:	0e 94 0a 01 	call	0x214	; 0x214 <__fp_splitA>
 130:	88 f0       	brcs	.+34     	; 0x154 <__fixunssfsi+0x28>
 132:	9f 57       	subi	r25, 0x7F	; 127
 134:	98 f0       	brcs	.+38     	; 0x15c <__fixunssfsi+0x30>
 136:	b9 2f       	mov	r27, r25
 138:	99 27       	eor	r25, r25
 13a:	b7 51       	subi	r27, 0x17	; 23
 13c:	b0 f0       	brcs	.+44     	; 0x16a <__fixunssfsi+0x3e>
 13e:	e1 f0       	breq	.+56     	; 0x178 <__fixunssfsi+0x4c>
 140:	66 0f       	add	r22, r22
 142:	77 1f       	adc	r23, r23
 144:	88 1f       	adc	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	1a f0       	brmi	.+6      	; 0x150 <__fixunssfsi+0x24>
 14a:	ba 95       	dec	r27
 14c:	c9 f7       	brne	.-14     	; 0x140 <__fixunssfsi+0x14>
 14e:	14 c0       	rjmp	.+40     	; 0x178 <__fixunssfsi+0x4c>
 150:	b1 30       	cpi	r27, 0x01	; 1
 152:	91 f0       	breq	.+36     	; 0x178 <__fixunssfsi+0x4c>
 154:	0e 94 24 01 	call	0x248	; 0x248 <__fp_zero>
 158:	b1 e0       	ldi	r27, 0x01	; 1
 15a:	08 95       	ret
 15c:	0c 94 24 01 	jmp	0x248	; 0x248 <__fp_zero>
 160:	67 2f       	mov	r22, r23
 162:	78 2f       	mov	r23, r24
 164:	88 27       	eor	r24, r24
 166:	b8 5f       	subi	r27, 0xF8	; 248
 168:	39 f0       	breq	.+14     	; 0x178 <__fixunssfsi+0x4c>
 16a:	b9 3f       	cpi	r27, 0xF9	; 249
 16c:	cc f3       	brlt	.-14     	; 0x160 <__fixunssfsi+0x34>
 16e:	86 95       	lsr	r24
 170:	77 95       	ror	r23
 172:	67 95       	ror	r22
 174:	b3 95       	inc	r27
 176:	d9 f7       	brne	.-10     	; 0x16e <__fixunssfsi+0x42>
 178:	3e f4       	brtc	.+14     	; 0x188 <__fixunssfsi+0x5c>
 17a:	90 95       	com	r25
 17c:	80 95       	com	r24
 17e:	70 95       	com	r23
 180:	61 95       	neg	r22
 182:	7f 4f       	sbci	r23, 0xFF	; 255
 184:	8f 4f       	sbci	r24, 0xFF	; 255
 186:	9f 4f       	sbci	r25, 0xFF	; 255
 188:	08 95       	ret

0000018a <__floatunsisf>:
 18a:	e8 94       	clt
 18c:	09 c0       	rjmp	.+18     	; 0x1a0 <__floatsisf+0x12>

0000018e <__floatsisf>:
 18e:	97 fb       	bst	r25, 7
 190:	3e f4       	brtc	.+14     	; 0x1a0 <__floatsisf+0x12>
 192:	90 95       	com	r25
 194:	80 95       	com	r24
 196:	70 95       	com	r23
 198:	61 95       	neg	r22
 19a:	7f 4f       	sbci	r23, 0xFF	; 255
 19c:	8f 4f       	sbci	r24, 0xFF	; 255
 19e:	9f 4f       	sbci	r25, 0xFF	; 255
 1a0:	99 23       	and	r25, r25
 1a2:	a9 f0       	breq	.+42     	; 0x1ce <__floatsisf+0x40>
 1a4:	f9 2f       	mov	r31, r25
 1a6:	96 e9       	ldi	r25, 0x96	; 150
 1a8:	bb 27       	eor	r27, r27
 1aa:	93 95       	inc	r25
 1ac:	f6 95       	lsr	r31
 1ae:	87 95       	ror	r24
 1b0:	77 95       	ror	r23
 1b2:	67 95       	ror	r22
 1b4:	b7 95       	ror	r27
 1b6:	f1 11       	cpse	r31, r1
 1b8:	f8 cf       	rjmp	.-16     	; 0x1aa <__floatsisf+0x1c>
 1ba:	fa f4       	brpl	.+62     	; 0x1fa <__floatsisf+0x6c>
 1bc:	bb 0f       	add	r27, r27
 1be:	11 f4       	brne	.+4      	; 0x1c4 <__floatsisf+0x36>
 1c0:	60 ff       	sbrs	r22, 0
 1c2:	1b c0       	rjmp	.+54     	; 0x1fa <__floatsisf+0x6c>
 1c4:	6f 5f       	subi	r22, 0xFF	; 255
 1c6:	7f 4f       	sbci	r23, 0xFF	; 255
 1c8:	8f 4f       	sbci	r24, 0xFF	; 255
 1ca:	9f 4f       	sbci	r25, 0xFF	; 255
 1cc:	16 c0       	rjmp	.+44     	; 0x1fa <__floatsisf+0x6c>
 1ce:	88 23       	and	r24, r24
 1d0:	11 f0       	breq	.+4      	; 0x1d6 <__floatsisf+0x48>
 1d2:	96 e9       	ldi	r25, 0x96	; 150
 1d4:	11 c0       	rjmp	.+34     	; 0x1f8 <__floatsisf+0x6a>
 1d6:	77 23       	and	r23, r23
 1d8:	21 f0       	breq	.+8      	; 0x1e2 <__floatsisf+0x54>
 1da:	9e e8       	ldi	r25, 0x8E	; 142
 1dc:	87 2f       	mov	r24, r23
 1de:	76 2f       	mov	r23, r22
 1e0:	05 c0       	rjmp	.+10     	; 0x1ec <__floatsisf+0x5e>
 1e2:	66 23       	and	r22, r22
 1e4:	71 f0       	breq	.+28     	; 0x202 <__floatsisf+0x74>
 1e6:	96 e8       	ldi	r25, 0x86	; 134
 1e8:	86 2f       	mov	r24, r22
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	60 e0       	ldi	r22, 0x00	; 0
 1ee:	2a f0       	brmi	.+10     	; 0x1fa <__floatsisf+0x6c>
 1f0:	9a 95       	dec	r25
 1f2:	66 0f       	add	r22, r22
 1f4:	77 1f       	adc	r23, r23
 1f6:	88 1f       	adc	r24, r24
 1f8:	da f7       	brpl	.-10     	; 0x1f0 <__floatsisf+0x62>
 1fa:	88 0f       	add	r24, r24
 1fc:	96 95       	lsr	r25
 1fe:	87 95       	ror	r24
 200:	97 f9       	bld	r25, 7
 202:	08 95       	ret

00000204 <__fp_split3>:
 204:	57 fd       	sbrc	r21, 7
 206:	90 58       	subi	r25, 0x80	; 128
 208:	44 0f       	add	r20, r20
 20a:	55 1f       	adc	r21, r21
 20c:	59 f0       	breq	.+22     	; 0x224 <__fp_splitA+0x10>
 20e:	5f 3f       	cpi	r21, 0xFF	; 255
 210:	71 f0       	breq	.+28     	; 0x22e <__fp_splitA+0x1a>
 212:	47 95       	ror	r20

00000214 <__fp_splitA>:
 214:	88 0f       	add	r24, r24
 216:	97 fb       	bst	r25, 7
 218:	99 1f       	adc	r25, r25
 21a:	61 f0       	breq	.+24     	; 0x234 <__fp_splitA+0x20>
 21c:	9f 3f       	cpi	r25, 0xFF	; 255
 21e:	79 f0       	breq	.+30     	; 0x23e <__fp_splitA+0x2a>
 220:	87 95       	ror	r24
 222:	08 95       	ret
 224:	12 16       	cp	r1, r18
 226:	13 06       	cpc	r1, r19
 228:	14 06       	cpc	r1, r20
 22a:	55 1f       	adc	r21, r21
 22c:	f2 cf       	rjmp	.-28     	; 0x212 <__fp_split3+0xe>
 22e:	46 95       	lsr	r20
 230:	f1 df       	rcall	.-30     	; 0x214 <__fp_splitA>
 232:	08 c0       	rjmp	.+16     	; 0x244 <__fp_splitA+0x30>
 234:	16 16       	cp	r1, r22
 236:	17 06       	cpc	r1, r23
 238:	18 06       	cpc	r1, r24
 23a:	99 1f       	adc	r25, r25
 23c:	f1 cf       	rjmp	.-30     	; 0x220 <__fp_splitA+0xc>
 23e:	86 95       	lsr	r24
 240:	71 05       	cpc	r23, r1
 242:	61 05       	cpc	r22, r1
 244:	08 94       	sec
 246:	08 95       	ret

00000248 <__fp_zero>:
 248:	e8 94       	clt

0000024a <__fp_szero>:
 24a:	bb 27       	eor	r27, r27
 24c:	66 27       	eor	r22, r22
 24e:	77 27       	eor	r23, r23
 250:	cb 01       	movw	r24, r22
 252:	97 f9       	bld	r25, 7
 254:	08 95       	ret

00000256 <__mulsf3>:
 256:	0e 94 3e 01 	call	0x27c	; 0x27c <__mulsf3x>
 25a:	0c 94 af 01 	jmp	0x35e	; 0x35e <__fp_round>
 25e:	0e 94 a1 01 	call	0x342	; 0x342 <__fp_pscA>
 262:	38 f0       	brcs	.+14     	; 0x272 <__mulsf3+0x1c>
 264:	0e 94 a8 01 	call	0x350	; 0x350 <__fp_pscB>
 268:	20 f0       	brcs	.+8      	; 0x272 <__mulsf3+0x1c>
 26a:	95 23       	and	r25, r21
 26c:	11 f0       	breq	.+4      	; 0x272 <__mulsf3+0x1c>
 26e:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_inf>
 272:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__fp_nan>
 276:	11 24       	eor	r1, r1
 278:	0c 94 25 01 	jmp	0x24a	; 0x24a <__fp_szero>

0000027c <__mulsf3x>:
 27c:	0e 94 02 01 	call	0x204	; 0x204 <__fp_split3>
 280:	70 f3       	brcs	.-36     	; 0x25e <__mulsf3+0x8>

00000282 <__mulsf3_pse>:
 282:	95 9f       	mul	r25, r21
 284:	c1 f3       	breq	.-16     	; 0x276 <__mulsf3+0x20>
 286:	95 0f       	add	r25, r21
 288:	50 e0       	ldi	r21, 0x00	; 0
 28a:	55 1f       	adc	r21, r21
 28c:	62 9f       	mul	r22, r18
 28e:	f0 01       	movw	r30, r0
 290:	72 9f       	mul	r23, r18
 292:	bb 27       	eor	r27, r27
 294:	f0 0d       	add	r31, r0
 296:	b1 1d       	adc	r27, r1
 298:	63 9f       	mul	r22, r19
 29a:	aa 27       	eor	r26, r26
 29c:	f0 0d       	add	r31, r0
 29e:	b1 1d       	adc	r27, r1
 2a0:	aa 1f       	adc	r26, r26
 2a2:	64 9f       	mul	r22, r20
 2a4:	66 27       	eor	r22, r22
 2a6:	b0 0d       	add	r27, r0
 2a8:	a1 1d       	adc	r26, r1
 2aa:	66 1f       	adc	r22, r22
 2ac:	82 9f       	mul	r24, r18
 2ae:	22 27       	eor	r18, r18
 2b0:	b0 0d       	add	r27, r0
 2b2:	a1 1d       	adc	r26, r1
 2b4:	62 1f       	adc	r22, r18
 2b6:	73 9f       	mul	r23, r19
 2b8:	b0 0d       	add	r27, r0
 2ba:	a1 1d       	adc	r26, r1
 2bc:	62 1f       	adc	r22, r18
 2be:	83 9f       	mul	r24, r19
 2c0:	a0 0d       	add	r26, r0
 2c2:	61 1d       	adc	r22, r1
 2c4:	22 1f       	adc	r18, r18
 2c6:	74 9f       	mul	r23, r20
 2c8:	33 27       	eor	r19, r19
 2ca:	a0 0d       	add	r26, r0
 2cc:	61 1d       	adc	r22, r1
 2ce:	23 1f       	adc	r18, r19
 2d0:	84 9f       	mul	r24, r20
 2d2:	60 0d       	add	r22, r0
 2d4:	21 1d       	adc	r18, r1
 2d6:	82 2f       	mov	r24, r18
 2d8:	76 2f       	mov	r23, r22
 2da:	6a 2f       	mov	r22, r26
 2dc:	11 24       	eor	r1, r1
 2de:	9f 57       	subi	r25, 0x7F	; 127
 2e0:	50 40       	sbci	r21, 0x00	; 0
 2e2:	9a f0       	brmi	.+38     	; 0x30a <__mulsf3_pse+0x88>
 2e4:	f1 f0       	breq	.+60     	; 0x322 <__mulsf3_pse+0xa0>
 2e6:	88 23       	and	r24, r24
 2e8:	4a f0       	brmi	.+18     	; 0x2fc <__mulsf3_pse+0x7a>
 2ea:	ee 0f       	add	r30, r30
 2ec:	ff 1f       	adc	r31, r31
 2ee:	bb 1f       	adc	r27, r27
 2f0:	66 1f       	adc	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	88 1f       	adc	r24, r24
 2f6:	91 50       	subi	r25, 0x01	; 1
 2f8:	50 40       	sbci	r21, 0x00	; 0
 2fa:	a9 f7       	brne	.-22     	; 0x2e6 <__mulsf3_pse+0x64>
 2fc:	9e 3f       	cpi	r25, 0xFE	; 254
 2fe:	51 05       	cpc	r21, r1
 300:	80 f0       	brcs	.+32     	; 0x322 <__mulsf3_pse+0xa0>
 302:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_inf>
 306:	0c 94 25 01 	jmp	0x24a	; 0x24a <__fp_szero>
 30a:	5f 3f       	cpi	r21, 0xFF	; 255
 30c:	e4 f3       	brlt	.-8      	; 0x306 <__mulsf3_pse+0x84>
 30e:	98 3e       	cpi	r25, 0xE8	; 232
 310:	d4 f3       	brlt	.-12     	; 0x306 <__mulsf3_pse+0x84>
 312:	86 95       	lsr	r24
 314:	77 95       	ror	r23
 316:	67 95       	ror	r22
 318:	b7 95       	ror	r27
 31a:	f7 95       	ror	r31
 31c:	e7 95       	ror	r30
 31e:	9f 5f       	subi	r25, 0xFF	; 255
 320:	c1 f7       	brne	.-16     	; 0x312 <__mulsf3_pse+0x90>
 322:	fe 2b       	or	r31, r30
 324:	88 0f       	add	r24, r24
 326:	91 1d       	adc	r25, r1
 328:	96 95       	lsr	r25
 32a:	87 95       	ror	r24
 32c:	97 f9       	bld	r25, 7
 32e:	08 95       	ret

00000330 <__fp_inf>:
 330:	97 f9       	bld	r25, 7
 332:	9f 67       	ori	r25, 0x7F	; 127
 334:	80 e8       	ldi	r24, 0x80	; 128
 336:	70 e0       	ldi	r23, 0x00	; 0
 338:	60 e0       	ldi	r22, 0x00	; 0
 33a:	08 95       	ret

0000033c <__fp_nan>:
 33c:	9f ef       	ldi	r25, 0xFF	; 255
 33e:	80 ec       	ldi	r24, 0xC0	; 192
 340:	08 95       	ret

00000342 <__fp_pscA>:
 342:	00 24       	eor	r0, r0
 344:	0a 94       	dec	r0
 346:	16 16       	cp	r1, r22
 348:	17 06       	cpc	r1, r23
 34a:	18 06       	cpc	r1, r24
 34c:	09 06       	cpc	r0, r25
 34e:	08 95       	ret

00000350 <__fp_pscB>:
 350:	00 24       	eor	r0, r0
 352:	0a 94       	dec	r0
 354:	12 16       	cp	r1, r18
 356:	13 06       	cpc	r1, r19
 358:	14 06       	cpc	r1, r20
 35a:	05 06       	cpc	r0, r21
 35c:	08 95       	ret

0000035e <__fp_round>:
 35e:	09 2e       	mov	r0, r25
 360:	03 94       	inc	r0
 362:	00 0c       	add	r0, r0
 364:	11 f4       	brne	.+4      	; 0x36a <__fp_round+0xc>
 366:	88 23       	and	r24, r24
 368:	52 f0       	brmi	.+20     	; 0x37e <__fp_round+0x20>
 36a:	bb 0f       	add	r27, r27
 36c:	40 f4       	brcc	.+16     	; 0x37e <__fp_round+0x20>
 36e:	bf 2b       	or	r27, r31
 370:	11 f4       	brne	.+4      	; 0x376 <__fp_round+0x18>
 372:	60 ff       	sbrs	r22, 0
 374:	04 c0       	rjmp	.+8      	; 0x37e <__fp_round+0x20>
 376:	6f 5f       	subi	r22, 0xFF	; 255
 378:	7f 4f       	sbci	r23, 0xFF	; 255
 37a:	8f 4f       	sbci	r24, 0xFF	; 255
 37c:	9f 4f       	sbci	r25, 0xFF	; 255
 37e:	08 95       	ret

00000380 <_exit>:
 380:	f8 94       	cli

00000382 <__stop_program>:
 382:	ff cf       	rjmp	.-2      	; 0x382 <__stop_program>
